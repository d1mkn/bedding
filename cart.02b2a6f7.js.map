{"mappings":"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","sources":["src/js/singleCategorySwiper.js","node_modules/swiper/swiper.esm.js","node_modules/swiper/core/core.js","node_modules/ssr-window/ssr-window.esm.js","node_modules/swiper/shared/utils.js","node_modules/swiper/shared/get-support.js","node_modules/swiper/shared/get-device.js","node_modules/swiper/shared/get-browser.js","node_modules/swiper/core/modules/resize/resize.js","node_modules/swiper/core/modules/observer/observer.js","node_modules/swiper/core/events-emitter.js","node_modules/swiper/core/update/index.js","node_modules/swiper/core/update/updateSize.js","node_modules/swiper/core/update/updateSlides.js","node_modules/swiper/core/update/updateAutoHeight.js","node_modules/swiper/core/update/updateSlidesOffset.js","node_modules/swiper/core/update/updateSlidesProgress.js","node_modules/swiper/core/update/updateProgress.js","node_modules/swiper/core/update/updateSlidesClasses.js","node_modules/swiper/core/update/updateActiveIndex.js","node_modules/swiper/shared/process-lazy-preloader.js","node_modules/swiper/core/update/updateClickedSlide.js","node_modules/swiper/core/translate/index.js","node_modules/swiper/core/translate/getTranslate.js","node_modules/swiper/core/translate/setTranslate.js","node_modules/swiper/core/translate/minTranslate.js","node_modules/swiper/core/translate/maxTranslate.js","node_modules/swiper/core/translate/translateTo.js","node_modules/swiper/core/transition/index.js","node_modules/swiper/core/transition/setTransition.js","node_modules/swiper/core/transition/transitionStart.js","node_modules/swiper/core/transition/transitionEmit.js","node_modules/swiper/core/transition/transitionEnd.js","node_modules/swiper/core/slide/index.js","node_modules/swiper/core/slide/slideTo.js","node_modules/swiper/core/slide/slideToLoop.js","node_modules/swiper/core/slide/slideNext.js","node_modules/swiper/core/slide/slidePrev.js","node_modules/swiper/core/slide/slideReset.js","node_modules/swiper/core/slide/slideToClosest.js","node_modules/swiper/core/slide/slideToClickedSlide.js","node_modules/swiper/core/loop/index.js","node_modules/swiper/core/loop/loopCreate.js","node_modules/swiper/core/loop/loopFix.js","node_modules/swiper/core/loop/loopDestroy.js","node_modules/swiper/core/grab-cursor/index.js","node_modules/swiper/core/grab-cursor/setGrabCursor.js","node_modules/swiper/core/grab-cursor/unsetGrabCursor.js","node_modules/swiper/core/events/index.js","node_modules/swiper/core/events/onTouchStart.js","node_modules/swiper/core/events/onTouchMove.js","node_modules/swiper/core/events/onTouchEnd.js","node_modules/swiper/core/events/onResize.js","node_modules/swiper/core/events/onClick.js","node_modules/swiper/core/events/onScroll.js","node_modules/swiper/core/events/onLoad.js","node_modules/swiper/core/breakpoints/index.js","node_modules/swiper/core/breakpoints/setBreakpoint.js","node_modules/swiper/core/breakpoints/getBreakpoint.js","node_modules/swiper/core/classes/index.js","node_modules/swiper/core/classes/addClasses.js","node_modules/swiper/core/classes/removeClasses.js","node_modules/swiper/core/check-overflow/index.js","node_modules/swiper/core/defaults.js","node_modules/swiper/core/moduleExtendParams.js","node_modules/swiper/modules/virtual/virtual.js","node_modules/swiper/modules/keyboard/keyboard.js","node_modules/swiper/modules/mousewheel/mousewheel.js","node_modules/swiper/modules/navigation/navigation.js","node_modules/swiper/shared/create-element-if-not-defined.js","node_modules/swiper/modules/pagination/pagination.js","node_modules/swiper/shared/classes-to-selector.js","node_modules/swiper/modules/scrollbar/scrollbar.js","node_modules/swiper/modules/parallax/parallax.js","node_modules/swiper/modules/zoom/zoom.js","node_modules/swiper/modules/controller/controller.js","node_modules/swiper/modules/a11y/a11y.js","node_modules/swiper/modules/history/history.js","node_modules/swiper/modules/hash-navigation/hash-navigation.js","node_modules/swiper/modules/autoplay/autoplay.js","node_modules/swiper/modules/thumbs/thumbs.js","node_modules/swiper/modules/free-mode/free-mode.js","node_modules/swiper/modules/manipulation/manipulation.js","node_modules/swiper/modules/manipulation/methods/appendSlide.js","node_modules/swiper/modules/manipulation/methods/prependSlide.js","node_modules/swiper/modules/manipulation/methods/addSlide.js","node_modules/swiper/modules/manipulation/methods/removeSlide.js","node_modules/swiper/modules/manipulation/methods/removeAllSlides.js","node_modules/swiper/modules/effect-fade/effect-fade.js","node_modules/swiper/shared/effect-init.js","node_modules/swiper/shared/effect-target.js","node_modules/swiper/shared/effect-virtual-transition-end.js","node_modules/swiper/modules/effect-cube/effect-cube.js","node_modules/swiper/modules/effect-flip/effect-flip.js","node_modules/swiper/shared/create-shadow.js","node_modules/swiper/modules/effect-coverflow/effect-coverflow.js","node_modules/swiper/modules/effect-creative/effect-creative.js","node_modules/swiper/modules/effect-cards/effect-cards.js"],"sourcesContent":["import Swiper, { Navigation } from 'swiper';\n\nSwiper.use([Navigation]);\n\nconst swiper = new Swiper('.swiper-container', {\n  loop: false,\n\n  navigation: {\n    nextEl: '.swiper-button-next',\n    prevEl: '.swiper-button-prev',\n  },\n\n  breakpoints: {\n    768: {\n      slidesPerView: 'auto',\n      slidesPerGroup: 1,\n    },\n    1240: {\n      slidesPerView: 'auto',\n      slidesPerGroup: 1,\n    },\n  },\n});\n","/**\n * Swiper 9.3.2\n * Most modern mobile touch slider and framework with hardware accelerated transitions\n * https://swiperjs.com\n *\n * Copyright 2014-2023 Vladimir Kharlampidi\n *\n * Released under the MIT License\n *\n * Released on: May 15, 2023\n */\n\nexport { default as Swiper, default } from './core/core.js';\nexport { default as Virtual } from './modules/virtual/virtual.js';\nexport { default as Keyboard } from './modules/keyboard/keyboard.js';\nexport { default as Mousewheel } from './modules/mousewheel/mousewheel.js';\nexport { default as Navigation } from './modules/navigation/navigation.js';\nexport { default as Pagination } from './modules/pagination/pagination.js';\nexport { default as Scrollbar } from './modules/scrollbar/scrollbar.js';\nexport { default as Parallax } from './modules/parallax/parallax.js';\nexport { default as Zoom } from './modules/zoom/zoom.js';\nexport { default as Controller } from './modules/controller/controller.js';\nexport { default as A11y } from './modules/a11y/a11y.js';\nexport { default as History } from './modules/history/history.js';\nexport { default as HashNavigation } from './modules/hash-navigation/hash-navigation.js';\nexport { default as Autoplay } from './modules/autoplay/autoplay.js';\nexport { default as Thumbs } from './modules/thumbs/thumbs.js';\nexport { default as FreeMode } from './modules/free-mode/free-mode.js';\nexport { default as Grid } from './modules/grid/grid.js';\nexport { default as Manipulation } from './modules/manipulation/manipulation.js';\nexport { default as EffectFade } from './modules/effect-fade/effect-fade.js';\nexport { default as EffectCube } from './modules/effect-cube/effect-cube.js';\nexport { default as EffectFlip } from './modules/effect-flip/effect-flip.js';\nexport { default as EffectCoverflow } from './modules/effect-coverflow/effect-coverflow.js';\nexport { default as EffectCreative } from './modules/effect-creative/effect-creative.js';\nexport { default as EffectCards } from './modules/effect-cards/effect-cards.js';","/* eslint no-param-reassign: \"off\" */\nimport { getDocument } from 'ssr-window';\nimport { extend, deleteProps, createElement, elementChildren, elementStyle, elementIndex } from '../shared/utils.js';\nimport { getSupport } from '../shared/get-support.js';\nimport { getDevice } from '../shared/get-device.js';\nimport { getBrowser } from '../shared/get-browser.js';\nimport Resize from './modules/resize/resize.js';\nimport Observer from './modules/observer/observer.js';\nimport eventsEmitter from './events-emitter.js';\nimport update from './update/index.js';\nimport translate from './translate/index.js';\nimport transition from './transition/index.js';\nimport slide from './slide/index.js';\nimport loop from './loop/index.js';\nimport grabCursor from './grab-cursor/index.js';\nimport events from './events/index.js';\nimport breakpoints from './breakpoints/index.js';\nimport classes from './classes/index.js';\nimport checkOverflow from './check-overflow/index.js';\nimport defaults from './defaults.js';\nimport moduleExtendParams from './moduleExtendParams.js';\nimport { processLazyPreloader, preload } from '../shared/process-lazy-preloader.js';\nconst prototypes = {\n  eventsEmitter,\n  update,\n  translate,\n  transition,\n  slide,\n  loop,\n  grabCursor,\n  events,\n  breakpoints,\n  checkOverflow,\n  classes\n};\nconst extendedDefaults = {};\nclass Swiper {\n  constructor(...args) {\n    let el;\n    let params;\n    if (args.length === 1 && args[0].constructor && Object.prototype.toString.call(args[0]).slice(8, -1) === 'Object') {\n      params = args[0];\n    } else {\n      [el, params] = args;\n    }\n    if (!params) params = {};\n    params = extend({}, params);\n    if (el && !params.el) params.el = el;\n    const document = getDocument();\n    if (params.el && typeof params.el === 'string' && document.querySelectorAll(params.el).length > 1) {\n      const swipers = [];\n      document.querySelectorAll(params.el).forEach(containerEl => {\n        const newParams = extend({}, params, {\n          el: containerEl\n        });\n        swipers.push(new Swiper(newParams));\n      });\n      // eslint-disable-next-line no-constructor-return\n      return swipers;\n    }\n\n    // Swiper Instance\n    const swiper = this;\n    swiper.__swiper__ = true;\n    swiper.support = getSupport();\n    swiper.device = getDevice({\n      userAgent: params.userAgent\n    });\n    swiper.browser = getBrowser();\n    swiper.eventsListeners = {};\n    swiper.eventsAnyListeners = [];\n    swiper.modules = [...swiper.__modules__];\n    if (params.modules && Array.isArray(params.modules)) {\n      swiper.modules.push(...params.modules);\n    }\n    const allModulesParams = {};\n    swiper.modules.forEach(mod => {\n      mod({\n        params,\n        swiper,\n        extendParams: moduleExtendParams(params, allModulesParams),\n        on: swiper.on.bind(swiper),\n        once: swiper.once.bind(swiper),\n        off: swiper.off.bind(swiper),\n        emit: swiper.emit.bind(swiper)\n      });\n    });\n\n    // Extend defaults with modules params\n    const swiperParams = extend({}, defaults, allModulesParams);\n\n    // Extend defaults with passed params\n    swiper.params = extend({}, swiperParams, extendedDefaults, params);\n    swiper.originalParams = extend({}, swiper.params);\n    swiper.passedParams = extend({}, params);\n\n    // add event listeners\n    if (swiper.params && swiper.params.on) {\n      Object.keys(swiper.params.on).forEach(eventName => {\n        swiper.on(eventName, swiper.params.on[eventName]);\n      });\n    }\n    if (swiper.params && swiper.params.onAny) {\n      swiper.onAny(swiper.params.onAny);\n    }\n\n    // Extend Swiper\n    Object.assign(swiper, {\n      enabled: swiper.params.enabled,\n      el,\n      // Classes\n      classNames: [],\n      // Slides\n      slides: [],\n      slidesGrid: [],\n      snapGrid: [],\n      slidesSizesGrid: [],\n      // isDirection\n      isHorizontal() {\n        return swiper.params.direction === 'horizontal';\n      },\n      isVertical() {\n        return swiper.params.direction === 'vertical';\n      },\n      // Indexes\n      activeIndex: 0,\n      realIndex: 0,\n      //\n      isBeginning: true,\n      isEnd: false,\n      // Props\n      translate: 0,\n      previousTranslate: 0,\n      progress: 0,\n      velocity: 0,\n      animating: false,\n      cssOverflowAdjustment() {\n        // Returns 0 unless `translate` is > 2**23\n        // Should be subtracted from css values to prevent overflow\n        return Math.trunc(this.translate / 2 ** 23) * 2 ** 23;\n      },\n      // Locks\n      allowSlideNext: swiper.params.allowSlideNext,\n      allowSlidePrev: swiper.params.allowSlidePrev,\n      // Touch Events\n      touchEventsData: {\n        isTouched: undefined,\n        isMoved: undefined,\n        allowTouchCallbacks: undefined,\n        touchStartTime: undefined,\n        isScrolling: undefined,\n        currentTranslate: undefined,\n        startTranslate: undefined,\n        allowThresholdMove: undefined,\n        // Form elements to match\n        focusableElements: swiper.params.focusableElements,\n        // Last click time\n        lastClickTime: 0,\n        clickTimeout: undefined,\n        // Velocities\n        velocities: [],\n        allowMomentumBounce: undefined,\n        startMoving: undefined,\n        evCache: []\n      },\n      // Clicks\n      allowClick: true,\n      // Touches\n      allowTouchMove: swiper.params.allowTouchMove,\n      touches: {\n        startX: 0,\n        startY: 0,\n        currentX: 0,\n        currentY: 0,\n        diff: 0\n      },\n      // Images\n      imagesToLoad: [],\n      imagesLoaded: 0\n    });\n    swiper.emit('_swiper');\n\n    // Init\n    if (swiper.params.init) {\n      swiper.init();\n    }\n\n    // Return app instance\n    // eslint-disable-next-line no-constructor-return\n    return swiper;\n  }\n  getSlideIndex(slideEl) {\n    const {\n      slidesEl,\n      params\n    } = this;\n    const slides = elementChildren(slidesEl, `.${params.slideClass}, swiper-slide`);\n    const firstSlideIndex = elementIndex(slides[0]);\n    return elementIndex(slideEl) - firstSlideIndex;\n  }\n  getSlideIndexByData(index) {\n    return this.getSlideIndex(this.slides.filter(slideEl => slideEl.getAttribute('data-swiper-slide-index') * 1 === index)[0]);\n  }\n  recalcSlides() {\n    const swiper = this;\n    const {\n      slidesEl,\n      params\n    } = swiper;\n    swiper.slides = elementChildren(slidesEl, `.${params.slideClass}, swiper-slide`);\n  }\n  enable() {\n    const swiper = this;\n    if (swiper.enabled) return;\n    swiper.enabled = true;\n    if (swiper.params.grabCursor) {\n      swiper.setGrabCursor();\n    }\n    swiper.emit('enable');\n  }\n  disable() {\n    const swiper = this;\n    if (!swiper.enabled) return;\n    swiper.enabled = false;\n    if (swiper.params.grabCursor) {\n      swiper.unsetGrabCursor();\n    }\n    swiper.emit('disable');\n  }\n  setProgress(progress, speed) {\n    const swiper = this;\n    progress = Math.min(Math.max(progress, 0), 1);\n    const min = swiper.minTranslate();\n    const max = swiper.maxTranslate();\n    const current = (max - min) * progress + min;\n    swiper.translateTo(current, typeof speed === 'undefined' ? 0 : speed);\n    swiper.updateActiveIndex();\n    swiper.updateSlidesClasses();\n  }\n  emitContainerClasses() {\n    const swiper = this;\n    if (!swiper.params._emitClasses || !swiper.el) return;\n    const cls = swiper.el.className.split(' ').filter(className => {\n      return className.indexOf('swiper') === 0 || className.indexOf(swiper.params.containerModifierClass) === 0;\n    });\n    swiper.emit('_containerClasses', cls.join(' '));\n  }\n  getSlideClasses(slideEl) {\n    const swiper = this;\n    if (swiper.destroyed) return '';\n    return slideEl.className.split(' ').filter(className => {\n      return className.indexOf('swiper-slide') === 0 || className.indexOf(swiper.params.slideClass) === 0;\n    }).join(' ');\n  }\n  emitSlidesClasses() {\n    const swiper = this;\n    if (!swiper.params._emitClasses || !swiper.el) return;\n    const updates = [];\n    swiper.slides.forEach(slideEl => {\n      const classNames = swiper.getSlideClasses(slideEl);\n      updates.push({\n        slideEl,\n        classNames\n      });\n      swiper.emit('_slideClass', slideEl, classNames);\n    });\n    swiper.emit('_slideClasses', updates);\n  }\n  slidesPerViewDynamic(view = 'current', exact = false) {\n    const swiper = this;\n    const {\n      params,\n      slides,\n      slidesGrid,\n      slidesSizesGrid,\n      size: swiperSize,\n      activeIndex\n    } = swiper;\n    let spv = 1;\n    if (params.centeredSlides) {\n      let slideSize = slides[activeIndex].swiperSlideSize;\n      let breakLoop;\n      for (let i = activeIndex + 1; i < slides.length; i += 1) {\n        if (slides[i] && !breakLoop) {\n          slideSize += slides[i].swiperSlideSize;\n          spv += 1;\n          if (slideSize > swiperSize) breakLoop = true;\n        }\n      }\n      for (let i = activeIndex - 1; i >= 0; i -= 1) {\n        if (slides[i] && !breakLoop) {\n          slideSize += slides[i].swiperSlideSize;\n          spv += 1;\n          if (slideSize > swiperSize) breakLoop = true;\n        }\n      }\n    } else {\n      // eslint-disable-next-line\n      if (view === 'current') {\n        for (let i = activeIndex + 1; i < slides.length; i += 1) {\n          const slideInView = exact ? slidesGrid[i] + slidesSizesGrid[i] - slidesGrid[activeIndex] < swiperSize : slidesGrid[i] - slidesGrid[activeIndex] < swiperSize;\n          if (slideInView) {\n            spv += 1;\n          }\n        }\n      } else {\n        // previous\n        for (let i = activeIndex - 1; i >= 0; i -= 1) {\n          const slideInView = slidesGrid[activeIndex] - slidesGrid[i] < swiperSize;\n          if (slideInView) {\n            spv += 1;\n          }\n        }\n      }\n    }\n    return spv;\n  }\n  update() {\n    const swiper = this;\n    if (!swiper || swiper.destroyed) return;\n    const {\n      snapGrid,\n      params\n    } = swiper;\n    // Breakpoints\n    if (params.breakpoints) {\n      swiper.setBreakpoint();\n    }\n    [...swiper.el.querySelectorAll('[loading=\"lazy\"]')].forEach(imageEl => {\n      if (imageEl.complete) {\n        processLazyPreloader(swiper, imageEl);\n      }\n    });\n    swiper.updateSize();\n    swiper.updateSlides();\n    swiper.updateProgress();\n    swiper.updateSlidesClasses();\n    function setTranslate() {\n      const translateValue = swiper.rtlTranslate ? swiper.translate * -1 : swiper.translate;\n      const newTranslate = Math.min(Math.max(translateValue, swiper.maxTranslate()), swiper.minTranslate());\n      swiper.setTranslate(newTranslate);\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n    }\n    let translated;\n    if (swiper.params.freeMode && swiper.params.freeMode.enabled) {\n      setTranslate();\n      if (swiper.params.autoHeight) {\n        swiper.updateAutoHeight();\n      }\n    } else {\n      if ((swiper.params.slidesPerView === 'auto' || swiper.params.slidesPerView > 1) && swiper.isEnd && !swiper.params.centeredSlides) {\n        const slides = swiper.virtual && swiper.params.virtual.enabled ? swiper.virtual.slides : swiper.slides;\n        translated = swiper.slideTo(slides.length - 1, 0, false, true);\n      } else {\n        translated = swiper.slideTo(swiper.activeIndex, 0, false, true);\n      }\n      if (!translated) {\n        setTranslate();\n      }\n    }\n    if (params.watchOverflow && snapGrid !== swiper.snapGrid) {\n      swiper.checkOverflow();\n    }\n    swiper.emit('update');\n  }\n  changeDirection(newDirection, needUpdate = true) {\n    const swiper = this;\n    const currentDirection = swiper.params.direction;\n    if (!newDirection) {\n      // eslint-disable-next-line\n      newDirection = currentDirection === 'horizontal' ? 'vertical' : 'horizontal';\n    }\n    if (newDirection === currentDirection || newDirection !== 'horizontal' && newDirection !== 'vertical') {\n      return swiper;\n    }\n    swiper.el.classList.remove(`${swiper.params.containerModifierClass}${currentDirection}`);\n    swiper.el.classList.add(`${swiper.params.containerModifierClass}${newDirection}`);\n    swiper.emitContainerClasses();\n    swiper.params.direction = newDirection;\n    swiper.slides.forEach(slideEl => {\n      if (newDirection === 'vertical') {\n        slideEl.style.width = '';\n      } else {\n        slideEl.style.height = '';\n      }\n    });\n    swiper.emit('changeDirection');\n    if (needUpdate) swiper.update();\n    return swiper;\n  }\n  changeLanguageDirection(direction) {\n    const swiper = this;\n    if (swiper.rtl && direction === 'rtl' || !swiper.rtl && direction === 'ltr') return;\n    swiper.rtl = direction === 'rtl';\n    swiper.rtlTranslate = swiper.params.direction === 'horizontal' && swiper.rtl;\n    if (swiper.rtl) {\n      swiper.el.classList.add(`${swiper.params.containerModifierClass}rtl`);\n      swiper.el.dir = 'rtl';\n    } else {\n      swiper.el.classList.remove(`${swiper.params.containerModifierClass}rtl`);\n      swiper.el.dir = 'ltr';\n    }\n    swiper.update();\n  }\n  mount(element) {\n    const swiper = this;\n    if (swiper.mounted) return true;\n\n    // Find el\n    let el = element || swiper.params.el;\n    if (typeof el === 'string') {\n      el = document.querySelector(el);\n    }\n    if (!el) {\n      return false;\n    }\n    el.swiper = swiper;\n    if (el.shadowEl) {\n      swiper.isElement = true;\n    }\n    const getWrapperSelector = () => {\n      return `.${(swiper.params.wrapperClass || '').trim().split(' ').join('.')}`;\n    };\n    const getWrapper = () => {\n      if (el && el.shadowRoot && el.shadowRoot.querySelector) {\n        const res = el.shadowRoot.querySelector(getWrapperSelector());\n        // Children needs to return slot items\n        return res;\n      }\n      return elementChildren(el, getWrapperSelector())[0];\n    };\n    // Find Wrapper\n    let wrapperEl = getWrapper();\n    if (!wrapperEl && swiper.params.createElements) {\n      wrapperEl = createElement('div', swiper.params.wrapperClass);\n      el.append(wrapperEl);\n      elementChildren(el, `.${swiper.params.slideClass}`).forEach(slideEl => {\n        wrapperEl.append(slideEl);\n      });\n    }\n    Object.assign(swiper, {\n      el,\n      wrapperEl,\n      slidesEl: swiper.isElement ? el : wrapperEl,\n      mounted: true,\n      // RTL\n      rtl: el.dir.toLowerCase() === 'rtl' || elementStyle(el, 'direction') === 'rtl',\n      rtlTranslate: swiper.params.direction === 'horizontal' && (el.dir.toLowerCase() === 'rtl' || elementStyle(el, 'direction') === 'rtl'),\n      wrongRTL: elementStyle(wrapperEl, 'display') === '-webkit-box'\n    });\n    return true;\n  }\n  init(el) {\n    const swiper = this;\n    if (swiper.initialized) return swiper;\n    const mounted = swiper.mount(el);\n    if (mounted === false) return swiper;\n    swiper.emit('beforeInit');\n\n    // Set breakpoint\n    if (swiper.params.breakpoints) {\n      swiper.setBreakpoint();\n    }\n\n    // Add Classes\n    swiper.addClasses();\n\n    // Update size\n    swiper.updateSize();\n\n    // Update slides\n    swiper.updateSlides();\n    if (swiper.params.watchOverflow) {\n      swiper.checkOverflow();\n    }\n\n    // Set Grab Cursor\n    if (swiper.params.grabCursor && swiper.enabled) {\n      swiper.setGrabCursor();\n    }\n\n    // Slide To Initial Slide\n    if (swiper.params.loop && swiper.virtual && swiper.params.virtual.enabled) {\n      swiper.slideTo(swiper.params.initialSlide + swiper.virtual.slidesBefore, 0, swiper.params.runCallbacksOnInit, false, true);\n    } else {\n      swiper.slideTo(swiper.params.initialSlide, 0, swiper.params.runCallbacksOnInit, false, true);\n    }\n\n    // Create loop\n    if (swiper.params.loop) {\n      swiper.loopCreate();\n    }\n\n    // Attach events\n    swiper.attachEvents();\n    [...swiper.el.querySelectorAll('[loading=\"lazy\"]')].forEach(imageEl => {\n      if (imageEl.complete) {\n        processLazyPreloader(swiper, imageEl);\n      } else {\n        imageEl.addEventListener('load', e => {\n          processLazyPreloader(swiper, e.target);\n        });\n      }\n    });\n    preload(swiper);\n\n    // Init Flag\n    swiper.initialized = true;\n    preload(swiper);\n\n    // Emit\n    swiper.emit('init');\n    swiper.emit('afterInit');\n    return swiper;\n  }\n  destroy(deleteInstance = true, cleanStyles = true) {\n    const swiper = this;\n    const {\n      params,\n      el,\n      wrapperEl,\n      slides\n    } = swiper;\n    if (typeof swiper.params === 'undefined' || swiper.destroyed) {\n      return null;\n    }\n    swiper.emit('beforeDestroy');\n\n    // Init Flag\n    swiper.initialized = false;\n\n    // Detach events\n    swiper.detachEvents();\n\n    // Destroy loop\n    if (params.loop) {\n      swiper.loopDestroy();\n    }\n\n    // Cleanup styles\n    if (cleanStyles) {\n      swiper.removeClasses();\n      el.removeAttribute('style');\n      wrapperEl.removeAttribute('style');\n      if (slides && slides.length) {\n        slides.forEach(slideEl => {\n          slideEl.classList.remove(params.slideVisibleClass, params.slideActiveClass, params.slideNextClass, params.slidePrevClass);\n          slideEl.removeAttribute('style');\n          slideEl.removeAttribute('data-swiper-slide-index');\n        });\n      }\n    }\n    swiper.emit('destroy');\n\n    // Detach emitter events\n    Object.keys(swiper.eventsListeners).forEach(eventName => {\n      swiper.off(eventName);\n    });\n    if (deleteInstance !== false) {\n      swiper.el.swiper = null;\n      deleteProps(swiper);\n    }\n    swiper.destroyed = true;\n    return null;\n  }\n  static extendDefaults(newDefaults) {\n    extend(extendedDefaults, newDefaults);\n  }\n  static get extendedDefaults() {\n    return extendedDefaults;\n  }\n  static get defaults() {\n    return defaults;\n  }\n  static installModule(mod) {\n    if (!Swiper.prototype.__modules__) Swiper.prototype.__modules__ = [];\n    const modules = Swiper.prototype.__modules__;\n    if (typeof mod === 'function' && modules.indexOf(mod) < 0) {\n      modules.push(mod);\n    }\n  }\n  static use(module) {\n    if (Array.isArray(module)) {\n      module.forEach(m => Swiper.installModule(m));\n      return Swiper;\n    }\n    Swiper.installModule(module);\n    return Swiper;\n  }\n}\nObject.keys(prototypes).forEach(prototypeGroup => {\n  Object.keys(prototypes[prototypeGroup]).forEach(protoMethod => {\n    Swiper.prototype[protoMethod] = prototypes[prototypeGroup][protoMethod];\n  });\n});\nSwiper.use([Resize, Observer]);\nexport default Swiper;","/**\n * SSR Window 4.0.2\n * Better handling for window object in SSR environment\n * https://github.com/nolimits4web/ssr-window\n *\n * Copyright 2021, Vladimir Kharlampidi\n *\n * Licensed under MIT\n *\n * Released on: December 13, 2021\n */\n/* eslint-disable no-param-reassign */\nfunction isObject(obj) {\n    return (obj !== null &&\n        typeof obj === 'object' &&\n        'constructor' in obj &&\n        obj.constructor === Object);\n}\nfunction extend(target = {}, src = {}) {\n    Object.keys(src).forEach((key) => {\n        if (typeof target[key] === 'undefined')\n            target[key] = src[key];\n        else if (isObject(src[key]) &&\n            isObject(target[key]) &&\n            Object.keys(src[key]).length > 0) {\n            extend(target[key], src[key]);\n        }\n    });\n}\n\nconst ssrDocument = {\n    body: {},\n    addEventListener() { },\n    removeEventListener() { },\n    activeElement: {\n        blur() { },\n        nodeName: '',\n    },\n    querySelector() {\n        return null;\n    },\n    querySelectorAll() {\n        return [];\n    },\n    getElementById() {\n        return null;\n    },\n    createEvent() {\n        return {\n            initEvent() { },\n        };\n    },\n    createElement() {\n        return {\n            children: [],\n            childNodes: [],\n            style: {},\n            setAttribute() { },\n            getElementsByTagName() {\n                return [];\n            },\n        };\n    },\n    createElementNS() {\n        return {};\n    },\n    importNode() {\n        return null;\n    },\n    location: {\n        hash: '',\n        host: '',\n        hostname: '',\n        href: '',\n        origin: '',\n        pathname: '',\n        protocol: '',\n        search: '',\n    },\n};\nfunction getDocument() {\n    const doc = typeof document !== 'undefined' ? document : {};\n    extend(doc, ssrDocument);\n    return doc;\n}\n\nconst ssrWindow = {\n    document: ssrDocument,\n    navigator: {\n        userAgent: '',\n    },\n    location: {\n        hash: '',\n        host: '',\n        hostname: '',\n        href: '',\n        origin: '',\n        pathname: '',\n        protocol: '',\n        search: '',\n    },\n    history: {\n        replaceState() { },\n        pushState() { },\n        go() { },\n        back() { },\n    },\n    CustomEvent: function CustomEvent() {\n        return this;\n    },\n    addEventListener() { },\n    removeEventListener() { },\n    getComputedStyle() {\n        return {\n            getPropertyValue() {\n                return '';\n            },\n        };\n    },\n    Image() { },\n    Date() { },\n    screen: {},\n    setTimeout() { },\n    clearTimeout() { },\n    matchMedia() {\n        return {};\n    },\n    requestAnimationFrame(callback) {\n        if (typeof setTimeout === 'undefined') {\n            callback();\n            return null;\n        }\n        return setTimeout(callback, 0);\n    },\n    cancelAnimationFrame(id) {\n        if (typeof setTimeout === 'undefined') {\n            return;\n        }\n        clearTimeout(id);\n    },\n};\nfunction getWindow() {\n    const win = typeof window !== 'undefined' ? window : {};\n    extend(win, ssrWindow);\n    return win;\n}\n\nexport { extend, getDocument, getWindow, ssrDocument, ssrWindow };\n","import { getWindow, getDocument } from 'ssr-window';\nfunction deleteProps(obj) {\n  const object = obj;\n  Object.keys(object).forEach(key => {\n    try {\n      object[key] = null;\n    } catch (e) {\n      // no getter for object\n    }\n    try {\n      delete object[key];\n    } catch (e) {\n      // something got wrong\n    }\n  });\n}\nfunction nextTick(callback, delay = 0) {\n  return setTimeout(callback, delay);\n}\nfunction now() {\n  return Date.now();\n}\nfunction getComputedStyle(el) {\n  const window = getWindow();\n  let style;\n  if (window.getComputedStyle) {\n    style = window.getComputedStyle(el, null);\n  }\n  if (!style && el.currentStyle) {\n    style = el.currentStyle;\n  }\n  if (!style) {\n    style = el.style;\n  }\n  return style;\n}\nfunction getTranslate(el, axis = 'x') {\n  const window = getWindow();\n  let matrix;\n  let curTransform;\n  let transformMatrix;\n  const curStyle = getComputedStyle(el, null);\n  if (window.WebKitCSSMatrix) {\n    curTransform = curStyle.transform || curStyle.webkitTransform;\n    if (curTransform.split(',').length > 6) {\n      curTransform = curTransform.split(', ').map(a => a.replace(',', '.')).join(', ');\n    }\n    // Some old versions of Webkit choke when 'none' is passed; pass\n    // empty string instead in this case\n    transformMatrix = new window.WebKitCSSMatrix(curTransform === 'none' ? '' : curTransform);\n  } else {\n    transformMatrix = curStyle.MozTransform || curStyle.OTransform || curStyle.MsTransform || curStyle.msTransform || curStyle.transform || curStyle.getPropertyValue('transform').replace('translate(', 'matrix(1, 0, 0, 1,');\n    matrix = transformMatrix.toString().split(',');\n  }\n  if (axis === 'x') {\n    // Latest Chrome and webkits Fix\n    if (window.WebKitCSSMatrix) curTransform = transformMatrix.m41;\n    // Crazy IE10 Matrix\n    else if (matrix.length === 16) curTransform = parseFloat(matrix[12]);\n    // Normal Browsers\n    else curTransform = parseFloat(matrix[4]);\n  }\n  if (axis === 'y') {\n    // Latest Chrome and webkits Fix\n    if (window.WebKitCSSMatrix) curTransform = transformMatrix.m42;\n    // Crazy IE10 Matrix\n    else if (matrix.length === 16) curTransform = parseFloat(matrix[13]);\n    // Normal Browsers\n    else curTransform = parseFloat(matrix[5]);\n  }\n  return curTransform || 0;\n}\nfunction isObject(o) {\n  return typeof o === 'object' && o !== null && o.constructor && Object.prototype.toString.call(o).slice(8, -1) === 'Object';\n}\nfunction isNode(node) {\n  // eslint-disable-next-line\n  if (typeof window !== 'undefined' && typeof window.HTMLElement !== 'undefined') {\n    return node instanceof HTMLElement;\n  }\n  return node && (node.nodeType === 1 || node.nodeType === 11);\n}\nfunction extend(...args) {\n  const to = Object(args[0]);\n  const noExtend = ['__proto__', 'constructor', 'prototype'];\n  for (let i = 1; i < args.length; i += 1) {\n    const nextSource = args[i];\n    if (nextSource !== undefined && nextSource !== null && !isNode(nextSource)) {\n      const keysArray = Object.keys(Object(nextSource)).filter(key => noExtend.indexOf(key) < 0);\n      for (let nextIndex = 0, len = keysArray.length; nextIndex < len; nextIndex += 1) {\n        const nextKey = keysArray[nextIndex];\n        const desc = Object.getOwnPropertyDescriptor(nextSource, nextKey);\n        if (desc !== undefined && desc.enumerable) {\n          if (isObject(to[nextKey]) && isObject(nextSource[nextKey])) {\n            if (nextSource[nextKey].__swiper__) {\n              to[nextKey] = nextSource[nextKey];\n            } else {\n              extend(to[nextKey], nextSource[nextKey]);\n            }\n          } else if (!isObject(to[nextKey]) && isObject(nextSource[nextKey])) {\n            to[nextKey] = {};\n            if (nextSource[nextKey].__swiper__) {\n              to[nextKey] = nextSource[nextKey];\n            } else {\n              extend(to[nextKey], nextSource[nextKey]);\n            }\n          } else {\n            to[nextKey] = nextSource[nextKey];\n          }\n        }\n      }\n    }\n  }\n  return to;\n}\nfunction setCSSProperty(el, varName, varValue) {\n  el.style.setProperty(varName, varValue);\n}\nfunction animateCSSModeScroll({\n  swiper,\n  targetPosition,\n  side\n}) {\n  const window = getWindow();\n  const startPosition = -swiper.translate;\n  let startTime = null;\n  let time;\n  const duration = swiper.params.speed;\n  swiper.wrapperEl.style.scrollSnapType = 'none';\n  window.cancelAnimationFrame(swiper.cssModeFrameID);\n  const dir = targetPosition > startPosition ? 'next' : 'prev';\n  const isOutOfBound = (current, target) => {\n    return dir === 'next' && current >= target || dir === 'prev' && current <= target;\n  };\n  const animate = () => {\n    time = new Date().getTime();\n    if (startTime === null) {\n      startTime = time;\n    }\n    const progress = Math.max(Math.min((time - startTime) / duration, 1), 0);\n    const easeProgress = 0.5 - Math.cos(progress * Math.PI) / 2;\n    let currentPosition = startPosition + easeProgress * (targetPosition - startPosition);\n    if (isOutOfBound(currentPosition, targetPosition)) {\n      currentPosition = targetPosition;\n    }\n    swiper.wrapperEl.scrollTo({\n      [side]: currentPosition\n    });\n    if (isOutOfBound(currentPosition, targetPosition)) {\n      swiper.wrapperEl.style.overflow = 'hidden';\n      swiper.wrapperEl.style.scrollSnapType = '';\n      setTimeout(() => {\n        swiper.wrapperEl.style.overflow = '';\n        swiper.wrapperEl.scrollTo({\n          [side]: currentPosition\n        });\n      });\n      window.cancelAnimationFrame(swiper.cssModeFrameID);\n      return;\n    }\n    swiper.cssModeFrameID = window.requestAnimationFrame(animate);\n  };\n  animate();\n}\nfunction getSlideTransformEl(slideEl) {\n  return slideEl.querySelector('.swiper-slide-transform') || slideEl.shadowEl && slideEl.shadowEl.querySelector('.swiper-slide-transform') || slideEl;\n}\nfunction findElementsInElements(elements = [], selector = '') {\n  const found = [];\n  elements.forEach(el => {\n    found.push(...el.querySelectorAll(selector));\n  });\n  return found;\n}\nfunction elementChildren(element, selector = '') {\n  return [...element.children].filter(el => el.matches(selector));\n}\nfunction createElement(tag, classes = []) {\n  const el = document.createElement(tag);\n  el.classList.add(...(Array.isArray(classes) ? classes : [classes]));\n  return el;\n}\nfunction elementOffset(el) {\n  const window = getWindow();\n  const document = getDocument();\n  const box = el.getBoundingClientRect();\n  const body = document.body;\n  const clientTop = el.clientTop || body.clientTop || 0;\n  const clientLeft = el.clientLeft || body.clientLeft || 0;\n  const scrollTop = el === window ? window.scrollY : el.scrollTop;\n  const scrollLeft = el === window ? window.scrollX : el.scrollLeft;\n  return {\n    top: box.top + scrollTop - clientTop,\n    left: box.left + scrollLeft - clientLeft\n  };\n}\nfunction elementPrevAll(el, selector) {\n  const prevEls = [];\n  while (el.previousElementSibling) {\n    const prev = el.previousElementSibling; // eslint-disable-line\n    if (selector) {\n      if (prev.matches(selector)) prevEls.push(prev);\n    } else prevEls.push(prev);\n    el = prev;\n  }\n  return prevEls;\n}\nfunction elementNextAll(el, selector) {\n  const nextEls = [];\n  while (el.nextElementSibling) {\n    const next = el.nextElementSibling; // eslint-disable-line\n    if (selector) {\n      if (next.matches(selector)) nextEls.push(next);\n    } else nextEls.push(next);\n    el = next;\n  }\n  return nextEls;\n}\nfunction elementStyle(el, prop) {\n  const window = getWindow();\n  return window.getComputedStyle(el, null).getPropertyValue(prop);\n}\nfunction elementIndex(el) {\n  let child = el;\n  let i;\n  if (child) {\n    i = 0;\n    // eslint-disable-next-line\n    while ((child = child.previousSibling) !== null) {\n      if (child.nodeType === 1) i += 1;\n    }\n    return i;\n  }\n  return undefined;\n}\nfunction elementParents(el, selector) {\n  const parents = []; // eslint-disable-line\n  let parent = el.parentElement; // eslint-disable-line\n  while (parent) {\n    if (selector) {\n      if (parent.matches(selector)) parents.push(parent);\n    } else {\n      parents.push(parent);\n    }\n    parent = parent.parentElement;\n  }\n  return parents;\n}\nfunction elementTransitionEnd(el, callback) {\n  function fireCallBack(e) {\n    if (e.target !== el) return;\n    callback.call(el, e);\n    el.removeEventListener('transitionend', fireCallBack);\n  }\n  if (callback) {\n    el.addEventListener('transitionend', fireCallBack);\n  }\n}\nfunction elementOuterSize(el, size, includeMargins) {\n  const window = getWindow();\n  if (includeMargins) {\n    return el[size === 'width' ? 'offsetWidth' : 'offsetHeight'] + parseFloat(window.getComputedStyle(el, null).getPropertyValue(size === 'width' ? 'margin-right' : 'margin-top')) + parseFloat(window.getComputedStyle(el, null).getPropertyValue(size === 'width' ? 'margin-left' : 'margin-bottom'));\n  }\n  return el.offsetWidth;\n}\nexport { animateCSSModeScroll, deleteProps, nextTick, now, getTranslate, isObject, extend, getComputedStyle, setCSSProperty, getSlideTransformEl,\n// dom\nfindElementsInElements, createElement, elementChildren, elementOffset, elementPrevAll, elementNextAll, elementStyle, elementIndex, elementParents, elementTransitionEnd, elementOuterSize };","import { getWindow, getDocument } from 'ssr-window';\nlet support;\nfunction calcSupport() {\n  const window = getWindow();\n  const document = getDocument();\n  return {\n    smoothScroll: document.documentElement && document.documentElement.style && 'scrollBehavior' in document.documentElement.style,\n    touch: !!('ontouchstart' in window || window.DocumentTouch && document instanceof window.DocumentTouch)\n  };\n}\nfunction getSupport() {\n  if (!support) {\n    support = calcSupport();\n  }\n  return support;\n}\nexport { getSupport };","import { getWindow } from 'ssr-window';\nimport { getSupport } from './get-support.js';\nlet deviceCached;\nfunction calcDevice({\n  userAgent\n} = {}) {\n  const support = getSupport();\n  const window = getWindow();\n  const platform = window.navigator.platform;\n  const ua = userAgent || window.navigator.userAgent;\n  const device = {\n    ios: false,\n    android: false\n  };\n  const screenWidth = window.screen.width;\n  const screenHeight = window.screen.height;\n  const android = ua.match(/(Android);?[\\s\\/]+([\\d.]+)?/); // eslint-disable-line\n  let ipad = ua.match(/(iPad).*OS\\s([\\d_]+)/);\n  const ipod = ua.match(/(iPod)(.*OS\\s([\\d_]+))?/);\n  const iphone = !ipad && ua.match(/(iPhone\\sOS|iOS)\\s([\\d_]+)/);\n  const windows = platform === 'Win32';\n  let macos = platform === 'MacIntel';\n\n  // iPadOs 13 fix\n  const iPadScreens = ['1024x1366', '1366x1024', '834x1194', '1194x834', '834x1112', '1112x834', '768x1024', '1024x768', '820x1180', '1180x820', '810x1080', '1080x810'];\n  if (!ipad && macos && support.touch && iPadScreens.indexOf(`${screenWidth}x${screenHeight}`) >= 0) {\n    ipad = ua.match(/(Version)\\/([\\d.]+)/);\n    if (!ipad) ipad = [0, 1, '13_0_0'];\n    macos = false;\n  }\n\n  // Android\n  if (android && !windows) {\n    device.os = 'android';\n    device.android = true;\n  }\n  if (ipad || iphone || ipod) {\n    device.os = 'ios';\n    device.ios = true;\n  }\n\n  // Export object\n  return device;\n}\nfunction getDevice(overrides = {}) {\n  if (!deviceCached) {\n    deviceCached = calcDevice(overrides);\n  }\n  return deviceCached;\n}\nexport { getDevice };","import { getWindow } from 'ssr-window';\nlet browser;\nfunction calcBrowser() {\n  const window = getWindow();\n  let needPerspectiveFix = false;\n  function isSafari() {\n    const ua = window.navigator.userAgent.toLowerCase();\n    return ua.indexOf('safari') >= 0 && ua.indexOf('chrome') < 0 && ua.indexOf('android') < 0;\n  }\n  if (isSafari()) {\n    const ua = String(window.navigator.userAgent);\n    if (ua.includes('Version/')) {\n      const [major, minor] = ua.split('Version/')[1].split(' ')[0].split('.').map(num => Number(num));\n      needPerspectiveFix = major < 16 || major === 16 && minor < 2;\n    }\n  }\n  return {\n    isSafari: needPerspectiveFix || isSafari(),\n    needPerspectiveFix,\n    isWebView: /(iPhone|iPod|iPad).*AppleWebKit(?!.*Safari)/i.test(window.navigator.userAgent)\n  };\n}\nfunction getBrowser() {\n  if (!browser) {\n    browser = calcBrowser();\n  }\n  return browser;\n}\nexport { getBrowser };","import { getWindow } from 'ssr-window';\nexport default function Resize({\n  swiper,\n  on,\n  emit\n}) {\n  const window = getWindow();\n  let observer = null;\n  let animationFrame = null;\n  const resizeHandler = () => {\n    if (!swiper || swiper.destroyed || !swiper.initialized) return;\n    emit('beforeResize');\n    emit('resize');\n  };\n  const createObserver = () => {\n    if (!swiper || swiper.destroyed || !swiper.initialized) return;\n    observer = new ResizeObserver(entries => {\n      animationFrame = window.requestAnimationFrame(() => {\n        const {\n          width,\n          height\n        } = swiper;\n        let newWidth = width;\n        let newHeight = height;\n        entries.forEach(({\n          contentBoxSize,\n          contentRect,\n          target\n        }) => {\n          if (target && target !== swiper.el) return;\n          newWidth = contentRect ? contentRect.width : (contentBoxSize[0] || contentBoxSize).inlineSize;\n          newHeight = contentRect ? contentRect.height : (contentBoxSize[0] || contentBoxSize).blockSize;\n        });\n        if (newWidth !== width || newHeight !== height) {\n          resizeHandler();\n        }\n      });\n    });\n    observer.observe(swiper.el);\n  };\n  const removeObserver = () => {\n    if (animationFrame) {\n      window.cancelAnimationFrame(animationFrame);\n    }\n    if (observer && observer.unobserve && swiper.el) {\n      observer.unobserve(swiper.el);\n      observer = null;\n    }\n  };\n  const orientationChangeHandler = () => {\n    if (!swiper || swiper.destroyed || !swiper.initialized) return;\n    emit('orientationchange');\n  };\n  on('init', () => {\n    if (swiper.params.resizeObserver && typeof window.ResizeObserver !== 'undefined') {\n      createObserver();\n      return;\n    }\n    window.addEventListener('resize', resizeHandler);\n    window.addEventListener('orientationchange', orientationChangeHandler);\n  });\n  on('destroy', () => {\n    removeObserver();\n    window.removeEventListener('resize', resizeHandler);\n    window.removeEventListener('orientationchange', orientationChangeHandler);\n  });\n}","import { getWindow } from 'ssr-window';\nimport { elementParents } from '../../../shared/utils.js';\nexport default function Observer({\n  swiper,\n  extendParams,\n  on,\n  emit\n}) {\n  const observers = [];\n  const window = getWindow();\n  const attach = (target, options = {}) => {\n    const ObserverFunc = window.MutationObserver || window.WebkitMutationObserver;\n    const observer = new ObserverFunc(mutations => {\n      // The observerUpdate event should only be triggered\n      // once despite the number of mutations.  Additional\n      // triggers are redundant and are very costly\n      if (swiper.__preventObserver__) return;\n      if (mutations.length === 1) {\n        emit('observerUpdate', mutations[0]);\n        return;\n      }\n      const observerUpdate = function observerUpdate() {\n        emit('observerUpdate', mutations[0]);\n      };\n      if (window.requestAnimationFrame) {\n        window.requestAnimationFrame(observerUpdate);\n      } else {\n        window.setTimeout(observerUpdate, 0);\n      }\n    });\n    observer.observe(target, {\n      attributes: typeof options.attributes === 'undefined' ? true : options.attributes,\n      childList: typeof options.childList === 'undefined' ? true : options.childList,\n      characterData: typeof options.characterData === 'undefined' ? true : options.characterData\n    });\n    observers.push(observer);\n  };\n  const init = () => {\n    if (!swiper.params.observer) return;\n    if (swiper.params.observeParents) {\n      const containerParents = elementParents(swiper.el);\n      for (let i = 0; i < containerParents.length; i += 1) {\n        attach(containerParents[i]);\n      }\n    }\n    // Observe container\n    attach(swiper.el, {\n      childList: swiper.params.observeSlideChildren\n    });\n\n    // Observe wrapper\n    attach(swiper.wrapperEl, {\n      attributes: false\n    });\n  };\n  const destroy = () => {\n    observers.forEach(observer => {\n      observer.disconnect();\n    });\n    observers.splice(0, observers.length);\n  };\n  extendParams({\n    observer: false,\n    observeParents: false,\n    observeSlideChildren: false\n  });\n  on('init', init);\n  on('destroy', destroy);\n}","/* eslint-disable no-underscore-dangle */\n\nexport default {\n  on(events, handler, priority) {\n    const self = this;\n    if (!self.eventsListeners || self.destroyed) return self;\n    if (typeof handler !== 'function') return self;\n    const method = priority ? 'unshift' : 'push';\n    events.split(' ').forEach(event => {\n      if (!self.eventsListeners[event]) self.eventsListeners[event] = [];\n      self.eventsListeners[event][method](handler);\n    });\n    return self;\n  },\n  once(events, handler, priority) {\n    const self = this;\n    if (!self.eventsListeners || self.destroyed) return self;\n    if (typeof handler !== 'function') return self;\n    function onceHandler(...args) {\n      self.off(events, onceHandler);\n      if (onceHandler.__emitterProxy) {\n        delete onceHandler.__emitterProxy;\n      }\n      handler.apply(self, args);\n    }\n    onceHandler.__emitterProxy = handler;\n    return self.on(events, onceHandler, priority);\n  },\n  onAny(handler, priority) {\n    const self = this;\n    if (!self.eventsListeners || self.destroyed) return self;\n    if (typeof handler !== 'function') return self;\n    const method = priority ? 'unshift' : 'push';\n    if (self.eventsAnyListeners.indexOf(handler) < 0) {\n      self.eventsAnyListeners[method](handler);\n    }\n    return self;\n  },\n  offAny(handler) {\n    const self = this;\n    if (!self.eventsListeners || self.destroyed) return self;\n    if (!self.eventsAnyListeners) return self;\n    const index = self.eventsAnyListeners.indexOf(handler);\n    if (index >= 0) {\n      self.eventsAnyListeners.splice(index, 1);\n    }\n    return self;\n  },\n  off(events, handler) {\n    const self = this;\n    if (!self.eventsListeners || self.destroyed) return self;\n    if (!self.eventsListeners) return self;\n    events.split(' ').forEach(event => {\n      if (typeof handler === 'undefined') {\n        self.eventsListeners[event] = [];\n      } else if (self.eventsListeners[event]) {\n        self.eventsListeners[event].forEach((eventHandler, index) => {\n          if (eventHandler === handler || eventHandler.__emitterProxy && eventHandler.__emitterProxy === handler) {\n            self.eventsListeners[event].splice(index, 1);\n          }\n        });\n      }\n    });\n    return self;\n  },\n  emit(...args) {\n    const self = this;\n    if (!self.eventsListeners || self.destroyed) return self;\n    if (!self.eventsListeners) return self;\n    let events;\n    let data;\n    let context;\n    if (typeof args[0] === 'string' || Array.isArray(args[0])) {\n      events = args[0];\n      data = args.slice(1, args.length);\n      context = self;\n    } else {\n      events = args[0].events;\n      data = args[0].data;\n      context = args[0].context || self;\n    }\n    data.unshift(context);\n    const eventsArray = Array.isArray(events) ? events : events.split(' ');\n    eventsArray.forEach(event => {\n      if (self.eventsAnyListeners && self.eventsAnyListeners.length) {\n        self.eventsAnyListeners.forEach(eventHandler => {\n          eventHandler.apply(context, [event, ...data]);\n        });\n      }\n      if (self.eventsListeners && self.eventsListeners[event]) {\n        self.eventsListeners[event].forEach(eventHandler => {\n          eventHandler.apply(context, data);\n        });\n      }\n    });\n    return self;\n  }\n};","import updateSize from './updateSize.js';\nimport updateSlides from './updateSlides.js';\nimport updateAutoHeight from './updateAutoHeight.js';\nimport updateSlidesOffset from './updateSlidesOffset.js';\nimport updateSlidesProgress from './updateSlidesProgress.js';\nimport updateProgress from './updateProgress.js';\nimport updateSlidesClasses from './updateSlidesClasses.js';\nimport updateActiveIndex from './updateActiveIndex.js';\nimport updateClickedSlide from './updateClickedSlide.js';\nexport default {\n  updateSize,\n  updateSlides,\n  updateAutoHeight,\n  updateSlidesOffset,\n  updateSlidesProgress,\n  updateProgress,\n  updateSlidesClasses,\n  updateActiveIndex,\n  updateClickedSlide\n};","import { elementStyle } from '../../shared/utils.js';\nexport default function updateSize() {\n  const swiper = this;\n  let width;\n  let height;\n  const el = swiper.el;\n  if (typeof swiper.params.width !== 'undefined' && swiper.params.width !== null) {\n    width = swiper.params.width;\n  } else {\n    width = el.clientWidth;\n  }\n  if (typeof swiper.params.height !== 'undefined' && swiper.params.height !== null) {\n    height = swiper.params.height;\n  } else {\n    height = el.clientHeight;\n  }\n  if (width === 0 && swiper.isHorizontal() || height === 0 && swiper.isVertical()) {\n    return;\n  }\n\n  // Subtract paddings\n  width = width - parseInt(elementStyle(el, 'padding-left') || 0, 10) - parseInt(elementStyle(el, 'padding-right') || 0, 10);\n  height = height - parseInt(elementStyle(el, 'padding-top') || 0, 10) - parseInt(elementStyle(el, 'padding-bottom') || 0, 10);\n  if (Number.isNaN(width)) width = 0;\n  if (Number.isNaN(height)) height = 0;\n  Object.assign(swiper, {\n    width,\n    height,\n    size: swiper.isHorizontal() ? width : height\n  });\n}","import { elementChildren, elementOuterSize, elementStyle, setCSSProperty } from '../../shared/utils.js';\nexport default function updateSlides() {\n  const swiper = this;\n  function getDirectionLabel(property) {\n    if (swiper.isHorizontal()) {\n      return property;\n    }\n    // prettier-ignore\n    return {\n      'width': 'height',\n      'margin-top': 'margin-left',\n      'margin-bottom ': 'margin-right',\n      'margin-left': 'margin-top',\n      'margin-right': 'margin-bottom',\n      'padding-left': 'padding-top',\n      'padding-right': 'padding-bottom',\n      'marginRight': 'marginBottom'\n    }[property];\n  }\n  function getDirectionPropertyValue(node, label) {\n    return parseFloat(node.getPropertyValue(getDirectionLabel(label)) || 0);\n  }\n  const params = swiper.params;\n  const {\n    wrapperEl,\n    slidesEl,\n    size: swiperSize,\n    rtlTranslate: rtl,\n    wrongRTL\n  } = swiper;\n  const isVirtual = swiper.virtual && params.virtual.enabled;\n  const previousSlidesLength = isVirtual ? swiper.virtual.slides.length : swiper.slides.length;\n  const slides = elementChildren(slidesEl, `.${swiper.params.slideClass}, swiper-slide`);\n  const slidesLength = isVirtual ? swiper.virtual.slides.length : slides.length;\n  let snapGrid = [];\n  const slidesGrid = [];\n  const slidesSizesGrid = [];\n  let offsetBefore = params.slidesOffsetBefore;\n  if (typeof offsetBefore === 'function') {\n    offsetBefore = params.slidesOffsetBefore.call(swiper);\n  }\n  let offsetAfter = params.slidesOffsetAfter;\n  if (typeof offsetAfter === 'function') {\n    offsetAfter = params.slidesOffsetAfter.call(swiper);\n  }\n  const previousSnapGridLength = swiper.snapGrid.length;\n  const previousSlidesGridLength = swiper.slidesGrid.length;\n  let spaceBetween = params.spaceBetween;\n  let slidePosition = -offsetBefore;\n  let prevSlideSize = 0;\n  let index = 0;\n  if (typeof swiperSize === 'undefined') {\n    return;\n  }\n  if (typeof spaceBetween === 'string' && spaceBetween.indexOf('%') >= 0) {\n    spaceBetween = parseFloat(spaceBetween.replace('%', '')) / 100 * swiperSize;\n  } else if (typeof spaceBetween === 'string') {\n    spaceBetween = parseFloat(spaceBetween);\n  }\n  swiper.virtualSize = -spaceBetween;\n\n  // reset margins\n  slides.forEach(slideEl => {\n    if (rtl) {\n      slideEl.style.marginLeft = '';\n    } else {\n      slideEl.style.marginRight = '';\n    }\n    slideEl.style.marginBottom = '';\n    slideEl.style.marginTop = '';\n  });\n\n  // reset cssMode offsets\n  if (params.centeredSlides && params.cssMode) {\n    setCSSProperty(wrapperEl, '--swiper-centered-offset-before', '');\n    setCSSProperty(wrapperEl, '--swiper-centered-offset-after', '');\n  }\n  const gridEnabled = params.grid && params.grid.rows > 1 && swiper.grid;\n  if (gridEnabled) {\n    swiper.grid.initSlides(slidesLength);\n  }\n\n  // Calc slides\n  let slideSize;\n  const shouldResetSlideSize = params.slidesPerView === 'auto' && params.breakpoints && Object.keys(params.breakpoints).filter(key => {\n    return typeof params.breakpoints[key].slidesPerView !== 'undefined';\n  }).length > 0;\n  for (let i = 0; i < slidesLength; i += 1) {\n    slideSize = 0;\n    let slide;\n    if (slides[i]) slide = slides[i];\n    if (gridEnabled) {\n      swiper.grid.updateSlide(i, slide, slidesLength, getDirectionLabel);\n    }\n    if (slides[i] && elementStyle(slide, 'display') === 'none') continue; // eslint-disable-line\n\n    if (params.slidesPerView === 'auto') {\n      if (shouldResetSlideSize) {\n        slides[i].style[getDirectionLabel('width')] = ``;\n      }\n      const slideStyles = getComputedStyle(slide);\n      const currentTransform = slide.style.transform;\n      const currentWebKitTransform = slide.style.webkitTransform;\n      if (currentTransform) {\n        slide.style.transform = 'none';\n      }\n      if (currentWebKitTransform) {\n        slide.style.webkitTransform = 'none';\n      }\n      if (params.roundLengths) {\n        slideSize = swiper.isHorizontal() ? elementOuterSize(slide, 'width', true) : elementOuterSize(slide, 'height', true);\n      } else {\n        // eslint-disable-next-line\n        const width = getDirectionPropertyValue(slideStyles, 'width');\n        const paddingLeft = getDirectionPropertyValue(slideStyles, 'padding-left');\n        const paddingRight = getDirectionPropertyValue(slideStyles, 'padding-right');\n        const marginLeft = getDirectionPropertyValue(slideStyles, 'margin-left');\n        const marginRight = getDirectionPropertyValue(slideStyles, 'margin-right');\n        const boxSizing = slideStyles.getPropertyValue('box-sizing');\n        if (boxSizing && boxSizing === 'border-box') {\n          slideSize = width + marginLeft + marginRight;\n        } else {\n          const {\n            clientWidth,\n            offsetWidth\n          } = slide;\n          slideSize = width + paddingLeft + paddingRight + marginLeft + marginRight + (offsetWidth - clientWidth);\n        }\n      }\n      if (currentTransform) {\n        slide.style.transform = currentTransform;\n      }\n      if (currentWebKitTransform) {\n        slide.style.webkitTransform = currentWebKitTransform;\n      }\n      if (params.roundLengths) slideSize = Math.floor(slideSize);\n    } else {\n      slideSize = (swiperSize - (params.slidesPerView - 1) * spaceBetween) / params.slidesPerView;\n      if (params.roundLengths) slideSize = Math.floor(slideSize);\n      if (slides[i]) {\n        slides[i].style[getDirectionLabel('width')] = `${slideSize}px`;\n      }\n    }\n    if (slides[i]) {\n      slides[i].swiperSlideSize = slideSize;\n    }\n    slidesSizesGrid.push(slideSize);\n    if (params.centeredSlides) {\n      slidePosition = slidePosition + slideSize / 2 + prevSlideSize / 2 + spaceBetween;\n      if (prevSlideSize === 0 && i !== 0) slidePosition = slidePosition - swiperSize / 2 - spaceBetween;\n      if (i === 0) slidePosition = slidePosition - swiperSize / 2 - spaceBetween;\n      if (Math.abs(slidePosition) < 1 / 1000) slidePosition = 0;\n      if (params.roundLengths) slidePosition = Math.floor(slidePosition);\n      if (index % params.slidesPerGroup === 0) snapGrid.push(slidePosition);\n      slidesGrid.push(slidePosition);\n    } else {\n      if (params.roundLengths) slidePosition = Math.floor(slidePosition);\n      if ((index - Math.min(swiper.params.slidesPerGroupSkip, index)) % swiper.params.slidesPerGroup === 0) snapGrid.push(slidePosition);\n      slidesGrid.push(slidePosition);\n      slidePosition = slidePosition + slideSize + spaceBetween;\n    }\n    swiper.virtualSize += slideSize + spaceBetween;\n    prevSlideSize = slideSize;\n    index += 1;\n  }\n  swiper.virtualSize = Math.max(swiper.virtualSize, swiperSize) + offsetAfter;\n  if (rtl && wrongRTL && (params.effect === 'slide' || params.effect === 'coverflow')) {\n    wrapperEl.style.width = `${swiper.virtualSize + spaceBetween}px`;\n  }\n  if (params.setWrapperSize) {\n    wrapperEl.style[getDirectionLabel('width')] = `${swiper.virtualSize + spaceBetween}px`;\n  }\n  if (gridEnabled) {\n    swiper.grid.updateWrapperSize(slideSize, snapGrid, getDirectionLabel);\n  }\n\n  // Remove last grid elements depending on width\n  if (!params.centeredSlides) {\n    const newSlidesGrid = [];\n    for (let i = 0; i < snapGrid.length; i += 1) {\n      let slidesGridItem = snapGrid[i];\n      if (params.roundLengths) slidesGridItem = Math.floor(slidesGridItem);\n      if (snapGrid[i] <= swiper.virtualSize - swiperSize) {\n        newSlidesGrid.push(slidesGridItem);\n      }\n    }\n    snapGrid = newSlidesGrid;\n    if (Math.floor(swiper.virtualSize - swiperSize) - Math.floor(snapGrid[snapGrid.length - 1]) > 1) {\n      snapGrid.push(swiper.virtualSize - swiperSize);\n    }\n  }\n  if (isVirtual && params.loop) {\n    const size = slidesSizesGrid[0] + spaceBetween;\n    if (params.slidesPerGroup > 1) {\n      const groups = Math.ceil((swiper.virtual.slidesBefore + swiper.virtual.slidesAfter) / params.slidesPerGroup);\n      const groupSize = size * params.slidesPerGroup;\n      for (let i = 0; i < groups; i += 1) {\n        snapGrid.push(snapGrid[snapGrid.length - 1] + groupSize);\n      }\n    }\n    for (let i = 0; i < swiper.virtual.slidesBefore + swiper.virtual.slidesAfter; i += 1) {\n      if (params.slidesPerGroup === 1) {\n        snapGrid.push(snapGrid[snapGrid.length - 1] + size);\n      }\n      slidesGrid.push(slidesGrid[slidesGrid.length - 1] + size);\n      swiper.virtualSize += size;\n    }\n  }\n  if (snapGrid.length === 0) snapGrid = [0];\n  if (spaceBetween !== 0) {\n    const key = swiper.isHorizontal() && rtl ? 'marginLeft' : getDirectionLabel('marginRight');\n    slides.filter((_, slideIndex) => {\n      if (!params.cssMode || params.loop) return true;\n      if (slideIndex === slides.length - 1) {\n        return false;\n      }\n      return true;\n    }).forEach(slideEl => {\n      slideEl.style[key] = `${spaceBetween}px`;\n    });\n  }\n  if (params.centeredSlides && params.centeredSlidesBounds) {\n    let allSlidesSize = 0;\n    slidesSizesGrid.forEach(slideSizeValue => {\n      allSlidesSize += slideSizeValue + (spaceBetween || 0);\n    });\n    allSlidesSize -= spaceBetween;\n    const maxSnap = allSlidesSize - swiperSize;\n    snapGrid = snapGrid.map(snap => {\n      if (snap < 0) return -offsetBefore;\n      if (snap > maxSnap) return maxSnap + offsetAfter;\n      return snap;\n    });\n  }\n  if (params.centerInsufficientSlides) {\n    let allSlidesSize = 0;\n    slidesSizesGrid.forEach(slideSizeValue => {\n      allSlidesSize += slideSizeValue + (spaceBetween || 0);\n    });\n    allSlidesSize -= spaceBetween;\n    if (allSlidesSize < swiperSize) {\n      const allSlidesOffset = (swiperSize - allSlidesSize) / 2;\n      snapGrid.forEach((snap, snapIndex) => {\n        snapGrid[snapIndex] = snap - allSlidesOffset;\n      });\n      slidesGrid.forEach((snap, snapIndex) => {\n        slidesGrid[snapIndex] = snap + allSlidesOffset;\n      });\n    }\n  }\n  Object.assign(swiper, {\n    slides,\n    snapGrid,\n    slidesGrid,\n    slidesSizesGrid\n  });\n  if (params.centeredSlides && params.cssMode && !params.centeredSlidesBounds) {\n    setCSSProperty(wrapperEl, '--swiper-centered-offset-before', `${-snapGrid[0]}px`);\n    setCSSProperty(wrapperEl, '--swiper-centered-offset-after', `${swiper.size / 2 - slidesSizesGrid[slidesSizesGrid.length - 1] / 2}px`);\n    const addToSnapGrid = -swiper.snapGrid[0];\n    const addToSlidesGrid = -swiper.slidesGrid[0];\n    swiper.snapGrid = swiper.snapGrid.map(v => v + addToSnapGrid);\n    swiper.slidesGrid = swiper.slidesGrid.map(v => v + addToSlidesGrid);\n  }\n  if (slidesLength !== previousSlidesLength) {\n    swiper.emit('slidesLengthChange');\n  }\n  if (snapGrid.length !== previousSnapGridLength) {\n    if (swiper.params.watchOverflow) swiper.checkOverflow();\n    swiper.emit('snapGridLengthChange');\n  }\n  if (slidesGrid.length !== previousSlidesGridLength) {\n    swiper.emit('slidesGridLengthChange');\n  }\n  if (params.watchSlidesProgress) {\n    swiper.updateSlidesOffset();\n  }\n  if (!isVirtual && !params.cssMode && (params.effect === 'slide' || params.effect === 'fade')) {\n    const backFaceHiddenClass = `${params.containerModifierClass}backface-hidden`;\n    const hasClassBackfaceClassAdded = swiper.el.classList.contains(backFaceHiddenClass);\n    if (slidesLength <= params.maxBackfaceHiddenSlides) {\n      if (!hasClassBackfaceClassAdded) swiper.el.classList.add(backFaceHiddenClass);\n    } else if (hasClassBackfaceClassAdded) {\n      swiper.el.classList.remove(backFaceHiddenClass);\n    }\n  }\n}","export default function updateAutoHeight(speed) {\n  const swiper = this;\n  const activeSlides = [];\n  const isVirtual = swiper.virtual && swiper.params.virtual.enabled;\n  let newHeight = 0;\n  let i;\n  if (typeof speed === 'number') {\n    swiper.setTransition(speed);\n  } else if (speed === true) {\n    swiper.setTransition(swiper.params.speed);\n  }\n  const getSlideByIndex = index => {\n    if (isVirtual) {\n      return swiper.slides[swiper.getSlideIndexByData(index)];\n    }\n    return swiper.slides[index];\n  };\n  // Find slides currently in view\n  if (swiper.params.slidesPerView !== 'auto' && swiper.params.slidesPerView > 1) {\n    if (swiper.params.centeredSlides) {\n      (swiper.visibleSlides || []).forEach(slide => {\n        activeSlides.push(slide);\n      });\n    } else {\n      for (i = 0; i < Math.ceil(swiper.params.slidesPerView); i += 1) {\n        const index = swiper.activeIndex + i;\n        if (index > swiper.slides.length && !isVirtual) break;\n        activeSlides.push(getSlideByIndex(index));\n      }\n    }\n  } else {\n    activeSlides.push(getSlideByIndex(swiper.activeIndex));\n  }\n\n  // Find new height from highest slide in view\n  for (i = 0; i < activeSlides.length; i += 1) {\n    if (typeof activeSlides[i] !== 'undefined') {\n      const height = activeSlides[i].offsetHeight;\n      newHeight = height > newHeight ? height : newHeight;\n    }\n  }\n\n  // Update Height\n  if (newHeight || newHeight === 0) swiper.wrapperEl.style.height = `${newHeight}px`;\n}","export default function updateSlidesOffset() {\n  const swiper = this;\n  const slides = swiper.slides;\n  // eslint-disable-next-line\n  const minusOffset = swiper.isElement ? swiper.isHorizontal() ? swiper.wrapperEl.offsetLeft : swiper.wrapperEl.offsetTop : 0;\n  for (let i = 0; i < slides.length; i += 1) {\n    slides[i].swiperSlideOffset = (swiper.isHorizontal() ? slides[i].offsetLeft : slides[i].offsetTop) - minusOffset - swiper.cssOverflowAdjustment();\n  }\n}","export default function updateSlidesProgress(translate = this && this.translate || 0) {\n  const swiper = this;\n  const params = swiper.params;\n  const {\n    slides,\n    rtlTranslate: rtl,\n    snapGrid\n  } = swiper;\n  if (slides.length === 0) return;\n  if (typeof slides[0].swiperSlideOffset === 'undefined') swiper.updateSlidesOffset();\n  let offsetCenter = -translate;\n  if (rtl) offsetCenter = translate;\n\n  // Visible Slides\n  slides.forEach(slideEl => {\n    slideEl.classList.remove(params.slideVisibleClass);\n  });\n  swiper.visibleSlidesIndexes = [];\n  swiper.visibleSlides = [];\n  let spaceBetween = params.spaceBetween;\n  if (typeof spaceBetween === 'string' && spaceBetween.indexOf('%') >= 0) {\n    spaceBetween = parseFloat(spaceBetween.replace('%', '')) / 100 * swiper.size;\n  } else if (typeof spaceBetween === 'string') {\n    spaceBetween = parseFloat(spaceBetween);\n  }\n  for (let i = 0; i < slides.length; i += 1) {\n    const slide = slides[i];\n    let slideOffset = slide.swiperSlideOffset;\n    if (params.cssMode && params.centeredSlides) {\n      slideOffset -= slides[0].swiperSlideOffset;\n    }\n    const slideProgress = (offsetCenter + (params.centeredSlides ? swiper.minTranslate() : 0) - slideOffset) / (slide.swiperSlideSize + spaceBetween);\n    const originalSlideProgress = (offsetCenter - snapGrid[0] + (params.centeredSlides ? swiper.minTranslate() : 0) - slideOffset) / (slide.swiperSlideSize + spaceBetween);\n    const slideBefore = -(offsetCenter - slideOffset);\n    const slideAfter = slideBefore + swiper.slidesSizesGrid[i];\n    const isVisible = slideBefore >= 0 && slideBefore < swiper.size - 1 || slideAfter > 1 && slideAfter <= swiper.size || slideBefore <= 0 && slideAfter >= swiper.size;\n    if (isVisible) {\n      swiper.visibleSlides.push(slide);\n      swiper.visibleSlidesIndexes.push(i);\n      slides[i].classList.add(params.slideVisibleClass);\n    }\n    slide.progress = rtl ? -slideProgress : slideProgress;\n    slide.originalProgress = rtl ? -originalSlideProgress : originalSlideProgress;\n  }\n}","export default function updateProgress(translate) {\n  const swiper = this;\n  if (typeof translate === 'undefined') {\n    const multiplier = swiper.rtlTranslate ? -1 : 1;\n    // eslint-disable-next-line\n    translate = swiper && swiper.translate && swiper.translate * multiplier || 0;\n  }\n  const params = swiper.params;\n  const translatesDiff = swiper.maxTranslate() - swiper.minTranslate();\n  let {\n    progress,\n    isBeginning,\n    isEnd,\n    progressLoop\n  } = swiper;\n  const wasBeginning = isBeginning;\n  const wasEnd = isEnd;\n  if (translatesDiff === 0) {\n    progress = 0;\n    isBeginning = true;\n    isEnd = true;\n  } else {\n    progress = (translate - swiper.minTranslate()) / translatesDiff;\n    const isBeginningRounded = Math.abs(translate - swiper.minTranslate()) < 1;\n    const isEndRounded = Math.abs(translate - swiper.maxTranslate()) < 1;\n    isBeginning = isBeginningRounded || progress <= 0;\n    isEnd = isEndRounded || progress >= 1;\n    if (isBeginningRounded) progress = 0;\n    if (isEndRounded) progress = 1;\n  }\n  if (params.loop) {\n    const firstSlideIndex = swiper.getSlideIndexByData(0);\n    const lastSlideIndex = swiper.getSlideIndexByData(swiper.slides.length - 1);\n    const firstSlideTranslate = swiper.slidesGrid[firstSlideIndex];\n    const lastSlideTranslate = swiper.slidesGrid[lastSlideIndex];\n    const translateMax = swiper.slidesGrid[swiper.slidesGrid.length - 1];\n    const translateAbs = Math.abs(translate);\n    if (translateAbs >= firstSlideTranslate) {\n      progressLoop = (translateAbs - firstSlideTranslate) / translateMax;\n    } else {\n      progressLoop = (translateAbs + translateMax - lastSlideTranslate) / translateMax;\n    }\n    if (progressLoop > 1) progressLoop -= 1;\n  }\n  Object.assign(swiper, {\n    progress,\n    progressLoop,\n    isBeginning,\n    isEnd\n  });\n  if (params.watchSlidesProgress || params.centeredSlides && params.autoHeight) swiper.updateSlidesProgress(translate);\n  if (isBeginning && !wasBeginning) {\n    swiper.emit('reachBeginning toEdge');\n  }\n  if (isEnd && !wasEnd) {\n    swiper.emit('reachEnd toEdge');\n  }\n  if (wasBeginning && !isBeginning || wasEnd && !isEnd) {\n    swiper.emit('fromEdge');\n  }\n  swiper.emit('progress', progress);\n}","import { elementChildren, elementNextAll, elementPrevAll } from '../../shared/utils.js';\nexport default function updateSlidesClasses() {\n  const swiper = this;\n  const {\n    slides,\n    params,\n    slidesEl,\n    activeIndex\n  } = swiper;\n  const isVirtual = swiper.virtual && params.virtual.enabled;\n  const getFilteredSlide = selector => {\n    return elementChildren(slidesEl, `.${params.slideClass}${selector}, swiper-slide${selector}`)[0];\n  };\n  slides.forEach(slideEl => {\n    slideEl.classList.remove(params.slideActiveClass, params.slideNextClass, params.slidePrevClass);\n  });\n  let activeSlide;\n  if (isVirtual) {\n    if (params.loop) {\n      let slideIndex = activeIndex - swiper.virtual.slidesBefore;\n      if (slideIndex < 0) slideIndex = swiper.virtual.slides.length + slideIndex;\n      if (slideIndex >= swiper.virtual.slides.length) slideIndex -= swiper.virtual.slides.length;\n      activeSlide = getFilteredSlide(`[data-swiper-slide-index=\"${slideIndex}\"]`);\n    } else {\n      activeSlide = getFilteredSlide(`[data-swiper-slide-index=\"${activeIndex}\"]`);\n    }\n  } else {\n    activeSlide = slides[activeIndex];\n  }\n  if (activeSlide) {\n    // Active classes\n    activeSlide.classList.add(params.slideActiveClass);\n\n    // Next Slide\n    let nextSlide = elementNextAll(activeSlide, `.${params.slideClass}, swiper-slide`)[0];\n    if (params.loop && !nextSlide) {\n      nextSlide = slides[0];\n    }\n    if (nextSlide) {\n      nextSlide.classList.add(params.slideNextClass);\n    }\n    // Prev Slide\n    let prevSlide = elementPrevAll(activeSlide, `.${params.slideClass}, swiper-slide`)[0];\n    if (params.loop && !prevSlide === 0) {\n      prevSlide = slides[slides.length - 1];\n    }\n    if (prevSlide) {\n      prevSlide.classList.add(params.slidePrevClass);\n    }\n  }\n  swiper.emitSlidesClasses();\n}","import { preload } from '../../shared/process-lazy-preloader.js';\nexport function getActiveIndexByTranslate(swiper) {\n  const {\n    slidesGrid,\n    params\n  } = swiper;\n  const translate = swiper.rtlTranslate ? swiper.translate : -swiper.translate;\n  let activeIndex;\n  for (let i = 0; i < slidesGrid.length; i += 1) {\n    if (typeof slidesGrid[i + 1] !== 'undefined') {\n      if (translate >= slidesGrid[i] && translate < slidesGrid[i + 1] - (slidesGrid[i + 1] - slidesGrid[i]) / 2) {\n        activeIndex = i;\n      } else if (translate >= slidesGrid[i] && translate < slidesGrid[i + 1]) {\n        activeIndex = i + 1;\n      }\n    } else if (translate >= slidesGrid[i]) {\n      activeIndex = i;\n    }\n  }\n  // Normalize slideIndex\n  if (params.normalizeSlideIndex) {\n    if (activeIndex < 0 || typeof activeIndex === 'undefined') activeIndex = 0;\n  }\n  return activeIndex;\n}\nexport default function updateActiveIndex(newActiveIndex) {\n  const swiper = this;\n  const translate = swiper.rtlTranslate ? swiper.translate : -swiper.translate;\n  const {\n    snapGrid,\n    params,\n    activeIndex: previousIndex,\n    realIndex: previousRealIndex,\n    snapIndex: previousSnapIndex\n  } = swiper;\n  let activeIndex = newActiveIndex;\n  let snapIndex;\n  const getVirtualRealIndex = aIndex => {\n    let realIndex = aIndex - swiper.virtual.slidesBefore;\n    if (realIndex < 0) {\n      realIndex = swiper.virtual.slides.length + realIndex;\n    }\n    if (realIndex >= swiper.virtual.slides.length) {\n      realIndex -= swiper.virtual.slides.length;\n    }\n    return realIndex;\n  };\n  if (typeof activeIndex === 'undefined') {\n    activeIndex = getActiveIndexByTranslate(swiper);\n  }\n  if (snapGrid.indexOf(translate) >= 0) {\n    snapIndex = snapGrid.indexOf(translate);\n  } else {\n    const skip = Math.min(params.slidesPerGroupSkip, activeIndex);\n    snapIndex = skip + Math.floor((activeIndex - skip) / params.slidesPerGroup);\n  }\n  if (snapIndex >= snapGrid.length) snapIndex = snapGrid.length - 1;\n  if (activeIndex === previousIndex) {\n    if (snapIndex !== previousSnapIndex) {\n      swiper.snapIndex = snapIndex;\n      swiper.emit('snapIndexChange');\n    }\n    if (swiper.params.loop && swiper.virtual && swiper.params.virtual.enabled) {\n      swiper.realIndex = getVirtualRealIndex(activeIndex);\n    }\n    return;\n  }\n  // Get real index\n  let realIndex;\n  if (swiper.virtual && params.virtual.enabled && params.loop) {\n    realIndex = getVirtualRealIndex(activeIndex);\n  } else if (swiper.slides[activeIndex]) {\n    realIndex = parseInt(swiper.slides[activeIndex].getAttribute('data-swiper-slide-index') || activeIndex, 10);\n  } else {\n    realIndex = activeIndex;\n  }\n  Object.assign(swiper, {\n    previousSnapIndex,\n    snapIndex,\n    previousRealIndex,\n    realIndex,\n    previousIndex,\n    activeIndex\n  });\n  if (swiper.initialized) {\n    preload(swiper);\n  }\n  swiper.emit('activeIndexChange');\n  swiper.emit('snapIndexChange');\n  if (previousRealIndex !== realIndex) {\n    swiper.emit('realIndexChange');\n  }\n  if (swiper.initialized || swiper.params.runCallbacksOnInit) {\n    swiper.emit('slideChange');\n  }\n}","export const processLazyPreloader = (swiper, imageEl) => {\n  if (!swiper || swiper.destroyed || !swiper.params) return;\n  const slideSelector = () => swiper.isElement ? `swiper-slide` : `.${swiper.params.slideClass}`;\n  const slideEl = imageEl.closest(slideSelector());\n  if (slideEl) {\n    const lazyEl = slideEl.querySelector(`.${swiper.params.lazyPreloaderClass}`);\n    if (lazyEl) lazyEl.remove();\n  }\n};\nconst unlazy = (swiper, index) => {\n  if (!swiper.slides[index]) return;\n  const imageEl = swiper.slides[index].querySelector('[loading=\"lazy\"]');\n  if (imageEl) imageEl.removeAttribute('loading');\n};\nexport const preload = swiper => {\n  if (!swiper || swiper.destroyed || !swiper.params) return;\n  let amount = swiper.params.lazyPreloadPrevNext;\n  const len = swiper.slides.length;\n  if (!len || !amount || amount < 0) return;\n  amount = Math.min(amount, len);\n  const slidesPerView = swiper.params.slidesPerView === 'auto' ? swiper.slidesPerViewDynamic() : Math.ceil(swiper.params.slidesPerView);\n  const activeIndex = swiper.activeIndex;\n  const slideIndexLastInView = activeIndex + slidesPerView - 1;\n  if (swiper.params.rewind) {\n    for (let i = activeIndex - amount; i <= slideIndexLastInView + amount; i += 1) {\n      const realIndex = (i % len + len) % len;\n      if (realIndex !== activeIndex && realIndex > slideIndexLastInView) unlazy(swiper, realIndex);\n    }\n  } else {\n    for (let i = Math.max(slideIndexLastInView - amount, 0); i <= Math.min(slideIndexLastInView + amount, len - 1); i += 1) {\n      if (i !== activeIndex && i > slideIndexLastInView) unlazy(swiper, i);\n    }\n  }\n};","export default function updateClickedSlide(e) {\n  const swiper = this;\n  const params = swiper.params;\n  const slide = e.closest(`.${params.slideClass}, swiper-slide`);\n  let slideFound = false;\n  let slideIndex;\n  if (slide) {\n    for (let i = 0; i < swiper.slides.length; i += 1) {\n      if (swiper.slides[i] === slide) {\n        slideFound = true;\n        slideIndex = i;\n        break;\n      }\n    }\n  }\n  if (slide && slideFound) {\n    swiper.clickedSlide = slide;\n    if (swiper.virtual && swiper.params.virtual.enabled) {\n      swiper.clickedIndex = parseInt(slide.getAttribute('data-swiper-slide-index'), 10);\n    } else {\n      swiper.clickedIndex = slideIndex;\n    }\n  } else {\n    swiper.clickedSlide = undefined;\n    swiper.clickedIndex = undefined;\n    return;\n  }\n  if (params.slideToClickedSlide && swiper.clickedIndex !== undefined && swiper.clickedIndex !== swiper.activeIndex) {\n    swiper.slideToClickedSlide();\n  }\n}","import getTranslate from './getTranslate.js';\nimport setTranslate from './setTranslate.js';\nimport minTranslate from './minTranslate.js';\nimport maxTranslate from './maxTranslate.js';\nimport translateTo from './translateTo.js';\nexport default {\n  getTranslate,\n  setTranslate,\n  minTranslate,\n  maxTranslate,\n  translateTo\n};","import { getTranslate } from '../../shared/utils.js';\nexport default function getSwiperTranslate(axis = this.isHorizontal() ? 'x' : 'y') {\n  const swiper = this;\n  const {\n    params,\n    rtlTranslate: rtl,\n    translate,\n    wrapperEl\n  } = swiper;\n  if (params.virtualTranslate) {\n    return rtl ? -translate : translate;\n  }\n  if (params.cssMode) {\n    return translate;\n  }\n  let currentTranslate = getTranslate(wrapperEl, axis);\n  currentTranslate += swiper.cssOverflowAdjustment();\n  if (rtl) currentTranslate = -currentTranslate;\n  return currentTranslate || 0;\n}","export default function setTranslate(translate, byController) {\n  const swiper = this;\n  const {\n    rtlTranslate: rtl,\n    params,\n    wrapperEl,\n    progress\n  } = swiper;\n  let x = 0;\n  let y = 0;\n  const z = 0;\n  if (swiper.isHorizontal()) {\n    x = rtl ? -translate : translate;\n  } else {\n    y = translate;\n  }\n  if (params.roundLengths) {\n    x = Math.floor(x);\n    y = Math.floor(y);\n  }\n  swiper.previousTranslate = swiper.translate;\n  swiper.translate = swiper.isHorizontal() ? x : y;\n  if (params.cssMode) {\n    wrapperEl[swiper.isHorizontal() ? 'scrollLeft' : 'scrollTop'] = swiper.isHorizontal() ? -x : -y;\n  } else if (!params.virtualTranslate) {\n    if (swiper.isHorizontal()) {\n      x -= swiper.cssOverflowAdjustment();\n    } else {\n      y -= swiper.cssOverflowAdjustment();\n    }\n    wrapperEl.style.transform = `translate3d(${x}px, ${y}px, ${z}px)`;\n  }\n\n  // Check if we need to update progress\n  let newProgress;\n  const translatesDiff = swiper.maxTranslate() - swiper.minTranslate();\n  if (translatesDiff === 0) {\n    newProgress = 0;\n  } else {\n    newProgress = (translate - swiper.minTranslate()) / translatesDiff;\n  }\n  if (newProgress !== progress) {\n    swiper.updateProgress(translate);\n  }\n  swiper.emit('setTranslate', swiper.translate, byController);\n}","export default function minTranslate() {\n  return -this.snapGrid[0];\n}","export default function maxTranslate() {\n  return -this.snapGrid[this.snapGrid.length - 1];\n}","import { animateCSSModeScroll } from '../../shared/utils.js';\nexport default function translateTo(translate = 0, speed = this.params.speed, runCallbacks = true, translateBounds = true, internal) {\n  const swiper = this;\n  const {\n    params,\n    wrapperEl\n  } = swiper;\n  if (swiper.animating && params.preventInteractionOnTransition) {\n    return false;\n  }\n  const minTranslate = swiper.minTranslate();\n  const maxTranslate = swiper.maxTranslate();\n  let newTranslate;\n  if (translateBounds && translate > minTranslate) newTranslate = minTranslate;else if (translateBounds && translate < maxTranslate) newTranslate = maxTranslate;else newTranslate = translate;\n\n  // Update progress\n  swiper.updateProgress(newTranslate);\n  if (params.cssMode) {\n    const isH = swiper.isHorizontal();\n    if (speed === 0) {\n      wrapperEl[isH ? 'scrollLeft' : 'scrollTop'] = -newTranslate;\n    } else {\n      if (!swiper.support.smoothScroll) {\n        animateCSSModeScroll({\n          swiper,\n          targetPosition: -newTranslate,\n          side: isH ? 'left' : 'top'\n        });\n        return true;\n      }\n      wrapperEl.scrollTo({\n        [isH ? 'left' : 'top']: -newTranslate,\n        behavior: 'smooth'\n      });\n    }\n    return true;\n  }\n  if (speed === 0) {\n    swiper.setTransition(0);\n    swiper.setTranslate(newTranslate);\n    if (runCallbacks) {\n      swiper.emit('beforeTransitionStart', speed, internal);\n      swiper.emit('transitionEnd');\n    }\n  } else {\n    swiper.setTransition(speed);\n    swiper.setTranslate(newTranslate);\n    if (runCallbacks) {\n      swiper.emit('beforeTransitionStart', speed, internal);\n      swiper.emit('transitionStart');\n    }\n    if (!swiper.animating) {\n      swiper.animating = true;\n      if (!swiper.onTranslateToWrapperTransitionEnd) {\n        swiper.onTranslateToWrapperTransitionEnd = function transitionEnd(e) {\n          if (!swiper || swiper.destroyed) return;\n          if (e.target !== this) return;\n          swiper.wrapperEl.removeEventListener('transitionend', swiper.onTranslateToWrapperTransitionEnd);\n          swiper.onTranslateToWrapperTransitionEnd = null;\n          delete swiper.onTranslateToWrapperTransitionEnd;\n          if (runCallbacks) {\n            swiper.emit('transitionEnd');\n          }\n        };\n      }\n      swiper.wrapperEl.addEventListener('transitionend', swiper.onTranslateToWrapperTransitionEnd);\n    }\n  }\n  return true;\n}","import setTransition from './setTransition.js';\nimport transitionStart from './transitionStart.js';\nimport transitionEnd from './transitionEnd.js';\nexport default {\n  setTransition,\n  transitionStart,\n  transitionEnd\n};","export default function setTransition(duration, byController) {\n  const swiper = this;\n  if (!swiper.params.cssMode) {\n    swiper.wrapperEl.style.transitionDuration = `${duration}ms`;\n  }\n  swiper.emit('setTransition', duration, byController);\n}","import transitionEmit from './transitionEmit.js';\nexport default function transitionStart(runCallbacks = true, direction) {\n  const swiper = this;\n  const {\n    params\n  } = swiper;\n  if (params.cssMode) return;\n  if (params.autoHeight) {\n    swiper.updateAutoHeight();\n  }\n  transitionEmit({\n    swiper,\n    runCallbacks,\n    direction,\n    step: 'Start'\n  });\n}","export default function transitionEmit({\n  swiper,\n  runCallbacks,\n  direction,\n  step\n}) {\n  const {\n    activeIndex,\n    previousIndex\n  } = swiper;\n  let dir = direction;\n  if (!dir) {\n    if (activeIndex > previousIndex) dir = 'next';else if (activeIndex < previousIndex) dir = 'prev';else dir = 'reset';\n  }\n  swiper.emit(`transition${step}`);\n  if (runCallbacks && activeIndex !== previousIndex) {\n    if (dir === 'reset') {\n      swiper.emit(`slideResetTransition${step}`);\n      return;\n    }\n    swiper.emit(`slideChangeTransition${step}`);\n    if (dir === 'next') {\n      swiper.emit(`slideNextTransition${step}`);\n    } else {\n      swiper.emit(`slidePrevTransition${step}`);\n    }\n  }\n}","import transitionEmit from './transitionEmit.js';\nexport default function transitionEnd(runCallbacks = true, direction) {\n  const swiper = this;\n  const {\n    params\n  } = swiper;\n  swiper.animating = false;\n  if (params.cssMode) return;\n  swiper.setTransition(0);\n  transitionEmit({\n    swiper,\n    runCallbacks,\n    direction,\n    step: 'End'\n  });\n}","import slideTo from './slideTo.js';\nimport slideToLoop from './slideToLoop.js';\nimport slideNext from './slideNext.js';\nimport slidePrev from './slidePrev.js';\nimport slideReset from './slideReset.js';\nimport slideToClosest from './slideToClosest.js';\nimport slideToClickedSlide from './slideToClickedSlide.js';\nexport default {\n  slideTo,\n  slideToLoop,\n  slideNext,\n  slidePrev,\n  slideReset,\n  slideToClosest,\n  slideToClickedSlide\n};","import { animateCSSModeScroll } from '../../shared/utils.js';\nexport default function slideTo(index = 0, speed = this.params.speed, runCallbacks = true, internal, initial) {\n  if (typeof index === 'string') {\n    index = parseInt(index, 10);\n  }\n  const swiper = this;\n  let slideIndex = index;\n  if (slideIndex < 0) slideIndex = 0;\n  const {\n    params,\n    snapGrid,\n    slidesGrid,\n    previousIndex,\n    activeIndex,\n    rtlTranslate: rtl,\n    wrapperEl,\n    enabled\n  } = swiper;\n  if (swiper.animating && params.preventInteractionOnTransition || !enabled && !internal && !initial) {\n    return false;\n  }\n  const skip = Math.min(swiper.params.slidesPerGroupSkip, slideIndex);\n  let snapIndex = skip + Math.floor((slideIndex - skip) / swiper.params.slidesPerGroup);\n  if (snapIndex >= snapGrid.length) snapIndex = snapGrid.length - 1;\n  const translate = -snapGrid[snapIndex];\n  // Normalize slideIndex\n  if (params.normalizeSlideIndex) {\n    for (let i = 0; i < slidesGrid.length; i += 1) {\n      const normalizedTranslate = -Math.floor(translate * 100);\n      const normalizedGrid = Math.floor(slidesGrid[i] * 100);\n      const normalizedGridNext = Math.floor(slidesGrid[i + 1] * 100);\n      if (typeof slidesGrid[i + 1] !== 'undefined') {\n        if (normalizedTranslate >= normalizedGrid && normalizedTranslate < normalizedGridNext - (normalizedGridNext - normalizedGrid) / 2) {\n          slideIndex = i;\n        } else if (normalizedTranslate >= normalizedGrid && normalizedTranslate < normalizedGridNext) {\n          slideIndex = i + 1;\n        }\n      } else if (normalizedTranslate >= normalizedGrid) {\n        slideIndex = i;\n      }\n    }\n  }\n  // Directions locks\n  if (swiper.initialized && slideIndex !== activeIndex) {\n    if (!swiper.allowSlideNext && translate < swiper.translate && translate < swiper.minTranslate()) {\n      return false;\n    }\n    if (!swiper.allowSlidePrev && translate > swiper.translate && translate > swiper.maxTranslate()) {\n      if ((activeIndex || 0) !== slideIndex) {\n        return false;\n      }\n    }\n  }\n  if (slideIndex !== (previousIndex || 0) && runCallbacks) {\n    swiper.emit('beforeSlideChangeStart');\n  }\n\n  // Update progress\n  swiper.updateProgress(translate);\n  let direction;\n  if (slideIndex > activeIndex) direction = 'next';else if (slideIndex < activeIndex) direction = 'prev';else direction = 'reset';\n\n  // Update Index\n  if (rtl && -translate === swiper.translate || !rtl && translate === swiper.translate) {\n    swiper.updateActiveIndex(slideIndex);\n    // Update Height\n    if (params.autoHeight) {\n      swiper.updateAutoHeight();\n    }\n    swiper.updateSlidesClasses();\n    if (params.effect !== 'slide') {\n      swiper.setTranslate(translate);\n    }\n    if (direction !== 'reset') {\n      swiper.transitionStart(runCallbacks, direction);\n      swiper.transitionEnd(runCallbacks, direction);\n    }\n    return false;\n  }\n  if (params.cssMode) {\n    const isH = swiper.isHorizontal();\n    const t = rtl ? translate : -translate;\n    if (speed === 0) {\n      const isVirtual = swiper.virtual && swiper.params.virtual.enabled;\n      if (isVirtual) {\n        swiper.wrapperEl.style.scrollSnapType = 'none';\n        swiper._immediateVirtual = true;\n      }\n      if (isVirtual && !swiper._cssModeVirtualInitialSet && swiper.params.initialSlide > 0) {\n        swiper._cssModeVirtualInitialSet = true;\n        requestAnimationFrame(() => {\n          wrapperEl[isH ? 'scrollLeft' : 'scrollTop'] = t;\n        });\n      } else {\n        wrapperEl[isH ? 'scrollLeft' : 'scrollTop'] = t;\n      }\n      if (isVirtual) {\n        requestAnimationFrame(() => {\n          swiper.wrapperEl.style.scrollSnapType = '';\n          swiper._immediateVirtual = false;\n        });\n      }\n    } else {\n      if (!swiper.support.smoothScroll) {\n        animateCSSModeScroll({\n          swiper,\n          targetPosition: t,\n          side: isH ? 'left' : 'top'\n        });\n        return true;\n      }\n      wrapperEl.scrollTo({\n        [isH ? 'left' : 'top']: t,\n        behavior: 'smooth'\n      });\n    }\n    return true;\n  }\n  swiper.setTransition(speed);\n  swiper.setTranslate(translate);\n  swiper.updateActiveIndex(slideIndex);\n  swiper.updateSlidesClasses();\n  swiper.emit('beforeTransitionStart', speed, internal);\n  swiper.transitionStart(runCallbacks, direction);\n  if (speed === 0) {\n    swiper.transitionEnd(runCallbacks, direction);\n  } else if (!swiper.animating) {\n    swiper.animating = true;\n    if (!swiper.onSlideToWrapperTransitionEnd) {\n      swiper.onSlideToWrapperTransitionEnd = function transitionEnd(e) {\n        if (!swiper || swiper.destroyed) return;\n        if (e.target !== this) return;\n        swiper.wrapperEl.removeEventListener('transitionend', swiper.onSlideToWrapperTransitionEnd);\n        swiper.onSlideToWrapperTransitionEnd = null;\n        delete swiper.onSlideToWrapperTransitionEnd;\n        swiper.transitionEnd(runCallbacks, direction);\n      };\n    }\n    swiper.wrapperEl.addEventListener('transitionend', swiper.onSlideToWrapperTransitionEnd);\n  }\n  return true;\n}","export default function slideToLoop(index = 0, speed = this.params.speed, runCallbacks = true, internal) {\n  if (typeof index === 'string') {\n    const indexAsNumber = parseInt(index, 10);\n    index = indexAsNumber;\n  }\n  const swiper = this;\n  let newIndex = index;\n  if (swiper.params.loop) {\n    if (swiper.virtual && swiper.params.virtual.enabled) {\n      // eslint-disable-next-line\n      newIndex = newIndex + swiper.virtual.slidesBefore;\n    } else {\n      newIndex = swiper.getSlideIndexByData(newIndex);\n    }\n  }\n  return swiper.slideTo(newIndex, speed, runCallbacks, internal);\n}","/* eslint no-unused-vars: \"off\" */\nexport default function slideNext(speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  const {\n    enabled,\n    params,\n    animating\n  } = swiper;\n  if (!enabled) return swiper;\n  let perGroup = params.slidesPerGroup;\n  if (params.slidesPerView === 'auto' && params.slidesPerGroup === 1 && params.slidesPerGroupAuto) {\n    perGroup = Math.max(swiper.slidesPerViewDynamic('current', true), 1);\n  }\n  const increment = swiper.activeIndex < params.slidesPerGroupSkip ? 1 : perGroup;\n  const isVirtual = swiper.virtual && params.virtual.enabled;\n  if (params.loop) {\n    if (animating && !isVirtual && params.loopPreventsSliding) return false;\n    swiper.loopFix({\n      direction: 'next'\n    });\n    // eslint-disable-next-line\n    swiper._clientLeft = swiper.wrapperEl.clientLeft;\n  }\n  if (params.rewind && swiper.isEnd) {\n    return swiper.slideTo(0, speed, runCallbacks, internal);\n  }\n  return swiper.slideTo(swiper.activeIndex + increment, speed, runCallbacks, internal);\n}","/* eslint no-unused-vars: \"off\" */\nexport default function slidePrev(speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  const {\n    params,\n    snapGrid,\n    slidesGrid,\n    rtlTranslate,\n    enabled,\n    animating\n  } = swiper;\n  if (!enabled) return swiper;\n  const isVirtual = swiper.virtual && params.virtual.enabled;\n  if (params.loop) {\n    if (animating && !isVirtual && params.loopPreventsSliding) return false;\n    swiper.loopFix({\n      direction: 'prev'\n    });\n    // eslint-disable-next-line\n    swiper._clientLeft = swiper.wrapperEl.clientLeft;\n  }\n  const translate = rtlTranslate ? swiper.translate : -swiper.translate;\n  function normalize(val) {\n    if (val < 0) return -Math.floor(Math.abs(val));\n    return Math.floor(val);\n  }\n  const normalizedTranslate = normalize(translate);\n  const normalizedSnapGrid = snapGrid.map(val => normalize(val));\n  let prevSnap = snapGrid[normalizedSnapGrid.indexOf(normalizedTranslate) - 1];\n  if (typeof prevSnap === 'undefined' && params.cssMode) {\n    let prevSnapIndex;\n    snapGrid.forEach((snap, snapIndex) => {\n      if (normalizedTranslate >= snap) {\n        // prevSnap = snap;\n        prevSnapIndex = snapIndex;\n      }\n    });\n    if (typeof prevSnapIndex !== 'undefined') {\n      prevSnap = snapGrid[prevSnapIndex > 0 ? prevSnapIndex - 1 : prevSnapIndex];\n    }\n  }\n  let prevIndex = 0;\n  if (typeof prevSnap !== 'undefined') {\n    prevIndex = slidesGrid.indexOf(prevSnap);\n    if (prevIndex < 0) prevIndex = swiper.activeIndex - 1;\n    if (params.slidesPerView === 'auto' && params.slidesPerGroup === 1 && params.slidesPerGroupAuto) {\n      prevIndex = prevIndex - swiper.slidesPerViewDynamic('previous', true) + 1;\n      prevIndex = Math.max(prevIndex, 0);\n    }\n  }\n  if (params.rewind && swiper.isBeginning) {\n    const lastIndex = swiper.params.virtual && swiper.params.virtual.enabled && swiper.virtual ? swiper.virtual.slides.length - 1 : swiper.slides.length - 1;\n    return swiper.slideTo(lastIndex, speed, runCallbacks, internal);\n  }\n  return swiper.slideTo(prevIndex, speed, runCallbacks, internal);\n}","/* eslint no-unused-vars: \"off\" */\nexport default function slideReset(speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  return swiper.slideTo(swiper.activeIndex, speed, runCallbacks, internal);\n}","/* eslint no-unused-vars: \"off\" */\nexport default function slideToClosest(speed = this.params.speed, runCallbacks = true, internal, threshold = 0.5) {\n  const swiper = this;\n  let index = swiper.activeIndex;\n  const skip = Math.min(swiper.params.slidesPerGroupSkip, index);\n  const snapIndex = skip + Math.floor((index - skip) / swiper.params.slidesPerGroup);\n  const translate = swiper.rtlTranslate ? swiper.translate : -swiper.translate;\n  if (translate >= swiper.snapGrid[snapIndex]) {\n    // The current translate is on or after the current snap index, so the choice\n    // is between the current index and the one after it.\n    const currentSnap = swiper.snapGrid[snapIndex];\n    const nextSnap = swiper.snapGrid[snapIndex + 1];\n    if (translate - currentSnap > (nextSnap - currentSnap) * threshold) {\n      index += swiper.params.slidesPerGroup;\n    }\n  } else {\n    // The current translate is before the current snap index, so the choice\n    // is between the current index and the one before it.\n    const prevSnap = swiper.snapGrid[snapIndex - 1];\n    const currentSnap = swiper.snapGrid[snapIndex];\n    if (translate - prevSnap <= (currentSnap - prevSnap) * threshold) {\n      index -= swiper.params.slidesPerGroup;\n    }\n  }\n  index = Math.max(index, 0);\n  index = Math.min(index, swiper.slidesGrid.length - 1);\n  return swiper.slideTo(index, speed, runCallbacks, internal);\n}","import { elementChildren, nextTick } from '../../shared/utils.js';\nexport default function slideToClickedSlide() {\n  const swiper = this;\n  const {\n    params,\n    slidesEl\n  } = swiper;\n  const slidesPerView = params.slidesPerView === 'auto' ? swiper.slidesPerViewDynamic() : params.slidesPerView;\n  let slideToIndex = swiper.clickedIndex;\n  let realIndex;\n  const slideSelector = swiper.isElement ? `swiper-slide` : `.${params.slideClass}`;\n  if (params.loop) {\n    if (swiper.animating) return;\n    realIndex = parseInt(swiper.clickedSlide.getAttribute('data-swiper-slide-index'), 10);\n    if (params.centeredSlides) {\n      if (slideToIndex < swiper.loopedSlides - slidesPerView / 2 || slideToIndex > swiper.slides.length - swiper.loopedSlides + slidesPerView / 2) {\n        swiper.loopFix();\n        slideToIndex = swiper.getSlideIndex(elementChildren(slidesEl, `${slideSelector}[data-swiper-slide-index=\"${realIndex}\"]`)[0]);\n        nextTick(() => {\n          swiper.slideTo(slideToIndex);\n        });\n      } else {\n        swiper.slideTo(slideToIndex);\n      }\n    } else if (slideToIndex > swiper.slides.length - slidesPerView) {\n      swiper.loopFix();\n      slideToIndex = swiper.getSlideIndex(elementChildren(slidesEl, `${slideSelector}[data-swiper-slide-index=\"${realIndex}\"]`)[0]);\n      nextTick(() => {\n        swiper.slideTo(slideToIndex);\n      });\n    } else {\n      swiper.slideTo(slideToIndex);\n    }\n  } else {\n    swiper.slideTo(slideToIndex);\n  }\n}","import loopCreate from './loopCreate.js';\nimport loopFix from './loopFix.js';\nimport loopDestroy from './loopDestroy.js';\nexport default {\n  loopCreate,\n  loopFix,\n  loopDestroy\n};","import { elementChildren } from '../../shared/utils.js';\nexport default function loopCreate(slideRealIndex) {\n  const swiper = this;\n  const {\n    params,\n    slidesEl\n  } = swiper;\n  if (!params.loop || swiper.virtual && swiper.params.virtual.enabled) return;\n  const slides = elementChildren(slidesEl, `.${params.slideClass}, swiper-slide`);\n  slides.forEach((el, index) => {\n    el.setAttribute('data-swiper-slide-index', index);\n  });\n  swiper.loopFix({\n    slideRealIndex,\n    direction: params.centeredSlides ? undefined : 'next'\n  });\n}","export default function loopFix({\n  slideRealIndex,\n  slideTo = true,\n  direction,\n  setTranslate,\n  activeSlideIndex,\n  byController,\n  byMousewheel\n} = {}) {\n  const swiper = this;\n  if (!swiper.params.loop) return;\n  swiper.emit('beforeLoopFix');\n  const {\n    slides,\n    allowSlidePrev,\n    allowSlideNext,\n    slidesEl,\n    params\n  } = swiper;\n  swiper.allowSlidePrev = true;\n  swiper.allowSlideNext = true;\n  if (swiper.virtual && params.virtual.enabled) {\n    if (slideTo) {\n      if (!params.centeredSlides && swiper.snapIndex === 0) {\n        swiper.slideTo(swiper.virtual.slides.length, 0, false, true);\n      } else if (params.centeredSlides && swiper.snapIndex < params.slidesPerView) {\n        swiper.slideTo(swiper.virtual.slides.length + swiper.snapIndex, 0, false, true);\n      } else if (swiper.snapIndex === swiper.snapGrid.length - 1) {\n        swiper.slideTo(swiper.virtual.slidesBefore, 0, false, true);\n      }\n    }\n    swiper.allowSlidePrev = allowSlidePrev;\n    swiper.allowSlideNext = allowSlideNext;\n    swiper.emit('loopFix');\n    return;\n  }\n  const slidesPerView = params.slidesPerView === 'auto' ? swiper.slidesPerViewDynamic() : Math.ceil(parseFloat(params.slidesPerView, 10));\n  let loopedSlides = params.loopedSlides || slidesPerView;\n  if (loopedSlides % params.slidesPerGroup !== 0) {\n    loopedSlides += params.slidesPerGroup - loopedSlides % params.slidesPerGroup;\n  }\n  swiper.loopedSlides = loopedSlides;\n  const prependSlidesIndexes = [];\n  const appendSlidesIndexes = [];\n  let activeIndex = swiper.activeIndex;\n  if (typeof activeSlideIndex === 'undefined') {\n    activeSlideIndex = swiper.getSlideIndex(swiper.slides.filter(el => el.classList.contains(params.slideActiveClass))[0]);\n  } else {\n    activeIndex = activeSlideIndex;\n  }\n  const isNext = direction === 'next' || !direction;\n  const isPrev = direction === 'prev' || !direction;\n  let slidesPrepended = 0;\n  let slidesAppended = 0;\n  // prepend last slides before start\n  if (activeSlideIndex < loopedSlides) {\n    slidesPrepended = Math.max(loopedSlides - activeSlideIndex, params.slidesPerGroup);\n    for (let i = 0; i < loopedSlides - activeSlideIndex; i += 1) {\n      const index = i - Math.floor(i / slides.length) * slides.length;\n      prependSlidesIndexes.push(slides.length - index - 1);\n    }\n  } else if (activeSlideIndex /* + slidesPerView */ > swiper.slides.length - loopedSlides * 2) {\n    slidesAppended = Math.max(activeSlideIndex - (swiper.slides.length - loopedSlides * 2), params.slidesPerGroup);\n    for (let i = 0; i < slidesAppended; i += 1) {\n      const index = i - Math.floor(i / slides.length) * slides.length;\n      appendSlidesIndexes.push(index);\n    }\n  }\n  if (isPrev) {\n    prependSlidesIndexes.forEach(index => {\n      swiper.slides[index].swiperLoopMoveDOM = true;\n      slidesEl.prepend(swiper.slides[index]);\n      swiper.slides[index].swiperLoopMoveDOM = false;\n    });\n  }\n  if (isNext) {\n    appendSlidesIndexes.forEach(index => {\n      swiper.slides[index].swiperLoopMoveDOM = true;\n      slidesEl.append(swiper.slides[index]);\n      swiper.slides[index].swiperLoopMoveDOM = false;\n    });\n  }\n  swiper.recalcSlides();\n  if (params.slidesPerView === 'auto') {\n    swiper.updateSlides();\n  }\n  if (params.watchSlidesProgress) {\n    swiper.updateSlidesOffset();\n  }\n  if (slideTo) {\n    if (prependSlidesIndexes.length > 0 && isPrev) {\n      if (typeof slideRealIndex === 'undefined') {\n        const currentSlideTranslate = swiper.slidesGrid[activeIndex];\n        const newSlideTranslate = swiper.slidesGrid[activeIndex + slidesPrepended];\n        const diff = newSlideTranslate - currentSlideTranslate;\n        if (byMousewheel) {\n          swiper.setTranslate(swiper.translate - diff);\n        } else {\n          swiper.slideTo(activeIndex + slidesPrepended, 0, false, true);\n          if (setTranslate) {\n            swiper.touches[swiper.isHorizontal() ? 'startX' : 'startY'] += diff;\n          }\n        }\n      } else {\n        if (setTranslate) {\n          swiper.slideToLoop(slideRealIndex, 0, false, true);\n        }\n      }\n    } else if (appendSlidesIndexes.length > 0 && isNext) {\n      if (typeof slideRealIndex === 'undefined') {\n        const currentSlideTranslate = swiper.slidesGrid[activeIndex];\n        const newSlideTranslate = swiper.slidesGrid[activeIndex - slidesAppended];\n        const diff = newSlideTranslate - currentSlideTranslate;\n        if (byMousewheel) {\n          swiper.setTranslate(swiper.translate - diff);\n        } else {\n          swiper.slideTo(activeIndex - slidesAppended, 0, false, true);\n          if (setTranslate) {\n            swiper.touches[swiper.isHorizontal() ? 'startX' : 'startY'] += diff;\n          }\n        }\n      } else {\n        swiper.slideToLoop(slideRealIndex, 0, false, true);\n      }\n    }\n  }\n  swiper.allowSlidePrev = allowSlidePrev;\n  swiper.allowSlideNext = allowSlideNext;\n  if (swiper.controller && swiper.controller.control && !byController) {\n    const loopParams = {\n      slideRealIndex,\n      slideTo: false,\n      direction,\n      setTranslate,\n      activeSlideIndex,\n      byController: true\n    };\n    if (Array.isArray(swiper.controller.control)) {\n      swiper.controller.control.forEach(c => {\n        if (!c.destroyed && c.params.loop) c.loopFix(loopParams);\n      });\n    } else if (swiper.controller.control instanceof swiper.constructor && swiper.controller.control.params.loop) {\n      swiper.controller.control.loopFix(loopParams);\n    }\n  }\n  swiper.emit('loopFix');\n}","export default function loopDestroy() {\n  const swiper = this;\n  const {\n    params,\n    slidesEl\n  } = swiper;\n  if (!params.loop || swiper.virtual && swiper.params.virtual.enabled) return;\n  swiper.recalcSlides();\n  const newSlidesOrder = [];\n  swiper.slides.forEach(slideEl => {\n    const index = typeof slideEl.swiperSlideIndex === 'undefined' ? slideEl.getAttribute('data-swiper-slide-index') * 1 : slideEl.swiperSlideIndex;\n    newSlidesOrder[index] = slideEl;\n  });\n  swiper.slides.forEach(slideEl => {\n    slideEl.removeAttribute('data-swiper-slide-index');\n  });\n  newSlidesOrder.forEach(slideEl => {\n    slidesEl.append(slideEl);\n  });\n  swiper.recalcSlides();\n  swiper.slideTo(swiper.realIndex, 0);\n}","import setGrabCursor from './setGrabCursor.js';\nimport unsetGrabCursor from './unsetGrabCursor.js';\nexport default {\n  setGrabCursor,\n  unsetGrabCursor\n};","export default function setGrabCursor(moving) {\n  const swiper = this;\n  if (!swiper.params.simulateTouch || swiper.params.watchOverflow && swiper.isLocked || swiper.params.cssMode) return;\n  const el = swiper.params.touchEventsTarget === 'container' ? swiper.el : swiper.wrapperEl;\n  if (swiper.isElement) {\n    swiper.__preventObserver__ = true;\n  }\n  el.style.cursor = 'move';\n  el.style.cursor = moving ? 'grabbing' : 'grab';\n  if (swiper.isElement) {\n    requestAnimationFrame(() => {\n      swiper.__preventObserver__ = false;\n    });\n  }\n}","export default function unsetGrabCursor() {\n  const swiper = this;\n  if (swiper.params.watchOverflow && swiper.isLocked || swiper.params.cssMode) {\n    return;\n  }\n  if (swiper.isElement) {\n    swiper.__preventObserver__ = true;\n  }\n  swiper[swiper.params.touchEventsTarget === 'container' ? 'el' : 'wrapperEl'].style.cursor = '';\n  if (swiper.isElement) {\n    requestAnimationFrame(() => {\n      swiper.__preventObserver__ = false;\n    });\n  }\n}","import { getDocument } from 'ssr-window';\nimport onTouchStart from './onTouchStart.js';\nimport onTouchMove from './onTouchMove.js';\nimport onTouchEnd from './onTouchEnd.js';\nimport onResize from './onResize.js';\nimport onClick from './onClick.js';\nimport onScroll from './onScroll.js';\nimport onLoad from './onLoad.js';\nlet dummyEventAttached = false;\nfunction dummyEventListener() {}\nconst events = (swiper, method) => {\n  const document = getDocument();\n  const {\n    params,\n    el,\n    wrapperEl,\n    device\n  } = swiper;\n  const capture = !!params.nested;\n  const domMethod = method === 'on' ? 'addEventListener' : 'removeEventListener';\n  const swiperMethod = method;\n\n  // Touch Events\n  el[domMethod]('pointerdown', swiper.onTouchStart, {\n    passive: false\n  });\n  document[domMethod]('pointermove', swiper.onTouchMove, {\n    passive: false,\n    capture\n  });\n  document[domMethod]('pointerup', swiper.onTouchEnd, {\n    passive: true\n  });\n  document[domMethod]('pointercancel', swiper.onTouchEnd, {\n    passive: true\n  });\n  document[domMethod]('pointerout', swiper.onTouchEnd, {\n    passive: true\n  });\n  document[domMethod]('pointerleave', swiper.onTouchEnd, {\n    passive: true\n  });\n\n  // Prevent Links Clicks\n  if (params.preventClicks || params.preventClicksPropagation) {\n    el[domMethod]('click', swiper.onClick, true);\n  }\n  if (params.cssMode) {\n    wrapperEl[domMethod]('scroll', swiper.onScroll);\n  }\n\n  // Resize handler\n  if (params.updateOnWindowResize) {\n    swiper[swiperMethod](device.ios || device.android ? 'resize orientationchange observerUpdate' : 'resize observerUpdate', onResize, true);\n  } else {\n    swiper[swiperMethod]('observerUpdate', onResize, true);\n  }\n\n  // Images loader\n  el[domMethod]('load', swiper.onLoad, {\n    capture: true\n  });\n};\nfunction attachEvents() {\n  const swiper = this;\n  const document = getDocument();\n  const {\n    params\n  } = swiper;\n  swiper.onTouchStart = onTouchStart.bind(swiper);\n  swiper.onTouchMove = onTouchMove.bind(swiper);\n  swiper.onTouchEnd = onTouchEnd.bind(swiper);\n  if (params.cssMode) {\n    swiper.onScroll = onScroll.bind(swiper);\n  }\n  swiper.onClick = onClick.bind(swiper);\n  swiper.onLoad = onLoad.bind(swiper);\n  if (!dummyEventAttached) {\n    document.addEventListener('touchstart', dummyEventListener);\n    dummyEventAttached = true;\n  }\n  events(swiper, 'on');\n}\nfunction detachEvents() {\n  const swiper = this;\n  events(swiper, 'off');\n}\nexport default {\n  attachEvents,\n  detachEvents\n};","import { getWindow, getDocument } from 'ssr-window';\nimport { now } from '../../shared/utils.js';\n\n// Modified from https://stackoverflow.com/questions/54520554/custom-element-getrootnode-closest-function-crossing-multiple-parent-shadowd\nfunction closestElement(selector, base = this) {\n  function __closestFrom(el) {\n    if (!el || el === getDocument() || el === getWindow()) return null;\n    if (el.assignedSlot) el = el.assignedSlot;\n    const found = el.closest(selector);\n    if (!found && !el.getRootNode) {\n      return null;\n    }\n    return found || __closestFrom(el.getRootNode().host);\n  }\n  return __closestFrom(base);\n}\nexport default function onTouchStart(event) {\n  const swiper = this;\n  const document = getDocument();\n  const window = getWindow();\n  const data = swiper.touchEventsData;\n  data.evCache.push(event);\n  const {\n    params,\n    touches,\n    enabled\n  } = swiper;\n  if (!enabled) return;\n  if (!params.simulateTouch && event.pointerType === 'mouse') return;\n  if (swiper.animating && params.preventInteractionOnTransition) {\n    return;\n  }\n  if (!swiper.animating && params.cssMode && params.loop) {\n    swiper.loopFix();\n  }\n  let e = event;\n  if (e.originalEvent) e = e.originalEvent;\n  let targetEl = e.target;\n  if (params.touchEventsTarget === 'wrapper') {\n    if (!swiper.wrapperEl.contains(targetEl)) return;\n  }\n  if ('which' in e && e.which === 3) return;\n  if ('button' in e && e.button > 0) return;\n  if (data.isTouched && data.isMoved) return;\n\n  // change target el for shadow root component\n  const swipingClassHasValue = !!params.noSwipingClass && params.noSwipingClass !== '';\n  // eslint-disable-next-line\n  const eventPath = event.composedPath ? event.composedPath() : event.path;\n  if (swipingClassHasValue && e.target && e.target.shadowRoot && eventPath) {\n    targetEl = eventPath[0];\n  }\n  const noSwipingSelector = params.noSwipingSelector ? params.noSwipingSelector : `.${params.noSwipingClass}`;\n  const isTargetShadow = !!(e.target && e.target.shadowRoot);\n\n  // use closestElement for shadow root element to get the actual closest for nested shadow root element\n  if (params.noSwiping && (isTargetShadow ? closestElement(noSwipingSelector, targetEl) : targetEl.closest(noSwipingSelector))) {\n    swiper.allowClick = true;\n    return;\n  }\n  if (params.swipeHandler) {\n    if (!targetEl.closest(params.swipeHandler)) return;\n  }\n  touches.currentX = e.pageX;\n  touches.currentY = e.pageY;\n  const startX = touches.currentX;\n  const startY = touches.currentY;\n\n  // Do NOT start if iOS edge swipe is detected. Otherwise iOS app cannot swipe-to-go-back anymore\n\n  const edgeSwipeDetection = params.edgeSwipeDetection || params.iOSEdgeSwipeDetection;\n  const edgeSwipeThreshold = params.edgeSwipeThreshold || params.iOSEdgeSwipeThreshold;\n  if (edgeSwipeDetection && (startX <= edgeSwipeThreshold || startX >= window.innerWidth - edgeSwipeThreshold)) {\n    if (edgeSwipeDetection === 'prevent') {\n      event.preventDefault();\n    } else {\n      return;\n    }\n  }\n  Object.assign(data, {\n    isTouched: true,\n    isMoved: false,\n    allowTouchCallbacks: true,\n    isScrolling: undefined,\n    startMoving: undefined\n  });\n  touches.startX = startX;\n  touches.startY = startY;\n  data.touchStartTime = now();\n  swiper.allowClick = true;\n  swiper.updateSize();\n  swiper.swipeDirection = undefined;\n  if (params.threshold > 0) data.allowThresholdMove = false;\n  let preventDefault = true;\n  if (targetEl.matches(data.focusableElements)) {\n    preventDefault = false;\n    if (targetEl.nodeName === 'SELECT') {\n      data.isTouched = false;\n    }\n  }\n  if (document.activeElement && document.activeElement.matches(data.focusableElements) && document.activeElement !== targetEl) {\n    document.activeElement.blur();\n  }\n  const shouldPreventDefault = preventDefault && swiper.allowTouchMove && params.touchStartPreventDefault;\n  if ((params.touchStartForcePreventDefault || shouldPreventDefault) && !targetEl.isContentEditable) {\n    e.preventDefault();\n  }\n  if (swiper.params.freeMode && swiper.params.freeMode.enabled && swiper.freeMode && swiper.animating && !params.cssMode) {\n    swiper.freeMode.onTouchStart();\n  }\n  swiper.emit('touchStart', e);\n}","import { getDocument } from 'ssr-window';\nimport { now } from '../../shared/utils.js';\nexport default function onTouchMove(event) {\n  const document = getDocument();\n  const swiper = this;\n  const data = swiper.touchEventsData;\n  const {\n    params,\n    touches,\n    rtlTranslate: rtl,\n    enabled\n  } = swiper;\n  if (!enabled) return;\n  if (!params.simulateTouch && event.pointerType === 'mouse') return;\n  let e = event;\n  if (e.originalEvent) e = e.originalEvent;\n  if (!data.isTouched) {\n    if (data.startMoving && data.isScrolling) {\n      swiper.emit('touchMoveOpposite', e);\n    }\n    return;\n  }\n  const pointerIndex = data.evCache.findIndex(cachedEv => cachedEv.pointerId === e.pointerId);\n  if (pointerIndex >= 0) data.evCache[pointerIndex] = e;\n  const targetTouch = data.evCache.length > 1 ? data.evCache[0] : e;\n  const pageX = targetTouch.pageX;\n  const pageY = targetTouch.pageY;\n  if (e.preventedByNestedSwiper) {\n    touches.startX = pageX;\n    touches.startY = pageY;\n    return;\n  }\n  if (!swiper.allowTouchMove) {\n    if (!e.target.matches(data.focusableElements)) {\n      swiper.allowClick = false;\n    }\n    if (data.isTouched) {\n      Object.assign(touches, {\n        startX: pageX,\n        startY: pageY,\n        prevX: swiper.touches.currentX,\n        prevY: swiper.touches.currentY,\n        currentX: pageX,\n        currentY: pageY\n      });\n      data.touchStartTime = now();\n    }\n    return;\n  }\n  if (params.touchReleaseOnEdges && !params.loop) {\n    if (swiper.isVertical()) {\n      // Vertical\n      if (pageY < touches.startY && swiper.translate <= swiper.maxTranslate() || pageY > touches.startY && swiper.translate >= swiper.minTranslate()) {\n        data.isTouched = false;\n        data.isMoved = false;\n        return;\n      }\n    } else if (pageX < touches.startX && swiper.translate <= swiper.maxTranslate() || pageX > touches.startX && swiper.translate >= swiper.minTranslate()) {\n      return;\n    }\n  }\n  if (document.activeElement) {\n    if (e.target === document.activeElement && e.target.matches(data.focusableElements)) {\n      data.isMoved = true;\n      swiper.allowClick = false;\n      return;\n    }\n  }\n  if (data.allowTouchCallbacks) {\n    swiper.emit('touchMove', e);\n  }\n  if (e.targetTouches && e.targetTouches.length > 1) return;\n  touches.currentX = pageX;\n  touches.currentY = pageY;\n  const diffX = touches.currentX - touches.startX;\n  const diffY = touches.currentY - touches.startY;\n  if (swiper.params.threshold && Math.sqrt(diffX ** 2 + diffY ** 2) < swiper.params.threshold) return;\n  if (typeof data.isScrolling === 'undefined') {\n    let touchAngle;\n    if (swiper.isHorizontal() && touches.currentY === touches.startY || swiper.isVertical() && touches.currentX === touches.startX) {\n      data.isScrolling = false;\n    } else {\n      // eslint-disable-next-line\n      if (diffX * diffX + diffY * diffY >= 25) {\n        touchAngle = Math.atan2(Math.abs(diffY), Math.abs(diffX)) * 180 / Math.PI;\n        data.isScrolling = swiper.isHorizontal() ? touchAngle > params.touchAngle : 90 - touchAngle > params.touchAngle;\n      }\n    }\n  }\n  if (data.isScrolling) {\n    swiper.emit('touchMoveOpposite', e);\n  }\n  if (typeof data.startMoving === 'undefined') {\n    if (touches.currentX !== touches.startX || touches.currentY !== touches.startY) {\n      data.startMoving = true;\n    }\n  }\n  if (data.isScrolling || swiper.zoom && swiper.params.zoom && swiper.params.zoom.enabled && data.evCache.length > 1) {\n    data.isTouched = false;\n    return;\n  }\n  if (!data.startMoving) {\n    return;\n  }\n  swiper.allowClick = false;\n  if (!params.cssMode && e.cancelable) {\n    e.preventDefault();\n  }\n  if (params.touchMoveStopPropagation && !params.nested) {\n    e.stopPropagation();\n  }\n  let diff = swiper.isHorizontal() ? diffX : diffY;\n  let touchesDiff = swiper.isHorizontal() ? touches.currentX - touches.previousX : touches.currentY - touches.previousY;\n  if (params.oneWayMovement) {\n    diff = Math.abs(diff) * (rtl ? 1 : -1);\n    touchesDiff = Math.abs(touchesDiff) * (rtl ? 1 : -1);\n  }\n  touches.diff = diff;\n  diff *= params.touchRatio;\n  if (rtl) {\n    diff = -diff;\n    touchesDiff = -touchesDiff;\n  }\n  const prevTouchesDirection = swiper.touchesDirection;\n  swiper.swipeDirection = diff > 0 ? 'prev' : 'next';\n  swiper.touchesDirection = touchesDiff > 0 ? 'prev' : 'next';\n  const isLoop = swiper.params.loop && !params.cssMode;\n  if (!data.isMoved) {\n    if (isLoop) {\n      swiper.loopFix({\n        direction: swiper.swipeDirection\n      });\n    }\n    data.startTranslate = swiper.getTranslate();\n    swiper.setTransition(0);\n    if (swiper.animating) {\n      const evt = new window.CustomEvent('transitionend', {\n        bubbles: true,\n        cancelable: true\n      });\n      swiper.wrapperEl.dispatchEvent(evt);\n    }\n    data.allowMomentumBounce = false;\n    // Grab Cursor\n    if (params.grabCursor && (swiper.allowSlideNext === true || swiper.allowSlidePrev === true)) {\n      swiper.setGrabCursor(true);\n    }\n    swiper.emit('sliderFirstMove', e);\n  }\n  let loopFixed;\n  if (data.isMoved && prevTouchesDirection !== swiper.touchesDirection && isLoop && Math.abs(diff) >= 1) {\n    // need another loop fix\n    swiper.loopFix({\n      direction: swiper.swipeDirection,\n      setTranslate: true\n    });\n    loopFixed = true;\n  }\n  swiper.emit('sliderMove', e);\n  data.isMoved = true;\n  data.currentTranslate = diff + data.startTranslate;\n  let disableParentSwiper = true;\n  let resistanceRatio = params.resistanceRatio;\n  if (params.touchReleaseOnEdges) {\n    resistanceRatio = 0;\n  }\n  if (diff > 0) {\n    if (isLoop && !loopFixed && data.currentTranslate > (params.centeredSlides ? swiper.minTranslate() - swiper.size / 2 : swiper.minTranslate())) {\n      swiper.loopFix({\n        direction: 'prev',\n        setTranslate: true,\n        activeSlideIndex: 0\n      });\n    }\n    if (data.currentTranslate > swiper.minTranslate()) {\n      disableParentSwiper = false;\n      if (params.resistance) {\n        data.currentTranslate = swiper.minTranslate() - 1 + (-swiper.minTranslate() + data.startTranslate + diff) ** resistanceRatio;\n      }\n    }\n  } else if (diff < 0) {\n    if (isLoop && !loopFixed && data.currentTranslate < (params.centeredSlides ? swiper.maxTranslate() + swiper.size / 2 : swiper.maxTranslate())) {\n      swiper.loopFix({\n        direction: 'next',\n        setTranslate: true,\n        activeSlideIndex: swiper.slides.length - (params.slidesPerView === 'auto' ? swiper.slidesPerViewDynamic() : Math.ceil(parseFloat(params.slidesPerView, 10)))\n      });\n    }\n    if (data.currentTranslate < swiper.maxTranslate()) {\n      disableParentSwiper = false;\n      if (params.resistance) {\n        data.currentTranslate = swiper.maxTranslate() + 1 - (swiper.maxTranslate() - data.startTranslate - diff) ** resistanceRatio;\n      }\n    }\n  }\n  if (disableParentSwiper) {\n    e.preventedByNestedSwiper = true;\n  }\n\n  // Directions locks\n  if (!swiper.allowSlideNext && swiper.swipeDirection === 'next' && data.currentTranslate < data.startTranslate) {\n    data.currentTranslate = data.startTranslate;\n  }\n  if (!swiper.allowSlidePrev && swiper.swipeDirection === 'prev' && data.currentTranslate > data.startTranslate) {\n    data.currentTranslate = data.startTranslate;\n  }\n  if (!swiper.allowSlidePrev && !swiper.allowSlideNext) {\n    data.currentTranslate = data.startTranslate;\n  }\n\n  // Threshold\n  if (params.threshold > 0) {\n    if (Math.abs(diff) > params.threshold || data.allowThresholdMove) {\n      if (!data.allowThresholdMove) {\n        data.allowThresholdMove = true;\n        touches.startX = touches.currentX;\n        touches.startY = touches.currentY;\n        data.currentTranslate = data.startTranslate;\n        touches.diff = swiper.isHorizontal() ? touches.currentX - touches.startX : touches.currentY - touches.startY;\n        return;\n      }\n    } else {\n      data.currentTranslate = data.startTranslate;\n      return;\n    }\n  }\n  if (!params.followFinger || params.cssMode) return;\n\n  // Update active index in free mode\n  if (params.freeMode && params.freeMode.enabled && swiper.freeMode || params.watchSlidesProgress) {\n    swiper.updateActiveIndex();\n    swiper.updateSlidesClasses();\n  }\n  if (swiper.params.freeMode && params.freeMode.enabled && swiper.freeMode) {\n    swiper.freeMode.onTouchMove();\n  }\n  // Update progress\n  swiper.updateProgress(data.currentTranslate);\n  // Update translate\n  swiper.setTranslate(data.currentTranslate);\n}","import { now, nextTick } from '../../shared/utils.js';\nexport default function onTouchEnd(event) {\n  const swiper = this;\n  const data = swiper.touchEventsData;\n  const pointerIndex = data.evCache.findIndex(cachedEv => cachedEv.pointerId === event.pointerId);\n  if (pointerIndex >= 0) {\n    data.evCache.splice(pointerIndex, 1);\n  }\n  if (['pointercancel', 'pointerout', 'pointerleave'].includes(event.type)) {\n    const proceed = event.type === 'pointercancel' && (swiper.browser.isSafari || swiper.browser.isWebView);\n    if (!proceed) {\n      return;\n    }\n  }\n  const {\n    params,\n    touches,\n    rtlTranslate: rtl,\n    slidesGrid,\n    enabled\n  } = swiper;\n  if (!enabled) return;\n  if (!params.simulateTouch && event.pointerType === 'mouse') return;\n  let e = event;\n  if (e.originalEvent) e = e.originalEvent;\n  if (data.allowTouchCallbacks) {\n    swiper.emit('touchEnd', e);\n  }\n  data.allowTouchCallbacks = false;\n  if (!data.isTouched) {\n    if (data.isMoved && params.grabCursor) {\n      swiper.setGrabCursor(false);\n    }\n    data.isMoved = false;\n    data.startMoving = false;\n    return;\n  }\n  // Return Grab Cursor\n  if (params.grabCursor && data.isMoved && data.isTouched && (swiper.allowSlideNext === true || swiper.allowSlidePrev === true)) {\n    swiper.setGrabCursor(false);\n  }\n\n  // Time diff\n  const touchEndTime = now();\n  const timeDiff = touchEndTime - data.touchStartTime;\n\n  // Tap, doubleTap, Click\n  if (swiper.allowClick) {\n    const pathTree = e.path || e.composedPath && e.composedPath();\n    swiper.updateClickedSlide(pathTree && pathTree[0] || e.target);\n    swiper.emit('tap click', e);\n    if (timeDiff < 300 && touchEndTime - data.lastClickTime < 300) {\n      swiper.emit('doubleTap doubleClick', e);\n    }\n  }\n  data.lastClickTime = now();\n  nextTick(() => {\n    if (!swiper.destroyed) swiper.allowClick = true;\n  });\n  if (!data.isTouched || !data.isMoved || !swiper.swipeDirection || touches.diff === 0 || data.currentTranslate === data.startTranslate) {\n    data.isTouched = false;\n    data.isMoved = false;\n    data.startMoving = false;\n    return;\n  }\n  data.isTouched = false;\n  data.isMoved = false;\n  data.startMoving = false;\n  let currentPos;\n  if (params.followFinger) {\n    currentPos = rtl ? swiper.translate : -swiper.translate;\n  } else {\n    currentPos = -data.currentTranslate;\n  }\n  if (params.cssMode) {\n    return;\n  }\n  if (swiper.params.freeMode && params.freeMode.enabled) {\n    swiper.freeMode.onTouchEnd({\n      currentPos\n    });\n    return;\n  }\n\n  // Find current slide\n  let stopIndex = 0;\n  let groupSize = swiper.slidesSizesGrid[0];\n  for (let i = 0; i < slidesGrid.length; i += i < params.slidesPerGroupSkip ? 1 : params.slidesPerGroup) {\n    const increment = i < params.slidesPerGroupSkip - 1 ? 1 : params.slidesPerGroup;\n    if (typeof slidesGrid[i + increment] !== 'undefined') {\n      if (currentPos >= slidesGrid[i] && currentPos < slidesGrid[i + increment]) {\n        stopIndex = i;\n        groupSize = slidesGrid[i + increment] - slidesGrid[i];\n      }\n    } else if (currentPos >= slidesGrid[i]) {\n      stopIndex = i;\n      groupSize = slidesGrid[slidesGrid.length - 1] - slidesGrid[slidesGrid.length - 2];\n    }\n  }\n  let rewindFirstIndex = null;\n  let rewindLastIndex = null;\n  if (params.rewind) {\n    if (swiper.isBeginning) {\n      rewindLastIndex = swiper.params.virtual && swiper.params.virtual.enabled && swiper.virtual ? swiper.virtual.slides.length - 1 : swiper.slides.length - 1;\n    } else if (swiper.isEnd) {\n      rewindFirstIndex = 0;\n    }\n  }\n  // Find current slide size\n  const ratio = (currentPos - slidesGrid[stopIndex]) / groupSize;\n  const increment = stopIndex < params.slidesPerGroupSkip - 1 ? 1 : params.slidesPerGroup;\n  if (timeDiff > params.longSwipesMs) {\n    // Long touches\n    if (!params.longSwipes) {\n      swiper.slideTo(swiper.activeIndex);\n      return;\n    }\n    if (swiper.swipeDirection === 'next') {\n      if (ratio >= params.longSwipesRatio) swiper.slideTo(params.rewind && swiper.isEnd ? rewindFirstIndex : stopIndex + increment);else swiper.slideTo(stopIndex);\n    }\n    if (swiper.swipeDirection === 'prev') {\n      if (ratio > 1 - params.longSwipesRatio) {\n        swiper.slideTo(stopIndex + increment);\n      } else if (rewindLastIndex !== null && ratio < 0 && Math.abs(ratio) > params.longSwipesRatio) {\n        swiper.slideTo(rewindLastIndex);\n      } else {\n        swiper.slideTo(stopIndex);\n      }\n    }\n  } else {\n    // Short swipes\n    if (!params.shortSwipes) {\n      swiper.slideTo(swiper.activeIndex);\n      return;\n    }\n    const isNavButtonTarget = swiper.navigation && (e.target === swiper.navigation.nextEl || e.target === swiper.navigation.prevEl);\n    if (!isNavButtonTarget) {\n      if (swiper.swipeDirection === 'next') {\n        swiper.slideTo(rewindFirstIndex !== null ? rewindFirstIndex : stopIndex + increment);\n      }\n      if (swiper.swipeDirection === 'prev') {\n        swiper.slideTo(rewindLastIndex !== null ? rewindLastIndex : stopIndex);\n      }\n    } else if (e.target === swiper.navigation.nextEl) {\n      swiper.slideTo(stopIndex + increment);\n    } else {\n      swiper.slideTo(stopIndex);\n    }\n  }\n}","export default function onResize() {\n  const swiper = this;\n  const {\n    params,\n    el\n  } = swiper;\n  if (el && el.offsetWidth === 0) return;\n\n  // Breakpoints\n  if (params.breakpoints) {\n    swiper.setBreakpoint();\n  }\n\n  // Save locks\n  const {\n    allowSlideNext,\n    allowSlidePrev,\n    snapGrid\n  } = swiper;\n  const isVirtual = swiper.virtual && swiper.params.virtual.enabled;\n\n  // Disable locks on resize\n  swiper.allowSlideNext = true;\n  swiper.allowSlidePrev = true;\n  swiper.updateSize();\n  swiper.updateSlides();\n  swiper.updateSlidesClasses();\n  const isVirtualLoop = isVirtual && params.loop;\n  if ((params.slidesPerView === 'auto' || params.slidesPerView > 1) && swiper.isEnd && !swiper.isBeginning && !swiper.params.centeredSlides && !isVirtualLoop) {\n    swiper.slideTo(swiper.slides.length - 1, 0, false, true);\n  } else {\n    if (swiper.params.loop && !isVirtual) {\n      swiper.slideToLoop(swiper.realIndex, 0, false, true);\n    } else {\n      swiper.slideTo(swiper.activeIndex, 0, false, true);\n    }\n  }\n  if (swiper.autoplay && swiper.autoplay.running && swiper.autoplay.paused) {\n    clearTimeout(swiper.autoplay.resizeTimeout);\n    swiper.autoplay.resizeTimeout = setTimeout(() => {\n      if (swiper.autoplay && swiper.autoplay.running && swiper.autoplay.paused) {\n        swiper.autoplay.resume();\n      }\n    }, 500);\n  }\n  // Return locks after resize\n  swiper.allowSlidePrev = allowSlidePrev;\n  swiper.allowSlideNext = allowSlideNext;\n  if (swiper.params.watchOverflow && snapGrid !== swiper.snapGrid) {\n    swiper.checkOverflow();\n  }\n}","export default function onClick(e) {\n  const swiper = this;\n  if (!swiper.enabled) return;\n  if (!swiper.allowClick) {\n    if (swiper.params.preventClicks) e.preventDefault();\n    if (swiper.params.preventClicksPropagation && swiper.animating) {\n      e.stopPropagation();\n      e.stopImmediatePropagation();\n    }\n  }\n}","export default function onScroll() {\n  const swiper = this;\n  const {\n    wrapperEl,\n    rtlTranslate,\n    enabled\n  } = swiper;\n  if (!enabled) return;\n  swiper.previousTranslate = swiper.translate;\n  if (swiper.isHorizontal()) {\n    swiper.translate = -wrapperEl.scrollLeft;\n  } else {\n    swiper.translate = -wrapperEl.scrollTop;\n  }\n  // eslint-disable-next-line\n  if (swiper.translate === 0) swiper.translate = 0;\n  swiper.updateActiveIndex();\n  swiper.updateSlidesClasses();\n  let newProgress;\n  const translatesDiff = swiper.maxTranslate() - swiper.minTranslate();\n  if (translatesDiff === 0) {\n    newProgress = 0;\n  } else {\n    newProgress = (swiper.translate - swiper.minTranslate()) / translatesDiff;\n  }\n  if (newProgress !== swiper.progress) {\n    swiper.updateProgress(rtlTranslate ? -swiper.translate : swiper.translate);\n  }\n  swiper.emit('setTranslate', swiper.translate, false);\n}","import { processLazyPreloader } from '../../shared/process-lazy-preloader.js';\nexport default function onLoad(e) {\n  const swiper = this;\n  processLazyPreloader(swiper, e.target);\n  if (swiper.params.cssMode || swiper.params.slidesPerView !== 'auto' && !swiper.params.autoHeight) {\n    return;\n  }\n  swiper.update();\n}","import setBreakpoint from './setBreakpoint.js';\nimport getBreakpoint from './getBreakpoint.js';\nexport default {\n  setBreakpoint,\n  getBreakpoint\n};","import { extend } from '../../shared/utils.js';\nconst isGridEnabled = (swiper, params) => {\n  return swiper.grid && params.grid && params.grid.rows > 1;\n};\nexport default function setBreakpoint() {\n  const swiper = this;\n  const {\n    realIndex,\n    initialized,\n    params,\n    el\n  } = swiper;\n  const breakpoints = params.breakpoints;\n  if (!breakpoints || breakpoints && Object.keys(breakpoints).length === 0) return;\n\n  // Get breakpoint for window width and update parameters\n  const breakpoint = swiper.getBreakpoint(breakpoints, swiper.params.breakpointsBase, swiper.el);\n  if (!breakpoint || swiper.currentBreakpoint === breakpoint) return;\n  const breakpointOnlyParams = breakpoint in breakpoints ? breakpoints[breakpoint] : undefined;\n  const breakpointParams = breakpointOnlyParams || swiper.originalParams;\n  const wasMultiRow = isGridEnabled(swiper, params);\n  const isMultiRow = isGridEnabled(swiper, breakpointParams);\n  const wasEnabled = params.enabled;\n  if (wasMultiRow && !isMultiRow) {\n    el.classList.remove(`${params.containerModifierClass}grid`, `${params.containerModifierClass}grid-column`);\n    swiper.emitContainerClasses();\n  } else if (!wasMultiRow && isMultiRow) {\n    el.classList.add(`${params.containerModifierClass}grid`);\n    if (breakpointParams.grid.fill && breakpointParams.grid.fill === 'column' || !breakpointParams.grid.fill && params.grid.fill === 'column') {\n      el.classList.add(`${params.containerModifierClass}grid-column`);\n    }\n    swiper.emitContainerClasses();\n  }\n\n  // Toggle navigation, pagination, scrollbar\n  ['navigation', 'pagination', 'scrollbar'].forEach(prop => {\n    const wasModuleEnabled = params[prop] && params[prop].enabled;\n    const isModuleEnabled = breakpointParams[prop] && breakpointParams[prop].enabled;\n    if (wasModuleEnabled && !isModuleEnabled) {\n      swiper[prop].disable();\n    }\n    if (!wasModuleEnabled && isModuleEnabled) {\n      swiper[prop].enable();\n    }\n  });\n  const directionChanged = breakpointParams.direction && breakpointParams.direction !== params.direction;\n  const needsReLoop = params.loop && (breakpointParams.slidesPerView !== params.slidesPerView || directionChanged);\n  if (directionChanged && initialized) {\n    swiper.changeDirection();\n  }\n  extend(swiper.params, breakpointParams);\n  const isEnabled = swiper.params.enabled;\n  Object.assign(swiper, {\n    allowTouchMove: swiper.params.allowTouchMove,\n    allowSlideNext: swiper.params.allowSlideNext,\n    allowSlidePrev: swiper.params.allowSlidePrev\n  });\n  if (wasEnabled && !isEnabled) {\n    swiper.disable();\n  } else if (!wasEnabled && isEnabled) {\n    swiper.enable();\n  }\n  swiper.currentBreakpoint = breakpoint;\n  swiper.emit('_beforeBreakpoint', breakpointParams);\n  if (needsReLoop && initialized) {\n    swiper.loopDestroy();\n    swiper.loopCreate(realIndex);\n    swiper.updateSlides();\n  }\n  swiper.emit('breakpoint', breakpointParams);\n}","import { getWindow } from 'ssr-window';\nexport default function getBreakpoint(breakpoints, base = 'window', containerEl) {\n  if (!breakpoints || base === 'container' && !containerEl) return undefined;\n  let breakpoint = false;\n  const window = getWindow();\n  const currentHeight = base === 'window' ? window.innerHeight : containerEl.clientHeight;\n  const points = Object.keys(breakpoints).map(point => {\n    if (typeof point === 'string' && point.indexOf('@') === 0) {\n      const minRatio = parseFloat(point.substr(1));\n      const value = currentHeight * minRatio;\n      return {\n        value,\n        point\n      };\n    }\n    return {\n      value: point,\n      point\n    };\n  });\n  points.sort((a, b) => parseInt(a.value, 10) - parseInt(b.value, 10));\n  for (let i = 0; i < points.length; i += 1) {\n    const {\n      point,\n      value\n    } = points[i];\n    if (base === 'window') {\n      if (window.matchMedia(`(min-width: ${value}px)`).matches) {\n        breakpoint = point;\n      }\n    } else if (value <= containerEl.clientWidth) {\n      breakpoint = point;\n    }\n  }\n  return breakpoint || 'max';\n}","import addClasses from './addClasses.js';\nimport removeClasses from './removeClasses.js';\nexport default {\n  addClasses,\n  removeClasses\n};","function prepareClasses(entries, prefix) {\n  const resultClasses = [];\n  entries.forEach(item => {\n    if (typeof item === 'object') {\n      Object.keys(item).forEach(classNames => {\n        if (item[classNames]) {\n          resultClasses.push(prefix + classNames);\n        }\n      });\n    } else if (typeof item === 'string') {\n      resultClasses.push(prefix + item);\n    }\n  });\n  return resultClasses;\n}\nexport default function addClasses() {\n  const swiper = this;\n  const {\n    classNames,\n    params,\n    rtl,\n    el,\n    device\n  } = swiper;\n  // prettier-ignore\n  const suffixes = prepareClasses(['initialized', params.direction, {\n    'free-mode': swiper.params.freeMode && params.freeMode.enabled\n  }, {\n    'autoheight': params.autoHeight\n  }, {\n    'rtl': rtl\n  }, {\n    'grid': params.grid && params.grid.rows > 1\n  }, {\n    'grid-column': params.grid && params.grid.rows > 1 && params.grid.fill === 'column'\n  }, {\n    'android': device.android\n  }, {\n    'ios': device.ios\n  }, {\n    'css-mode': params.cssMode\n  }, {\n    'centered': params.cssMode && params.centeredSlides\n  }, {\n    'watch-progress': params.watchSlidesProgress\n  }], params.containerModifierClass);\n  classNames.push(...suffixes);\n  el.classList.add(...classNames);\n  swiper.emitContainerClasses();\n}","export default function removeClasses() {\n  const swiper = this;\n  const {\n    el,\n    classNames\n  } = swiper;\n  el.classList.remove(...classNames);\n  swiper.emitContainerClasses();\n}","function checkOverflow() {\n  const swiper = this;\n  const {\n    isLocked: wasLocked,\n    params\n  } = swiper;\n  const {\n    slidesOffsetBefore\n  } = params;\n  if (slidesOffsetBefore) {\n    const lastSlideIndex = swiper.slides.length - 1;\n    const lastSlideRightEdge = swiper.slidesGrid[lastSlideIndex] + swiper.slidesSizesGrid[lastSlideIndex] + slidesOffsetBefore * 2;\n    swiper.isLocked = swiper.size > lastSlideRightEdge;\n  } else {\n    swiper.isLocked = swiper.snapGrid.length === 1;\n  }\n  if (params.allowSlideNext === true) {\n    swiper.allowSlideNext = !swiper.isLocked;\n  }\n  if (params.allowSlidePrev === true) {\n    swiper.allowSlidePrev = !swiper.isLocked;\n  }\n  if (wasLocked && wasLocked !== swiper.isLocked) {\n    swiper.isEnd = false;\n  }\n  if (wasLocked !== swiper.isLocked) {\n    swiper.emit(swiper.isLocked ? 'lock' : 'unlock');\n  }\n}\nexport default {\n  checkOverflow\n};","export default {\n  init: true,\n  direction: 'horizontal',\n  oneWayMovement: false,\n  touchEventsTarget: 'wrapper',\n  initialSlide: 0,\n  speed: 300,\n  cssMode: false,\n  updateOnWindowResize: true,\n  resizeObserver: true,\n  nested: false,\n  createElements: false,\n  enabled: true,\n  focusableElements: 'input, select, option, textarea, button, video, label',\n  // Overrides\n  width: null,\n  height: null,\n  //\n  preventInteractionOnTransition: false,\n  // ssr\n  userAgent: null,\n  url: null,\n  // To support iOS's swipe-to-go-back gesture (when being used in-app).\n  edgeSwipeDetection: false,\n  edgeSwipeThreshold: 20,\n  // Autoheight\n  autoHeight: false,\n  // Set wrapper width\n  setWrapperSize: false,\n  // Virtual Translate\n  virtualTranslate: false,\n  // Effects\n  effect: 'slide',\n  // 'slide' or 'fade' or 'cube' or 'coverflow' or 'flip'\n\n  // Breakpoints\n  breakpoints: undefined,\n  breakpointsBase: 'window',\n  // Slides grid\n  spaceBetween: 0,\n  slidesPerView: 1,\n  slidesPerGroup: 1,\n  slidesPerGroupSkip: 0,\n  slidesPerGroupAuto: false,\n  centeredSlides: false,\n  centeredSlidesBounds: false,\n  slidesOffsetBefore: 0,\n  // in px\n  slidesOffsetAfter: 0,\n  // in px\n  normalizeSlideIndex: true,\n  centerInsufficientSlides: false,\n  // Disable swiper and hide navigation when container not overflow\n  watchOverflow: true,\n  // Round length\n  roundLengths: false,\n  // Touches\n  touchRatio: 1,\n  touchAngle: 45,\n  simulateTouch: true,\n  shortSwipes: true,\n  longSwipes: true,\n  longSwipesRatio: 0.5,\n  longSwipesMs: 300,\n  followFinger: true,\n  allowTouchMove: true,\n  threshold: 5,\n  touchMoveStopPropagation: false,\n  touchStartPreventDefault: true,\n  touchStartForcePreventDefault: false,\n  touchReleaseOnEdges: false,\n  // Unique Navigation Elements\n  uniqueNavElements: true,\n  // Resistance\n  resistance: true,\n  resistanceRatio: 0.85,\n  // Progress\n  watchSlidesProgress: false,\n  // Cursor\n  grabCursor: false,\n  // Clicks\n  preventClicks: true,\n  preventClicksPropagation: true,\n  slideToClickedSlide: false,\n  // loop\n  loop: false,\n  loopedSlides: null,\n  loopPreventsSliding: true,\n  // rewind\n  rewind: false,\n  // Swiping/no swiping\n  allowSlidePrev: true,\n  allowSlideNext: true,\n  swipeHandler: null,\n  // '.swipe-handler',\n  noSwiping: true,\n  noSwipingClass: 'swiper-no-swiping',\n  noSwipingSelector: null,\n  // Passive Listeners\n  passiveListeners: true,\n  maxBackfaceHiddenSlides: 10,\n  // NS\n  containerModifierClass: 'swiper-',\n  // NEW\n  slideClass: 'swiper-slide',\n  slideActiveClass: 'swiper-slide-active',\n  slideVisibleClass: 'swiper-slide-visible',\n  slideNextClass: 'swiper-slide-next',\n  slidePrevClass: 'swiper-slide-prev',\n  wrapperClass: 'swiper-wrapper',\n  lazyPreloaderClass: 'swiper-lazy-preloader',\n  lazyPreloadPrevNext: 0,\n  // Callbacks\n  runCallbacksOnInit: true,\n  // Internals\n  _emitClasses: false\n};","import { extend } from '../shared/utils.js';\nexport default function moduleExtendParams(params, allModulesParams) {\n  return function extendParams(obj = {}) {\n    const moduleParamName = Object.keys(obj)[0];\n    const moduleParams = obj[moduleParamName];\n    if (typeof moduleParams !== 'object' || moduleParams === null) {\n      extend(allModulesParams, obj);\n      return;\n    }\n    if (['navigation', 'pagination', 'scrollbar'].indexOf(moduleParamName) >= 0 && params[moduleParamName] === true) {\n      params[moduleParamName] = {\n        auto: true\n      };\n    }\n    if (!(moduleParamName in params && 'enabled' in moduleParams)) {\n      extend(allModulesParams, obj);\n      return;\n    }\n    if (params[moduleParamName] === true) {\n      params[moduleParamName] = {\n        enabled: true\n      };\n    }\n    if (typeof params[moduleParamName] === 'object' && !('enabled' in params[moduleParamName])) {\n      params[moduleParamName].enabled = true;\n    }\n    if (!params[moduleParamName]) params[moduleParamName] = {\n      enabled: false\n    };\n    extend(allModulesParams, obj);\n  };\n}","import { getDocument } from 'ssr-window';\nimport { createElement, elementChildren, setCSSProperty } from '../../shared/utils.js';\nexport default function Virtual({\n  swiper,\n  extendParams,\n  on,\n  emit\n}) {\n  extendParams({\n    virtual: {\n      enabled: false,\n      slides: [],\n      cache: true,\n      renderSlide: null,\n      renderExternal: null,\n      renderExternalUpdate: true,\n      addSlidesBefore: 0,\n      addSlidesAfter: 0\n    }\n  });\n  let cssModeTimeout;\n  const document = getDocument();\n  swiper.virtual = {\n    cache: {},\n    from: undefined,\n    to: undefined,\n    slides: [],\n    offset: 0,\n    slidesGrid: []\n  };\n  const tempDOM = document.createElement('div');\n  function renderSlide(slide, index) {\n    const params = swiper.params.virtual;\n    if (params.cache && swiper.virtual.cache[index]) {\n      return swiper.virtual.cache[index];\n    }\n    // eslint-disable-next-line\n    let slideEl;\n    if (params.renderSlide) {\n      slideEl = params.renderSlide.call(swiper, slide, index);\n      if (typeof slideEl === 'string') {\n        tempDOM.innerHTML = slideEl;\n        slideEl = tempDOM.children[0];\n      }\n    } else if (swiper.isElement) {\n      slideEl = createElement('swiper-slide');\n    } else {\n      slideEl = createElement('div', swiper.params.slideClass);\n    }\n    slideEl.setAttribute('data-swiper-slide-index', index);\n    if (!params.renderSlide) {\n      slideEl.innerHTML = slide;\n    }\n    if (params.cache) swiper.virtual.cache[index] = slideEl;\n    return slideEl;\n  }\n  function update(force) {\n    const {\n      slidesPerView,\n      slidesPerGroup,\n      centeredSlides,\n      loop: isLoop\n    } = swiper.params;\n    const {\n      addSlidesBefore,\n      addSlidesAfter\n    } = swiper.params.virtual;\n    const {\n      from: previousFrom,\n      to: previousTo,\n      slides,\n      slidesGrid: previousSlidesGrid,\n      offset: previousOffset\n    } = swiper.virtual;\n    if (!swiper.params.cssMode) {\n      swiper.updateActiveIndex();\n    }\n    const activeIndex = swiper.activeIndex || 0;\n    let offsetProp;\n    if (swiper.rtlTranslate) offsetProp = 'right';else offsetProp = swiper.isHorizontal() ? 'left' : 'top';\n    let slidesAfter;\n    let slidesBefore;\n    if (centeredSlides) {\n      slidesAfter = Math.floor(slidesPerView / 2) + slidesPerGroup + addSlidesAfter;\n      slidesBefore = Math.floor(slidesPerView / 2) + slidesPerGroup + addSlidesBefore;\n    } else {\n      slidesAfter = slidesPerView + (slidesPerGroup - 1) + addSlidesAfter;\n      slidesBefore = (isLoop ? slidesPerView : slidesPerGroup) + addSlidesBefore;\n    }\n    let from = activeIndex - slidesBefore;\n    let to = activeIndex + slidesAfter;\n    if (!isLoop) {\n      from = Math.max(from, 0);\n      to = Math.min(to, slides.length - 1);\n    }\n    let offset = (swiper.slidesGrid[from] || 0) - (swiper.slidesGrid[0] || 0);\n    if (isLoop && activeIndex >= slidesBefore) {\n      from -= slidesBefore;\n      if (!centeredSlides) offset += swiper.slidesGrid[0];\n    } else if (isLoop && activeIndex < slidesBefore) {\n      from = -slidesBefore;\n      if (centeredSlides) offset += swiper.slidesGrid[0];\n    }\n    Object.assign(swiper.virtual, {\n      from,\n      to,\n      offset,\n      slidesGrid: swiper.slidesGrid,\n      slidesBefore,\n      slidesAfter\n    });\n    function onRendered() {\n      swiper.updateSlides();\n      swiper.updateProgress();\n      swiper.updateSlidesClasses();\n      emit('virtualUpdate');\n    }\n    if (previousFrom === from && previousTo === to && !force) {\n      if (swiper.slidesGrid !== previousSlidesGrid && offset !== previousOffset) {\n        swiper.slides.forEach(slideEl => {\n          slideEl.style[offsetProp] = `${offset - Math.abs(swiper.cssOverflowAdjustment())}px`;\n        });\n      }\n      swiper.updateProgress();\n      emit('virtualUpdate');\n      return;\n    }\n    if (swiper.params.virtual.renderExternal) {\n      swiper.params.virtual.renderExternal.call(swiper, {\n        offset,\n        from,\n        to,\n        slides: function getSlides() {\n          const slidesToRender = [];\n          for (let i = from; i <= to; i += 1) {\n            slidesToRender.push(slides[i]);\n          }\n          return slidesToRender;\n        }()\n      });\n      if (swiper.params.virtual.renderExternalUpdate) {\n        onRendered();\n      } else {\n        emit('virtualUpdate');\n      }\n      return;\n    }\n    const prependIndexes = [];\n    const appendIndexes = [];\n    const getSlideIndex = index => {\n      let slideIndex = index;\n      if (index < 0) {\n        slideIndex = slides.length + index;\n      } else if (slideIndex >= slides.length) {\n        // eslint-disable-next-line\n        slideIndex = slideIndex - slides.length;\n      }\n      return slideIndex;\n    };\n    if (force) {\n      swiper.slidesEl.querySelectorAll(`.${swiper.params.slideClass}, swiper-slide`).forEach(slideEl => {\n        slideEl.remove();\n      });\n    } else {\n      for (let i = previousFrom; i <= previousTo; i += 1) {\n        if (i < from || i > to) {\n          const slideIndex = getSlideIndex(i);\n          swiper.slidesEl.querySelectorAll(`.${swiper.params.slideClass}[data-swiper-slide-index=\"${slideIndex}\"], swiper-slide[data-swiper-slide-index=\"${slideIndex}\"]`).forEach(slideEl => {\n            slideEl.remove();\n          });\n        }\n      }\n    }\n    const loopFrom = isLoop ? -slides.length : 0;\n    const loopTo = isLoop ? slides.length * 2 : slides.length;\n    for (let i = loopFrom; i < loopTo; i += 1) {\n      if (i >= from && i <= to) {\n        const slideIndex = getSlideIndex(i);\n        if (typeof previousTo === 'undefined' || force) {\n          appendIndexes.push(slideIndex);\n        } else {\n          if (i > previousTo) appendIndexes.push(slideIndex);\n          if (i < previousFrom) prependIndexes.push(slideIndex);\n        }\n      }\n    }\n    appendIndexes.forEach(index => {\n      swiper.slidesEl.append(renderSlide(slides[index], index));\n    });\n    if (isLoop) {\n      for (let i = prependIndexes.length - 1; i >= 0; i -= 1) {\n        const index = prependIndexes[i];\n        swiper.slidesEl.prepend(renderSlide(slides[index], index));\n      }\n    } else {\n      prependIndexes.sort((a, b) => b - a);\n      prependIndexes.forEach(index => {\n        swiper.slidesEl.prepend(renderSlide(slides[index], index));\n      });\n    }\n    elementChildren(swiper.slidesEl, '.swiper-slide, swiper-slide').forEach(slideEl => {\n      slideEl.style[offsetProp] = `${offset - Math.abs(swiper.cssOverflowAdjustment())}px`;\n    });\n    onRendered();\n  }\n  function appendSlide(slides) {\n    if (typeof slides === 'object' && 'length' in slides) {\n      for (let i = 0; i < slides.length; i += 1) {\n        if (slides[i]) swiper.virtual.slides.push(slides[i]);\n      }\n    } else {\n      swiper.virtual.slides.push(slides);\n    }\n    update(true);\n  }\n  function prependSlide(slides) {\n    const activeIndex = swiper.activeIndex;\n    let newActiveIndex = activeIndex + 1;\n    let numberOfNewSlides = 1;\n    if (Array.isArray(slides)) {\n      for (let i = 0; i < slides.length; i += 1) {\n        if (slides[i]) swiper.virtual.slides.unshift(slides[i]);\n      }\n      newActiveIndex = activeIndex + slides.length;\n      numberOfNewSlides = slides.length;\n    } else {\n      swiper.virtual.slides.unshift(slides);\n    }\n    if (swiper.params.virtual.cache) {\n      const cache = swiper.virtual.cache;\n      const newCache = {};\n      Object.keys(cache).forEach(cachedIndex => {\n        const cachedEl = cache[cachedIndex];\n        const cachedElIndex = cachedEl.getAttribute('data-swiper-slide-index');\n        if (cachedElIndex) {\n          cachedEl.setAttribute('data-swiper-slide-index', parseInt(cachedElIndex, 10) + numberOfNewSlides);\n        }\n        newCache[parseInt(cachedIndex, 10) + numberOfNewSlides] = cachedEl;\n      });\n      swiper.virtual.cache = newCache;\n    }\n    update(true);\n    swiper.slideTo(newActiveIndex, 0);\n  }\n  function removeSlide(slidesIndexes) {\n    if (typeof slidesIndexes === 'undefined' || slidesIndexes === null) return;\n    let activeIndex = swiper.activeIndex;\n    if (Array.isArray(slidesIndexes)) {\n      for (let i = slidesIndexes.length - 1; i >= 0; i -= 1) {\n        swiper.virtual.slides.splice(slidesIndexes[i], 1);\n        if (swiper.params.virtual.cache) {\n          delete swiper.virtual.cache[slidesIndexes[i]];\n        }\n        if (slidesIndexes[i] < activeIndex) activeIndex -= 1;\n        activeIndex = Math.max(activeIndex, 0);\n      }\n    } else {\n      swiper.virtual.slides.splice(slidesIndexes, 1);\n      if (swiper.params.virtual.cache) {\n        delete swiper.virtual.cache[slidesIndexes];\n      }\n      if (slidesIndexes < activeIndex) activeIndex -= 1;\n      activeIndex = Math.max(activeIndex, 0);\n    }\n    update(true);\n    swiper.slideTo(activeIndex, 0);\n  }\n  function removeAllSlides() {\n    swiper.virtual.slides = [];\n    if (swiper.params.virtual.cache) {\n      swiper.virtual.cache = {};\n    }\n    update(true);\n    swiper.slideTo(0, 0);\n  }\n  on('beforeInit', () => {\n    if (!swiper.params.virtual.enabled) return;\n    let domSlidesAssigned;\n    if (typeof swiper.passedParams.virtual.slides === 'undefined') {\n      const slides = [...swiper.slidesEl.children].filter(el => el.matches(`.${swiper.params.slideClass}, swiper-slide`));\n      if (slides && slides.length) {\n        swiper.virtual.slides = [...slides];\n        domSlidesAssigned = true;\n        slides.forEach((slideEl, slideIndex) => {\n          slideEl.setAttribute('data-swiper-slide-index', slideIndex);\n          swiper.virtual.cache[slideIndex] = slideEl;\n          slideEl.remove();\n        });\n      }\n    }\n    if (!domSlidesAssigned) {\n      swiper.virtual.slides = swiper.params.virtual.slides;\n    }\n    swiper.classNames.push(`${swiper.params.containerModifierClass}virtual`);\n    swiper.params.watchSlidesProgress = true;\n    swiper.originalParams.watchSlidesProgress = true;\n    if (!swiper.params.initialSlide) {\n      update();\n    }\n  });\n  on('setTranslate', () => {\n    if (!swiper.params.virtual.enabled) return;\n    if (swiper.params.cssMode && !swiper._immediateVirtual) {\n      clearTimeout(cssModeTimeout);\n      cssModeTimeout = setTimeout(() => {\n        update();\n      }, 100);\n    } else {\n      update();\n    }\n  });\n  on('init update resize', () => {\n    if (!swiper.params.virtual.enabled) return;\n    if (swiper.params.cssMode) {\n      setCSSProperty(swiper.wrapperEl, '--swiper-virtual-size', `${swiper.virtualSize}px`);\n    }\n  });\n  Object.assign(swiper.virtual, {\n    appendSlide,\n    prependSlide,\n    removeSlide,\n    removeAllSlides,\n    update\n  });\n}","/* eslint-disable consistent-return */\nimport { getWindow, getDocument } from 'ssr-window';\nimport { elementOffset, elementParents } from '../../shared/utils.js';\nexport default function Keyboard({\n  swiper,\n  extendParams,\n  on,\n  emit\n}) {\n  const document = getDocument();\n  const window = getWindow();\n  swiper.keyboard = {\n    enabled: false\n  };\n  extendParams({\n    keyboard: {\n      enabled: false,\n      onlyInViewport: true,\n      pageUpDown: true\n    }\n  });\n  function handle(event) {\n    if (!swiper.enabled) return;\n    const {\n      rtlTranslate: rtl\n    } = swiper;\n    let e = event;\n    if (e.originalEvent) e = e.originalEvent; // jquery fix\n    const kc = e.keyCode || e.charCode;\n    const pageUpDown = swiper.params.keyboard.pageUpDown;\n    const isPageUp = pageUpDown && kc === 33;\n    const isPageDown = pageUpDown && kc === 34;\n    const isArrowLeft = kc === 37;\n    const isArrowRight = kc === 39;\n    const isArrowUp = kc === 38;\n    const isArrowDown = kc === 40;\n    // Directions locks\n    if (!swiper.allowSlideNext && (swiper.isHorizontal() && isArrowRight || swiper.isVertical() && isArrowDown || isPageDown)) {\n      return false;\n    }\n    if (!swiper.allowSlidePrev && (swiper.isHorizontal() && isArrowLeft || swiper.isVertical() && isArrowUp || isPageUp)) {\n      return false;\n    }\n    if (e.shiftKey || e.altKey || e.ctrlKey || e.metaKey) {\n      return undefined;\n    }\n    if (document.activeElement && document.activeElement.nodeName && (document.activeElement.nodeName.toLowerCase() === 'input' || document.activeElement.nodeName.toLowerCase() === 'textarea')) {\n      return undefined;\n    }\n    if (swiper.params.keyboard.onlyInViewport && (isPageUp || isPageDown || isArrowLeft || isArrowRight || isArrowUp || isArrowDown)) {\n      let inView = false;\n      // Check that swiper should be inside of visible area of window\n      if (elementParents(swiper.el, `.${swiper.params.slideClass}, swiper-slide`).length > 0 && elementParents(swiper.el, `.${swiper.params.slideActiveClass}`).length === 0) {\n        return undefined;\n      }\n      const el = swiper.el;\n      const swiperWidth = el.clientWidth;\n      const swiperHeight = el.clientHeight;\n      const windowWidth = window.innerWidth;\n      const windowHeight = window.innerHeight;\n      const swiperOffset = elementOffset(el);\n      if (rtl) swiperOffset.left -= el.scrollLeft;\n      const swiperCoord = [[swiperOffset.left, swiperOffset.top], [swiperOffset.left + swiperWidth, swiperOffset.top], [swiperOffset.left, swiperOffset.top + swiperHeight], [swiperOffset.left + swiperWidth, swiperOffset.top + swiperHeight]];\n      for (let i = 0; i < swiperCoord.length; i += 1) {\n        const point = swiperCoord[i];\n        if (point[0] >= 0 && point[0] <= windowWidth && point[1] >= 0 && point[1] <= windowHeight) {\n          if (point[0] === 0 && point[1] === 0) continue; // eslint-disable-line\n          inView = true;\n        }\n      }\n      if (!inView) return undefined;\n    }\n    if (swiper.isHorizontal()) {\n      if (isPageUp || isPageDown || isArrowLeft || isArrowRight) {\n        if (e.preventDefault) e.preventDefault();else e.returnValue = false;\n      }\n      if ((isPageDown || isArrowRight) && !rtl || (isPageUp || isArrowLeft) && rtl) swiper.slideNext();\n      if ((isPageUp || isArrowLeft) && !rtl || (isPageDown || isArrowRight) && rtl) swiper.slidePrev();\n    } else {\n      if (isPageUp || isPageDown || isArrowUp || isArrowDown) {\n        if (e.preventDefault) e.preventDefault();else e.returnValue = false;\n      }\n      if (isPageDown || isArrowDown) swiper.slideNext();\n      if (isPageUp || isArrowUp) swiper.slidePrev();\n    }\n    emit('keyPress', kc);\n    return undefined;\n  }\n  function enable() {\n    if (swiper.keyboard.enabled) return;\n    document.addEventListener('keydown', handle);\n    swiper.keyboard.enabled = true;\n  }\n  function disable() {\n    if (!swiper.keyboard.enabled) return;\n    document.removeEventListener('keydown', handle);\n    swiper.keyboard.enabled = false;\n  }\n  on('init', () => {\n    if (swiper.params.keyboard.enabled) {\n      enable();\n    }\n  });\n  on('destroy', () => {\n    if (swiper.keyboard.enabled) {\n      disable();\n    }\n  });\n  Object.assign(swiper.keyboard, {\n    enable,\n    disable\n  });\n}","/* eslint-disable consistent-return */\nimport { getWindow } from 'ssr-window';\nimport { now, nextTick } from '../../shared/utils.js';\nexport default function Mousewheel({\n  swiper,\n  extendParams,\n  on,\n  emit\n}) {\n  const window = getWindow();\n  extendParams({\n    mousewheel: {\n      enabled: false,\n      releaseOnEdges: false,\n      invert: false,\n      forceToAxis: false,\n      sensitivity: 1,\n      eventsTarget: 'container',\n      thresholdDelta: null,\n      thresholdTime: null,\n      noMousewheelClass: 'swiper-no-mousewheel'\n    }\n  });\n  swiper.mousewheel = {\n    enabled: false\n  };\n  let timeout;\n  let lastScrollTime = now();\n  let lastEventBeforeSnap;\n  const recentWheelEvents = [];\n  function normalize(e) {\n    // Reasonable defaults\n    const PIXEL_STEP = 10;\n    const LINE_HEIGHT = 40;\n    const PAGE_HEIGHT = 800;\n    let sX = 0;\n    let sY = 0; // spinX, spinY\n    let pX = 0;\n    let pY = 0; // pixelX, pixelY\n\n    // Legacy\n    if ('detail' in e) {\n      sY = e.detail;\n    }\n    if ('wheelDelta' in e) {\n      sY = -e.wheelDelta / 120;\n    }\n    if ('wheelDeltaY' in e) {\n      sY = -e.wheelDeltaY / 120;\n    }\n    if ('wheelDeltaX' in e) {\n      sX = -e.wheelDeltaX / 120;\n    }\n\n    // side scrolling on FF with DOMMouseScroll\n    if ('axis' in e && e.axis === e.HORIZONTAL_AXIS) {\n      sX = sY;\n      sY = 0;\n    }\n    pX = sX * PIXEL_STEP;\n    pY = sY * PIXEL_STEP;\n    if ('deltaY' in e) {\n      pY = e.deltaY;\n    }\n    if ('deltaX' in e) {\n      pX = e.deltaX;\n    }\n    if (e.shiftKey && !pX) {\n      // if user scrolls with shift he wants horizontal scroll\n      pX = pY;\n      pY = 0;\n    }\n    if ((pX || pY) && e.deltaMode) {\n      if (e.deltaMode === 1) {\n        // delta in LINE units\n        pX *= LINE_HEIGHT;\n        pY *= LINE_HEIGHT;\n      } else {\n        // delta in PAGE units\n        pX *= PAGE_HEIGHT;\n        pY *= PAGE_HEIGHT;\n      }\n    }\n\n    // Fall-back if spin cannot be determined\n    if (pX && !sX) {\n      sX = pX < 1 ? -1 : 1;\n    }\n    if (pY && !sY) {\n      sY = pY < 1 ? -1 : 1;\n    }\n    return {\n      spinX: sX,\n      spinY: sY,\n      pixelX: pX,\n      pixelY: pY\n    };\n  }\n  function handleMouseEnter() {\n    if (!swiper.enabled) return;\n    swiper.mouseEntered = true;\n  }\n  function handleMouseLeave() {\n    if (!swiper.enabled) return;\n    swiper.mouseEntered = false;\n  }\n  function animateSlider(newEvent) {\n    if (swiper.params.mousewheel.thresholdDelta && newEvent.delta < swiper.params.mousewheel.thresholdDelta) {\n      // Prevent if delta of wheel scroll delta is below configured threshold\n      return false;\n    }\n    if (swiper.params.mousewheel.thresholdTime && now() - lastScrollTime < swiper.params.mousewheel.thresholdTime) {\n      // Prevent if time between scrolls is below configured threshold\n      return false;\n    }\n\n    // If the movement is NOT big enough and\n    // if the last time the user scrolled was too close to the current one (avoid continuously triggering the slider):\n    //   Don't go any further (avoid insignificant scroll movement).\n    if (newEvent.delta >= 6 && now() - lastScrollTime < 60) {\n      // Return false as a default\n      return true;\n    }\n    // If user is scrolling towards the end:\n    //   If the slider hasn't hit the latest slide or\n    //   if the slider is a loop and\n    //   if the slider isn't moving right now:\n    //     Go to next slide and\n    //     emit a scroll event.\n    // Else (the user is scrolling towards the beginning) and\n    // if the slider hasn't hit the first slide or\n    // if the slider is a loop and\n    // if the slider isn't moving right now:\n    //   Go to prev slide and\n    //   emit a scroll event.\n    if (newEvent.direction < 0) {\n      if ((!swiper.isEnd || swiper.params.loop) && !swiper.animating) {\n        swiper.slideNext();\n        emit('scroll', newEvent.raw);\n      }\n    } else if ((!swiper.isBeginning || swiper.params.loop) && !swiper.animating) {\n      swiper.slidePrev();\n      emit('scroll', newEvent.raw);\n    }\n    // If you got here is because an animation has been triggered so store the current time\n    lastScrollTime = new window.Date().getTime();\n    // Return false as a default\n    return false;\n  }\n  function releaseScroll(newEvent) {\n    const params = swiper.params.mousewheel;\n    if (newEvent.direction < 0) {\n      if (swiper.isEnd && !swiper.params.loop && params.releaseOnEdges) {\n        // Return true to animate scroll on edges\n        return true;\n      }\n    } else if (swiper.isBeginning && !swiper.params.loop && params.releaseOnEdges) {\n      // Return true to animate scroll on edges\n      return true;\n    }\n    return false;\n  }\n  function handle(event) {\n    let e = event;\n    let disableParentSwiper = true;\n    if (!swiper.enabled) return;\n\n    // Ignore event if the target or its parents have the swiper-no-mousewheel class\n    if (event.target.closest(`.${swiper.params.mousewheel.noMousewheelClass}`)) return;\n    const params = swiper.params.mousewheel;\n    if (swiper.params.cssMode) {\n      e.preventDefault();\n    }\n    let targetEl = swiper.el;\n    if (swiper.params.mousewheel.eventsTarget !== 'container') {\n      targetEl = document.querySelector(swiper.params.mousewheel.eventsTarget);\n    }\n    const targetElContainsTarget = targetEl && targetEl.contains(e.target);\n    if (!swiper.mouseEntered && !targetElContainsTarget && !params.releaseOnEdges) return true;\n    if (e.originalEvent) e = e.originalEvent; // jquery fix\n    let delta = 0;\n    const rtlFactor = swiper.rtlTranslate ? -1 : 1;\n    const data = normalize(e);\n    if (params.forceToAxis) {\n      if (swiper.isHorizontal()) {\n        if (Math.abs(data.pixelX) > Math.abs(data.pixelY)) delta = -data.pixelX * rtlFactor;else return true;\n      } else if (Math.abs(data.pixelY) > Math.abs(data.pixelX)) delta = -data.pixelY;else return true;\n    } else {\n      delta = Math.abs(data.pixelX) > Math.abs(data.pixelY) ? -data.pixelX * rtlFactor : -data.pixelY;\n    }\n    if (delta === 0) return true;\n    if (params.invert) delta = -delta;\n\n    // Get the scroll positions\n    let positions = swiper.getTranslate() + delta * params.sensitivity;\n    if (positions >= swiper.minTranslate()) positions = swiper.minTranslate();\n    if (positions <= swiper.maxTranslate()) positions = swiper.maxTranslate();\n\n    // When loop is true:\n    //     the disableParentSwiper will be true.\n    // When loop is false:\n    //     if the scroll positions is not on edge,\n    //     then the disableParentSwiper will be true.\n    //     if the scroll on edge positions,\n    //     then the disableParentSwiper will be false.\n    disableParentSwiper = swiper.params.loop ? true : !(positions === swiper.minTranslate() || positions === swiper.maxTranslate());\n    if (disableParentSwiper && swiper.params.nested) e.stopPropagation();\n    if (!swiper.params.freeMode || !swiper.params.freeMode.enabled) {\n      // Register the new event in a variable which stores the relevant data\n      const newEvent = {\n        time: now(),\n        delta: Math.abs(delta),\n        direction: Math.sign(delta),\n        raw: event\n      };\n\n      // Keep the most recent events\n      if (recentWheelEvents.length >= 2) {\n        recentWheelEvents.shift(); // only store the last N events\n      }\n\n      const prevEvent = recentWheelEvents.length ? recentWheelEvents[recentWheelEvents.length - 1] : undefined;\n      recentWheelEvents.push(newEvent);\n\n      // If there is at least one previous recorded event:\n      //   If direction has changed or\n      //   if the scroll is quicker than the previous one:\n      //     Animate the slider.\n      // Else (this is the first time the wheel is moved):\n      //     Animate the slider.\n      if (prevEvent) {\n        if (newEvent.direction !== prevEvent.direction || newEvent.delta > prevEvent.delta || newEvent.time > prevEvent.time + 150) {\n          animateSlider(newEvent);\n        }\n      } else {\n        animateSlider(newEvent);\n      }\n\n      // If it's time to release the scroll:\n      //   Return now so you don't hit the preventDefault.\n      if (releaseScroll(newEvent)) {\n        return true;\n      }\n    } else {\n      // Freemode or scrollContainer:\n\n      // If we recently snapped after a momentum scroll, then ignore wheel events\n      // to give time for the deceleration to finish. Stop ignoring after 500 msecs\n      // or if it's a new scroll (larger delta or inverse sign as last event before\n      // an end-of-momentum snap).\n      const newEvent = {\n        time: now(),\n        delta: Math.abs(delta),\n        direction: Math.sign(delta)\n      };\n      const ignoreWheelEvents = lastEventBeforeSnap && newEvent.time < lastEventBeforeSnap.time + 500 && newEvent.delta <= lastEventBeforeSnap.delta && newEvent.direction === lastEventBeforeSnap.direction;\n      if (!ignoreWheelEvents) {\n        lastEventBeforeSnap = undefined;\n        let position = swiper.getTranslate() + delta * params.sensitivity;\n        const wasBeginning = swiper.isBeginning;\n        const wasEnd = swiper.isEnd;\n        if (position >= swiper.minTranslate()) position = swiper.minTranslate();\n        if (position <= swiper.maxTranslate()) position = swiper.maxTranslate();\n        swiper.setTransition(0);\n        swiper.setTranslate(position);\n        swiper.updateProgress();\n        swiper.updateActiveIndex();\n        swiper.updateSlidesClasses();\n        if (!wasBeginning && swiper.isBeginning || !wasEnd && swiper.isEnd) {\n          swiper.updateSlidesClasses();\n        }\n        if (swiper.params.loop) {\n          swiper.loopFix({\n            direction: newEvent.direction < 0 ? 'next' : 'prev',\n            byMousewheel: true\n          });\n        }\n        if (swiper.params.freeMode.sticky) {\n          // When wheel scrolling starts with sticky (aka snap) enabled, then detect\n          // the end of a momentum scroll by storing recent (N=15?) wheel events.\n          // 1. do all N events have decreasing or same (absolute value) delta?\n          // 2. did all N events arrive in the last M (M=500?) msecs?\n          // 3. does the earliest event have an (absolute value) delta that's\n          //    at least P (P=1?) larger than the most recent event's delta?\n          // 4. does the latest event have a delta that's smaller than Q (Q=6?) pixels?\n          // If 1-4 are \"yes\" then we're near the end of a momentum scroll deceleration.\n          // Snap immediately and ignore remaining wheel events in this scroll.\n          // See comment above for \"remaining wheel events in this scroll\" determination.\n          // If 1-4 aren't satisfied, then wait to snap until 500ms after the last event.\n          clearTimeout(timeout);\n          timeout = undefined;\n          if (recentWheelEvents.length >= 15) {\n            recentWheelEvents.shift(); // only store the last N events\n          }\n\n          const prevEvent = recentWheelEvents.length ? recentWheelEvents[recentWheelEvents.length - 1] : undefined;\n          const firstEvent = recentWheelEvents[0];\n          recentWheelEvents.push(newEvent);\n          if (prevEvent && (newEvent.delta > prevEvent.delta || newEvent.direction !== prevEvent.direction)) {\n            // Increasing or reverse-sign delta means the user started scrolling again. Clear the wheel event log.\n            recentWheelEvents.splice(0);\n          } else if (recentWheelEvents.length >= 15 && newEvent.time - firstEvent.time < 500 && firstEvent.delta - newEvent.delta >= 1 && newEvent.delta <= 6) {\n            // We're at the end of the deceleration of a momentum scroll, so there's no need\n            // to wait for more events. Snap ASAP on the next tick.\n            // Also, because there's some remaining momentum we'll bias the snap in the\n            // direction of the ongoing scroll because it's better UX for the scroll to snap\n            // in the same direction as the scroll instead of reversing to snap.  Therefore,\n            // if it's already scrolled more than 20% in the current direction, keep going.\n            const snapToThreshold = delta > 0 ? 0.8 : 0.2;\n            lastEventBeforeSnap = newEvent;\n            recentWheelEvents.splice(0);\n            timeout = nextTick(() => {\n              swiper.slideToClosest(swiper.params.speed, true, undefined, snapToThreshold);\n            }, 0); // no delay; move on next tick\n          }\n\n          if (!timeout) {\n            // if we get here, then we haven't detected the end of a momentum scroll, so\n            // we'll consider a scroll \"complete\" when there haven't been any wheel events\n            // for 500ms.\n            timeout = nextTick(() => {\n              const snapToThreshold = 0.5;\n              lastEventBeforeSnap = newEvent;\n              recentWheelEvents.splice(0);\n              swiper.slideToClosest(swiper.params.speed, true, undefined, snapToThreshold);\n            }, 500);\n          }\n        }\n\n        // Emit event\n        if (!ignoreWheelEvents) emit('scroll', e);\n\n        // Stop autoplay\n        if (swiper.params.autoplay && swiper.params.autoplayDisableOnInteraction) swiper.autoplay.stop();\n        // Return page scroll on edge positions\n        if (position === swiper.minTranslate() || position === swiper.maxTranslate()) return true;\n      }\n    }\n    if (e.preventDefault) e.preventDefault();else e.returnValue = false;\n    return false;\n  }\n  function events(method) {\n    let targetEl = swiper.el;\n    if (swiper.params.mousewheel.eventsTarget !== 'container') {\n      targetEl = document.querySelector(swiper.params.mousewheel.eventsTarget);\n    }\n    targetEl[method]('mouseenter', handleMouseEnter);\n    targetEl[method]('mouseleave', handleMouseLeave);\n    targetEl[method]('wheel', handle);\n  }\n  function enable() {\n    if (swiper.params.cssMode) {\n      swiper.wrapperEl.removeEventListener('wheel', handle);\n      return true;\n    }\n    if (swiper.mousewheel.enabled) return false;\n    events('addEventListener');\n    swiper.mousewheel.enabled = true;\n    return true;\n  }\n  function disable() {\n    if (swiper.params.cssMode) {\n      swiper.wrapperEl.addEventListener(event, handle);\n      return true;\n    }\n    if (!swiper.mousewheel.enabled) return false;\n    events('removeEventListener');\n    swiper.mousewheel.enabled = false;\n    return true;\n  }\n  on('init', () => {\n    if (!swiper.params.mousewheel.enabled && swiper.params.cssMode) {\n      disable();\n    }\n    if (swiper.params.mousewheel.enabled) enable();\n  });\n  on('destroy', () => {\n    if (swiper.params.cssMode) {\n      enable();\n    }\n    if (swiper.mousewheel.enabled) disable();\n  });\n  Object.assign(swiper.mousewheel, {\n    enable,\n    disable\n  });\n}","import createElementIfNotDefined from '../../shared/create-element-if-not-defined.js';\nexport default function Navigation({\n  swiper,\n  extendParams,\n  on,\n  emit\n}) {\n  extendParams({\n    navigation: {\n      nextEl: null,\n      prevEl: null,\n      hideOnClick: false,\n      disabledClass: 'swiper-button-disabled',\n      hiddenClass: 'swiper-button-hidden',\n      lockClass: 'swiper-button-lock',\n      navigationDisabledClass: 'swiper-navigation-disabled'\n    }\n  });\n  swiper.navigation = {\n    nextEl: null,\n    prevEl: null\n  };\n  const makeElementsArray = el => {\n    if (!Array.isArray(el)) el = [el].filter(e => !!e);\n    return el;\n  };\n  function getEl(el) {\n    let res;\n    if (el && typeof el === 'string' && swiper.isElement) {\n      res = swiper.el.shadowRoot.querySelector(el);\n      if (res) return res;\n    }\n    if (el) {\n      if (typeof el === 'string') res = [...document.querySelectorAll(el)];\n      if (swiper.params.uniqueNavElements && typeof el === 'string' && res.length > 1 && swiper.el.querySelectorAll(el).length === 1) {\n        res = swiper.el.querySelector(el);\n      }\n    }\n    if (el && !res) return el;\n    // if (Array.isArray(res) && res.length === 1) res = res[0];\n    return res;\n  }\n  function toggleEl(el, disabled) {\n    const params = swiper.params.navigation;\n    el = makeElementsArray(el);\n    el.forEach(subEl => {\n      if (subEl) {\n        subEl.classList[disabled ? 'add' : 'remove'](...params.disabledClass.split(' '));\n        if (subEl.tagName === 'BUTTON') subEl.disabled = disabled;\n        if (swiper.params.watchOverflow && swiper.enabled) {\n          subEl.classList[swiper.isLocked ? 'add' : 'remove'](params.lockClass);\n        }\n      }\n    });\n  }\n  function update() {\n    // Update Navigation Buttons\n    const {\n      nextEl,\n      prevEl\n    } = swiper.navigation;\n    if (swiper.params.loop) {\n      toggleEl(prevEl, false);\n      toggleEl(nextEl, false);\n      return;\n    }\n    toggleEl(prevEl, swiper.isBeginning && !swiper.params.rewind);\n    toggleEl(nextEl, swiper.isEnd && !swiper.params.rewind);\n  }\n  function onPrevClick(e) {\n    e.preventDefault();\n    if (swiper.isBeginning && !swiper.params.loop && !swiper.params.rewind) return;\n    swiper.slidePrev();\n    emit('navigationPrev');\n  }\n  function onNextClick(e) {\n    e.preventDefault();\n    if (swiper.isEnd && !swiper.params.loop && !swiper.params.rewind) return;\n    swiper.slideNext();\n    emit('navigationNext');\n  }\n  function init() {\n    const params = swiper.params.navigation;\n    swiper.params.navigation = createElementIfNotDefined(swiper, swiper.originalParams.navigation, swiper.params.navigation, {\n      nextEl: 'swiper-button-next',\n      prevEl: 'swiper-button-prev'\n    });\n    if (!(params.nextEl || params.prevEl)) return;\n    let nextEl = getEl(params.nextEl);\n    let prevEl = getEl(params.prevEl);\n    Object.assign(swiper.navigation, {\n      nextEl,\n      prevEl\n    });\n    nextEl = makeElementsArray(nextEl);\n    prevEl = makeElementsArray(prevEl);\n    const initButton = (el, dir) => {\n      if (el) {\n        el.addEventListener('click', dir === 'next' ? onNextClick : onPrevClick);\n      }\n      if (!swiper.enabled && el) {\n        el.classList.add(...params.lockClass.split(' '));\n      }\n    };\n    nextEl.forEach(el => initButton(el, 'next'));\n    prevEl.forEach(el => initButton(el, 'prev'));\n  }\n  function destroy() {\n    let {\n      nextEl,\n      prevEl\n    } = swiper.navigation;\n    nextEl = makeElementsArray(nextEl);\n    prevEl = makeElementsArray(prevEl);\n    const destroyButton = (el, dir) => {\n      el.removeEventListener('click', dir === 'next' ? onNextClick : onPrevClick);\n      el.classList.remove(...swiper.params.navigation.disabledClass.split(' '));\n    };\n    nextEl.forEach(el => destroyButton(el, 'next'));\n    prevEl.forEach(el => destroyButton(el, 'prev'));\n  }\n  on('init', () => {\n    if (swiper.params.navigation.enabled === false) {\n      // eslint-disable-next-line\n      disable();\n    } else {\n      init();\n      update();\n    }\n  });\n  on('toEdge fromEdge lock unlock', () => {\n    update();\n  });\n  on('destroy', () => {\n    destroy();\n  });\n  on('enable disable', () => {\n    let {\n      nextEl,\n      prevEl\n    } = swiper.navigation;\n    nextEl = makeElementsArray(nextEl);\n    prevEl = makeElementsArray(prevEl);\n    [...nextEl, ...prevEl].filter(el => !!el).forEach(el => el.classList[swiper.enabled ? 'remove' : 'add'](swiper.params.navigation.lockClass));\n  });\n  on('click', (_s, e) => {\n    let {\n      nextEl,\n      prevEl\n    } = swiper.navigation;\n    nextEl = makeElementsArray(nextEl);\n    prevEl = makeElementsArray(prevEl);\n    const targetEl = e.target;\n    if (swiper.params.navigation.hideOnClick && !prevEl.includes(targetEl) && !nextEl.includes(targetEl)) {\n      if (swiper.pagination && swiper.params.pagination && swiper.params.pagination.clickable && (swiper.pagination.el === targetEl || swiper.pagination.el.contains(targetEl))) return;\n      let isHidden;\n      if (nextEl.length) {\n        isHidden = nextEl[0].classList.contains(swiper.params.navigation.hiddenClass);\n      } else if (prevEl.length) {\n        isHidden = prevEl[0].classList.contains(swiper.params.navigation.hiddenClass);\n      }\n      if (isHidden === true) {\n        emit('navigationShow');\n      } else {\n        emit('navigationHide');\n      }\n      [...nextEl, ...prevEl].filter(el => !!el).forEach(el => el.classList.toggle(swiper.params.navigation.hiddenClass));\n    }\n  });\n  const enable = () => {\n    swiper.el.classList.remove(...swiper.params.navigation.navigationDisabledClass.split(' '));\n    init();\n    update();\n  };\n  const disable = () => {\n    swiper.el.classList.add(...swiper.params.navigation.navigationDisabledClass.split(' '));\n    destroy();\n  };\n  Object.assign(swiper.navigation, {\n    enable,\n    disable,\n    update,\n    init,\n    destroy\n  });\n}","import { createElement, elementChildren } from './utils.js';\nexport default function createElementIfNotDefined(swiper, originalParams, params, checkProps) {\n  if (swiper.params.createElements) {\n    Object.keys(checkProps).forEach(key => {\n      if (!params[key] && params.auto === true) {\n        let element = elementChildren(swiper.el, `.${checkProps[key]}`)[0];\n        if (!element) {\n          element = createElement('div', checkProps[key]);\n          element.className = checkProps[key];\n          swiper.el.append(element);\n        }\n        params[key] = element;\n        originalParams[key] = element;\n      }\n    });\n  }\n  return params;\n}","import classesToSelector from '../../shared/classes-to-selector.js';\nimport createElementIfNotDefined from '../../shared/create-element-if-not-defined.js';\nimport { elementIndex, elementOuterSize, elementParents } from '../../shared/utils.js';\nexport default function Pagination({\n  swiper,\n  extendParams,\n  on,\n  emit\n}) {\n  const pfx = 'swiper-pagination';\n  extendParams({\n    pagination: {\n      el: null,\n      bulletElement: 'span',\n      clickable: false,\n      hideOnClick: false,\n      renderBullet: null,\n      renderProgressbar: null,\n      renderFraction: null,\n      renderCustom: null,\n      progressbarOpposite: false,\n      type: 'bullets',\n      // 'bullets' or 'progressbar' or 'fraction' or 'custom'\n      dynamicBullets: false,\n      dynamicMainBullets: 1,\n      formatFractionCurrent: number => number,\n      formatFractionTotal: number => number,\n      bulletClass: `${pfx}-bullet`,\n      bulletActiveClass: `${pfx}-bullet-active`,\n      modifierClass: `${pfx}-`,\n      currentClass: `${pfx}-current`,\n      totalClass: `${pfx}-total`,\n      hiddenClass: `${pfx}-hidden`,\n      progressbarFillClass: `${pfx}-progressbar-fill`,\n      progressbarOppositeClass: `${pfx}-progressbar-opposite`,\n      clickableClass: `${pfx}-clickable`,\n      lockClass: `${pfx}-lock`,\n      horizontalClass: `${pfx}-horizontal`,\n      verticalClass: `${pfx}-vertical`,\n      paginationDisabledClass: `${pfx}-disabled`\n    }\n  });\n  swiper.pagination = {\n    el: null,\n    bullets: []\n  };\n  let bulletSize;\n  let dynamicBulletIndex = 0;\n  const makeElementsArray = el => {\n    if (!Array.isArray(el)) el = [el].filter(e => !!e);\n    return el;\n  };\n  function isPaginationDisabled() {\n    return !swiper.params.pagination.el || !swiper.pagination.el || Array.isArray(swiper.pagination.el) && swiper.pagination.el.length === 0;\n  }\n  function setSideBullets(bulletEl, position) {\n    const {\n      bulletActiveClass\n    } = swiper.params.pagination;\n    if (!bulletEl) return;\n    bulletEl = bulletEl[`${position === 'prev' ? 'previous' : 'next'}ElementSibling`];\n    if (bulletEl) {\n      bulletEl.classList.add(`${bulletActiveClass}-${position}`);\n      bulletEl = bulletEl[`${position === 'prev' ? 'previous' : 'next'}ElementSibling`];\n      if (bulletEl) {\n        bulletEl.classList.add(`${bulletActiveClass}-${position}-${position}`);\n      }\n    }\n  }\n  function onBulletClick(e) {\n    const bulletEl = e.target.closest(classesToSelector(swiper.params.pagination.bulletClass));\n    if (!bulletEl) {\n      return;\n    }\n    e.preventDefault();\n    const index = elementIndex(bulletEl) * swiper.params.slidesPerGroup;\n    if (swiper.params.loop) {\n      if (swiper.realIndex === index) return;\n      const newSlideIndex = swiper.getSlideIndexByData(index);\n      const currentSlideIndex = swiper.getSlideIndexByData(swiper.realIndex);\n      if (newSlideIndex > swiper.slides.length - swiper.loopedSlides) {\n        swiper.loopFix({\n          direction: newSlideIndex > currentSlideIndex ? 'next' : 'prev',\n          activeSlideIndex: newSlideIndex,\n          slideTo: false\n        });\n      }\n      swiper.slideToLoop(index);\n    } else {\n      swiper.slideTo(index);\n    }\n  }\n  function update() {\n    // Render || Update Pagination bullets/items\n    const rtl = swiper.rtl;\n    const params = swiper.params.pagination;\n    if (isPaginationDisabled()) return;\n    let el = swiper.pagination.el;\n    el = makeElementsArray(el);\n    // Current/Total\n    let current;\n    let previousIndex;\n    const slidesLength = swiper.virtual && swiper.params.virtual.enabled ? swiper.virtual.slides.length : swiper.slides.length;\n    const total = swiper.params.loop ? Math.ceil(slidesLength / swiper.params.slidesPerGroup) : swiper.snapGrid.length;\n    if (swiper.params.loop) {\n      previousIndex = swiper.previousRealIndex || 0;\n      current = swiper.params.slidesPerGroup > 1 ? Math.floor(swiper.realIndex / swiper.params.slidesPerGroup) : swiper.realIndex;\n    } else if (typeof swiper.snapIndex !== 'undefined') {\n      current = swiper.snapIndex;\n      previousIndex = swiper.previousSnapIndex;\n    } else {\n      previousIndex = swiper.previousIndex || 0;\n      current = swiper.activeIndex || 0;\n    }\n    // Types\n    if (params.type === 'bullets' && swiper.pagination.bullets && swiper.pagination.bullets.length > 0) {\n      const bullets = swiper.pagination.bullets;\n      let firstIndex;\n      let lastIndex;\n      let midIndex;\n      if (params.dynamicBullets) {\n        bulletSize = elementOuterSize(bullets[0], swiper.isHorizontal() ? 'width' : 'height', true);\n        el.forEach(subEl => {\n          subEl.style[swiper.isHorizontal() ? 'width' : 'height'] = `${bulletSize * (params.dynamicMainBullets + 4)}px`;\n        });\n        if (params.dynamicMainBullets > 1 && previousIndex !== undefined) {\n          dynamicBulletIndex += current - (previousIndex || 0);\n          if (dynamicBulletIndex > params.dynamicMainBullets - 1) {\n            dynamicBulletIndex = params.dynamicMainBullets - 1;\n          } else if (dynamicBulletIndex < 0) {\n            dynamicBulletIndex = 0;\n          }\n        }\n        firstIndex = Math.max(current - dynamicBulletIndex, 0);\n        lastIndex = firstIndex + (Math.min(bullets.length, params.dynamicMainBullets) - 1);\n        midIndex = (lastIndex + firstIndex) / 2;\n      }\n      bullets.forEach(bulletEl => {\n        const classesToRemove = [...['', '-next', '-next-next', '-prev', '-prev-prev', '-main'].map(suffix => `${params.bulletActiveClass}${suffix}`)].map(s => typeof s === 'string' && s.includes(' ') ? s.split(' ') : s).flat();\n        bulletEl.classList.remove(...classesToRemove);\n      });\n      if (el.length > 1) {\n        bullets.forEach(bullet => {\n          const bulletIndex = elementIndex(bullet);\n          if (bulletIndex === current) {\n            bullet.classList.add(...params.bulletActiveClass.split(' '));\n          }\n          if (params.dynamicBullets) {\n            if (bulletIndex >= firstIndex && bulletIndex <= lastIndex) {\n              bullet.classList.add(...`${params.bulletActiveClass}-main`.split(' '));\n            }\n            if (bulletIndex === firstIndex) {\n              setSideBullets(bullet, 'prev');\n            }\n            if (bulletIndex === lastIndex) {\n              setSideBullets(bullet, 'next');\n            }\n          }\n        });\n      } else {\n        const bullet = bullets[current];\n        if (bullet) {\n          bullet.classList.add(...params.bulletActiveClass.split(' '));\n        }\n        if (params.dynamicBullets) {\n          const firstDisplayedBullet = bullets[firstIndex];\n          const lastDisplayedBullet = bullets[lastIndex];\n          for (let i = firstIndex; i <= lastIndex; i += 1) {\n            if (bullets[i]) {\n              bullets[i].classList.add(...`${params.bulletActiveClass}-main`.split(' '));\n            }\n          }\n          setSideBullets(firstDisplayedBullet, 'prev');\n          setSideBullets(lastDisplayedBullet, 'next');\n        }\n      }\n      if (params.dynamicBullets) {\n        const dynamicBulletsLength = Math.min(bullets.length, params.dynamicMainBullets + 4);\n        const bulletsOffset = (bulletSize * dynamicBulletsLength - bulletSize) / 2 - midIndex * bulletSize;\n        const offsetProp = rtl ? 'right' : 'left';\n        bullets.forEach(bullet => {\n          bullet.style[swiper.isHorizontal() ? offsetProp : 'top'] = `${bulletsOffset}px`;\n        });\n      }\n    }\n    el.forEach((subEl, subElIndex) => {\n      if (params.type === 'fraction') {\n        subEl.querySelectorAll(classesToSelector(params.currentClass)).forEach(fractionEl => {\n          fractionEl.textContent = params.formatFractionCurrent(current + 1);\n        });\n        subEl.querySelectorAll(classesToSelector(params.totalClass)).forEach(totalEl => {\n          totalEl.textContent = params.formatFractionTotal(total);\n        });\n      }\n      if (params.type === 'progressbar') {\n        let progressbarDirection;\n        if (params.progressbarOpposite) {\n          progressbarDirection = swiper.isHorizontal() ? 'vertical' : 'horizontal';\n        } else {\n          progressbarDirection = swiper.isHorizontal() ? 'horizontal' : 'vertical';\n        }\n        const scale = (current + 1) / total;\n        let scaleX = 1;\n        let scaleY = 1;\n        if (progressbarDirection === 'horizontal') {\n          scaleX = scale;\n        } else {\n          scaleY = scale;\n        }\n        subEl.querySelectorAll(classesToSelector(params.progressbarFillClass)).forEach(progressEl => {\n          progressEl.style.transform = `translate3d(0,0,0) scaleX(${scaleX}) scaleY(${scaleY})`;\n          progressEl.style.transitionDuration = `${swiper.params.speed}ms`;\n        });\n      }\n      if (params.type === 'custom' && params.renderCustom) {\n        subEl.innerHTML = params.renderCustom(swiper, current + 1, total);\n        if (subElIndex === 0) emit('paginationRender', subEl);\n      } else {\n        if (subElIndex === 0) emit('paginationRender', subEl);\n        emit('paginationUpdate', subEl);\n      }\n      if (swiper.params.watchOverflow && swiper.enabled) {\n        subEl.classList[swiper.isLocked ? 'add' : 'remove'](params.lockClass);\n      }\n    });\n  }\n  function render() {\n    // Render Container\n    const params = swiper.params.pagination;\n    if (isPaginationDisabled()) return;\n    const slidesLength = swiper.virtual && swiper.params.virtual.enabled ? swiper.virtual.slides.length : swiper.slides.length;\n    let el = swiper.pagination.el;\n    el = makeElementsArray(el);\n    let paginationHTML = '';\n    if (params.type === 'bullets') {\n      let numberOfBullets = swiper.params.loop ? Math.ceil(slidesLength / swiper.params.slidesPerGroup) : swiper.snapGrid.length;\n      if (swiper.params.freeMode && swiper.params.freeMode.enabled && numberOfBullets > slidesLength) {\n        numberOfBullets = slidesLength;\n      }\n      for (let i = 0; i < numberOfBullets; i += 1) {\n        if (params.renderBullet) {\n          paginationHTML += params.renderBullet.call(swiper, i, params.bulletClass);\n        } else {\n          paginationHTML += `<${params.bulletElement} class=\"${params.bulletClass}\"></${params.bulletElement}>`;\n        }\n      }\n    }\n    if (params.type === 'fraction') {\n      if (params.renderFraction) {\n        paginationHTML = params.renderFraction.call(swiper, params.currentClass, params.totalClass);\n      } else {\n        paginationHTML = `<span class=\"${params.currentClass}\"></span>` + ' / ' + `<span class=\"${params.totalClass}\"></span>`;\n      }\n    }\n    if (params.type === 'progressbar') {\n      if (params.renderProgressbar) {\n        paginationHTML = params.renderProgressbar.call(swiper, params.progressbarFillClass);\n      } else {\n        paginationHTML = `<span class=\"${params.progressbarFillClass}\"></span>`;\n      }\n    }\n    swiper.pagination.bullets = [];\n    el.forEach(subEl => {\n      if (params.type !== 'custom') {\n        subEl.innerHTML = paginationHTML || '';\n      }\n      if (params.type === 'bullets') {\n        swiper.pagination.bullets.push(...subEl.querySelectorAll(classesToSelector(params.bulletClass)));\n      }\n    });\n    if (params.type !== 'custom') {\n      emit('paginationRender', el[0]);\n    }\n  }\n  function init() {\n    swiper.params.pagination = createElementIfNotDefined(swiper, swiper.originalParams.pagination, swiper.params.pagination, {\n      el: 'swiper-pagination'\n    });\n    const params = swiper.params.pagination;\n    if (!params.el) return;\n    let el;\n    if (typeof params.el === 'string' && swiper.isElement) {\n      el = swiper.el.shadowRoot.querySelector(params.el);\n    }\n    if (!el && typeof params.el === 'string') {\n      el = [...document.querySelectorAll(params.el)];\n    }\n    if (!el) {\n      el = params.el;\n    }\n    if (!el || el.length === 0) return;\n    if (swiper.params.uniqueNavElements && typeof params.el === 'string' && Array.isArray(el) && el.length > 1) {\n      el = [...swiper.el.querySelectorAll(params.el)];\n      // check if it belongs to another nested Swiper\n      if (el.length > 1) {\n        el = el.filter(subEl => {\n          if (elementParents(subEl, '.swiper')[0] !== swiper.el) return false;\n          return true;\n        })[0];\n      }\n    }\n    if (Array.isArray(el) && el.length === 1) el = el[0];\n    Object.assign(swiper.pagination, {\n      el\n    });\n    el = makeElementsArray(el);\n    el.forEach(subEl => {\n      if (params.type === 'bullets' && params.clickable) {\n        subEl.classList.add(params.clickableClass);\n      }\n      subEl.classList.add(params.modifierClass + params.type);\n      subEl.classList.add(swiper.isHorizontal() ? params.horizontalClass : params.verticalClass);\n      if (params.type === 'bullets' && params.dynamicBullets) {\n        subEl.classList.add(`${params.modifierClass}${params.type}-dynamic`);\n        dynamicBulletIndex = 0;\n        if (params.dynamicMainBullets < 1) {\n          params.dynamicMainBullets = 1;\n        }\n      }\n      if (params.type === 'progressbar' && params.progressbarOpposite) {\n        subEl.classList.add(params.progressbarOppositeClass);\n      }\n      if (params.clickable) {\n        subEl.addEventListener('click', onBulletClick);\n      }\n      if (!swiper.enabled) {\n        subEl.classList.add(params.lockClass);\n      }\n    });\n  }\n  function destroy() {\n    const params = swiper.params.pagination;\n    if (isPaginationDisabled()) return;\n    let el = swiper.pagination.el;\n    if (el) {\n      el = makeElementsArray(el);\n      el.forEach(subEl => {\n        subEl.classList.remove(params.hiddenClass);\n        subEl.classList.remove(params.modifierClass + params.type);\n        subEl.classList.remove(swiper.isHorizontal() ? params.horizontalClass : params.verticalClass);\n        if (params.clickable) {\n          subEl.removeEventListener('click', onBulletClick);\n        }\n      });\n    }\n    if (swiper.pagination.bullets) swiper.pagination.bullets.forEach(subEl => subEl.classList.remove(...params.bulletActiveClass.split(' ')));\n  }\n  on('changeDirection', () => {\n    if (!swiper.pagination || !swiper.pagination.el) return;\n    const params = swiper.params.pagination;\n    let {\n      el\n    } = swiper.pagination;\n    el = makeElementsArray(el);\n    el.forEach(subEl => {\n      subEl.classList.remove(params.horizontalClass, params.verticalClass);\n      subEl.classList.add(swiper.isHorizontal() ? params.horizontalClass : params.verticalClass);\n    });\n  });\n  on('init', () => {\n    if (swiper.params.pagination.enabled === false) {\n      // eslint-disable-next-line\n      disable();\n    } else {\n      init();\n      render();\n      update();\n    }\n  });\n  on('activeIndexChange', () => {\n    if (typeof swiper.snapIndex === 'undefined') {\n      update();\n    }\n  });\n  on('snapIndexChange', () => {\n    update();\n  });\n  on('snapGridLengthChange', () => {\n    render();\n    update();\n  });\n  on('destroy', () => {\n    destroy();\n  });\n  on('enable disable', () => {\n    let {\n      el\n    } = swiper.pagination;\n    if (el) {\n      el = makeElementsArray(el);\n      el.forEach(subEl => subEl.classList[swiper.enabled ? 'remove' : 'add'](swiper.params.pagination.lockClass));\n    }\n  });\n  on('lock unlock', () => {\n    update();\n  });\n  on('click', (_s, e) => {\n    const targetEl = e.target;\n    let {\n      el\n    } = swiper.pagination;\n    if (!Array.isArray(el)) el = [el].filter(element => !!element);\n    if (swiper.params.pagination.el && swiper.params.pagination.hideOnClick && el && el.length > 0 && !targetEl.classList.contains(swiper.params.pagination.bulletClass)) {\n      if (swiper.navigation && (swiper.navigation.nextEl && targetEl === swiper.navigation.nextEl || swiper.navigation.prevEl && targetEl === swiper.navigation.prevEl)) return;\n      const isHidden = el[0].classList.contains(swiper.params.pagination.hiddenClass);\n      if (isHidden === true) {\n        emit('paginationShow');\n      } else {\n        emit('paginationHide');\n      }\n      el.forEach(subEl => subEl.classList.toggle(swiper.params.pagination.hiddenClass));\n    }\n  });\n  const enable = () => {\n    swiper.el.classList.remove(swiper.params.pagination.paginationDisabledClass);\n    let {\n      el\n    } = swiper.pagination;\n    if (el) {\n      el = makeElementsArray(el);\n      el.forEach(subEl => subEl.classList.remove(swiper.params.pagination.paginationDisabledClass));\n    }\n    init();\n    render();\n    update();\n  };\n  const disable = () => {\n    swiper.el.classList.add(swiper.params.pagination.paginationDisabledClass);\n    let {\n      el\n    } = swiper.pagination;\n    if (el) {\n      el = makeElementsArray(el);\n      el.forEach(subEl => subEl.classList.add(swiper.params.pagination.paginationDisabledClass));\n    }\n    destroy();\n  };\n  Object.assign(swiper.pagination, {\n    enable,\n    disable,\n    render,\n    update,\n    init,\n    destroy\n  });\n}","export default function classesToSelector(classes = '') {\n  return `.${classes.trim().replace(/([\\.:!+\\/])/g, '\\\\$1') // eslint-disable-line\n  .replace(/ /g, '.')}`;\n}","import { getDocument } from 'ssr-window';\nimport { createElement, elementOffset, nextTick } from '../../shared/utils.js';\nimport createElementIfNotDefined from '../../shared/create-element-if-not-defined.js';\nexport default function Scrollbar({\n  swiper,\n  extendParams,\n  on,\n  emit\n}) {\n  const document = getDocument();\n  let isTouched = false;\n  let timeout = null;\n  let dragTimeout = null;\n  let dragStartPos;\n  let dragSize;\n  let trackSize;\n  let divider;\n  extendParams({\n    scrollbar: {\n      el: null,\n      dragSize: 'auto',\n      hide: false,\n      draggable: false,\n      snapOnRelease: true,\n      lockClass: 'swiper-scrollbar-lock',\n      dragClass: 'swiper-scrollbar-drag',\n      scrollbarDisabledClass: 'swiper-scrollbar-disabled',\n      horizontalClass: `swiper-scrollbar-horizontal`,\n      verticalClass: `swiper-scrollbar-vertical`\n    }\n  });\n  swiper.scrollbar = {\n    el: null,\n    dragEl: null\n  };\n  function setTranslate() {\n    if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;\n    const {\n      scrollbar,\n      rtlTranslate: rtl\n    } = swiper;\n    const {\n      dragEl,\n      el\n    } = scrollbar;\n    const params = swiper.params.scrollbar;\n    const progress = swiper.params.loop ? swiper.progressLoop : swiper.progress;\n    let newSize = dragSize;\n    let newPos = (trackSize - dragSize) * progress;\n    if (rtl) {\n      newPos = -newPos;\n      if (newPos > 0) {\n        newSize = dragSize - newPos;\n        newPos = 0;\n      } else if (-newPos + dragSize > trackSize) {\n        newSize = trackSize + newPos;\n      }\n    } else if (newPos < 0) {\n      newSize = dragSize + newPos;\n      newPos = 0;\n    } else if (newPos + dragSize > trackSize) {\n      newSize = trackSize - newPos;\n    }\n    if (swiper.isHorizontal()) {\n      dragEl.style.transform = `translate3d(${newPos}px, 0, 0)`;\n      dragEl.style.width = `${newSize}px`;\n    } else {\n      dragEl.style.transform = `translate3d(0px, ${newPos}px, 0)`;\n      dragEl.style.height = `${newSize}px`;\n    }\n    if (params.hide) {\n      clearTimeout(timeout);\n      el.style.opacity = 1;\n      timeout = setTimeout(() => {\n        el.style.opacity = 0;\n        el.style.transitionDuration = '400ms';\n      }, 1000);\n    }\n  }\n  function setTransition(duration) {\n    if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;\n    swiper.scrollbar.dragEl.style.transitionDuration = `${duration}ms`;\n  }\n  function updateSize() {\n    if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;\n    const {\n      scrollbar\n    } = swiper;\n    const {\n      dragEl,\n      el\n    } = scrollbar;\n    dragEl.style.width = '';\n    dragEl.style.height = '';\n    trackSize = swiper.isHorizontal() ? el.offsetWidth : el.offsetHeight;\n    divider = swiper.size / (swiper.virtualSize + swiper.params.slidesOffsetBefore - (swiper.params.centeredSlides ? swiper.snapGrid[0] : 0));\n    if (swiper.params.scrollbar.dragSize === 'auto') {\n      dragSize = trackSize * divider;\n    } else {\n      dragSize = parseInt(swiper.params.scrollbar.dragSize, 10);\n    }\n    if (swiper.isHorizontal()) {\n      dragEl.style.width = `${dragSize}px`;\n    } else {\n      dragEl.style.height = `${dragSize}px`;\n    }\n    if (divider >= 1) {\n      el.style.display = 'none';\n    } else {\n      el.style.display = '';\n    }\n    if (swiper.params.scrollbar.hide) {\n      el.style.opacity = 0;\n    }\n    if (swiper.params.watchOverflow && swiper.enabled) {\n      scrollbar.el.classList[swiper.isLocked ? 'add' : 'remove'](swiper.params.scrollbar.lockClass);\n    }\n  }\n  function getPointerPosition(e) {\n    return swiper.isHorizontal() ? e.clientX : e.clientY;\n  }\n  function setDragPosition(e) {\n    const {\n      scrollbar,\n      rtlTranslate: rtl\n    } = swiper;\n    const {\n      el\n    } = scrollbar;\n    let positionRatio;\n    positionRatio = (getPointerPosition(e) - elementOffset(el)[swiper.isHorizontal() ? 'left' : 'top'] - (dragStartPos !== null ? dragStartPos : dragSize / 2)) / (trackSize - dragSize);\n    positionRatio = Math.max(Math.min(positionRatio, 1), 0);\n    if (rtl) {\n      positionRatio = 1 - positionRatio;\n    }\n    const position = swiper.minTranslate() + (swiper.maxTranslate() - swiper.minTranslate()) * positionRatio;\n    swiper.updateProgress(position);\n    swiper.setTranslate(position);\n    swiper.updateActiveIndex();\n    swiper.updateSlidesClasses();\n  }\n  function onDragStart(e) {\n    const params = swiper.params.scrollbar;\n    const {\n      scrollbar,\n      wrapperEl\n    } = swiper;\n    const {\n      el,\n      dragEl\n    } = scrollbar;\n    isTouched = true;\n    dragStartPos = e.target === dragEl ? getPointerPosition(e) - e.target.getBoundingClientRect()[swiper.isHorizontal() ? 'left' : 'top'] : null;\n    e.preventDefault();\n    e.stopPropagation();\n    wrapperEl.style.transitionDuration = '100ms';\n    dragEl.style.transitionDuration = '100ms';\n    setDragPosition(e);\n    clearTimeout(dragTimeout);\n    el.style.transitionDuration = '0ms';\n    if (params.hide) {\n      el.style.opacity = 1;\n    }\n    if (swiper.params.cssMode) {\n      swiper.wrapperEl.style['scroll-snap-type'] = 'none';\n    }\n    emit('scrollbarDragStart', e);\n  }\n  function onDragMove(e) {\n    const {\n      scrollbar,\n      wrapperEl\n    } = swiper;\n    const {\n      el,\n      dragEl\n    } = scrollbar;\n    if (!isTouched) return;\n    if (e.preventDefault) e.preventDefault();else e.returnValue = false;\n    setDragPosition(e);\n    wrapperEl.style.transitionDuration = '0ms';\n    el.style.transitionDuration = '0ms';\n    dragEl.style.transitionDuration = '0ms';\n    emit('scrollbarDragMove', e);\n  }\n  function onDragEnd(e) {\n    const params = swiper.params.scrollbar;\n    const {\n      scrollbar,\n      wrapperEl\n    } = swiper;\n    const {\n      el\n    } = scrollbar;\n    if (!isTouched) return;\n    isTouched = false;\n    if (swiper.params.cssMode) {\n      swiper.wrapperEl.style['scroll-snap-type'] = '';\n      wrapperEl.style.transitionDuration = '';\n    }\n    if (params.hide) {\n      clearTimeout(dragTimeout);\n      dragTimeout = nextTick(() => {\n        el.style.opacity = 0;\n        el.style.transitionDuration = '400ms';\n      }, 1000);\n    }\n    emit('scrollbarDragEnd', e);\n    if (params.snapOnRelease) {\n      swiper.slideToClosest();\n    }\n  }\n  function events(method) {\n    const {\n      scrollbar,\n      params\n    } = swiper;\n    const el = scrollbar.el;\n    if (!el) return;\n    const target = el;\n    const activeListener = params.passiveListeners ? {\n      passive: false,\n      capture: false\n    } : false;\n    const passiveListener = params.passiveListeners ? {\n      passive: true,\n      capture: false\n    } : false;\n    if (!target) return;\n    const eventMethod = method === 'on' ? 'addEventListener' : 'removeEventListener';\n    target[eventMethod]('pointerdown', onDragStart, activeListener);\n    document[eventMethod]('pointermove', onDragMove, activeListener);\n    document[eventMethod]('pointerup', onDragEnd, passiveListener);\n  }\n  function enableDraggable() {\n    if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;\n    events('on');\n  }\n  function disableDraggable() {\n    if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;\n    events('off');\n  }\n  function init() {\n    const {\n      scrollbar,\n      el: swiperEl\n    } = swiper;\n    swiper.params.scrollbar = createElementIfNotDefined(swiper, swiper.originalParams.scrollbar, swiper.params.scrollbar, {\n      el: 'swiper-scrollbar'\n    });\n    const params = swiper.params.scrollbar;\n    if (!params.el) return;\n    let el;\n    if (typeof params.el === 'string' && swiper.isElement) {\n      el = swiper.el.shadowRoot.querySelector(params.el);\n    }\n    if (!el && typeof params.el === 'string') {\n      el = document.querySelectorAll(params.el);\n    } else if (!el) {\n      el = params.el;\n    }\n    if (swiper.params.uniqueNavElements && typeof params.el === 'string' && el.length > 1 && swiperEl.querySelectorAll(params.el).length === 1) {\n      el = swiperEl.querySelector(params.el);\n    }\n    if (el.length > 0) el = el[0];\n    el.classList.add(swiper.isHorizontal() ? params.horizontalClass : params.verticalClass);\n    let dragEl;\n    if (el) {\n      dragEl = el.querySelector(`.${swiper.params.scrollbar.dragClass}`);\n      if (!dragEl) {\n        dragEl = createElement('div', swiper.params.scrollbar.dragClass);\n        el.append(dragEl);\n      }\n    }\n    Object.assign(scrollbar, {\n      el,\n      dragEl\n    });\n    if (params.draggable) {\n      enableDraggable();\n    }\n    if (el) {\n      el.classList[swiper.enabled ? 'remove' : 'add'](swiper.params.scrollbar.lockClass);\n    }\n  }\n  function destroy() {\n    const params = swiper.params.scrollbar;\n    const el = swiper.scrollbar.el;\n    if (el) {\n      el.classList.remove(swiper.isHorizontal() ? params.horizontalClass : params.verticalClass);\n    }\n    disableDraggable();\n  }\n  on('init', () => {\n    if (swiper.params.scrollbar.enabled === false) {\n      // eslint-disable-next-line\n      disable();\n    } else {\n      init();\n      updateSize();\n      setTranslate();\n    }\n  });\n  on('update resize observerUpdate lock unlock', () => {\n    updateSize();\n  });\n  on('setTranslate', () => {\n    setTranslate();\n  });\n  on('setTransition', (_s, duration) => {\n    setTransition(duration);\n  });\n  on('enable disable', () => {\n    const {\n      el\n    } = swiper.scrollbar;\n    if (el) {\n      el.classList[swiper.enabled ? 'remove' : 'add'](swiper.params.scrollbar.lockClass);\n    }\n  });\n  on('destroy', () => {\n    destroy();\n  });\n  const enable = () => {\n    swiper.el.classList.remove(swiper.params.scrollbar.scrollbarDisabledClass);\n    if (swiper.scrollbar.el) {\n      swiper.scrollbar.el.classList.remove(swiper.params.scrollbar.scrollbarDisabledClass);\n    }\n    init();\n    updateSize();\n    setTranslate();\n  };\n  const disable = () => {\n    swiper.el.classList.add(swiper.params.scrollbar.scrollbarDisabledClass);\n    if (swiper.scrollbar.el) {\n      swiper.scrollbar.el.classList.add(swiper.params.scrollbar.scrollbarDisabledClass);\n    }\n    destroy();\n  };\n  Object.assign(swiper.scrollbar, {\n    enable,\n    disable,\n    updateSize,\n    setTranslate,\n    init,\n    destroy\n  });\n}","import { elementChildren } from '../../shared/utils.js';\nexport default function Parallax({\n  swiper,\n  extendParams,\n  on\n}) {\n  extendParams({\n    parallax: {\n      enabled: false\n    }\n  });\n  const setTransform = (el, progress) => {\n    const {\n      rtl\n    } = swiper;\n    const rtlFactor = rtl ? -1 : 1;\n    const p = el.getAttribute('data-swiper-parallax') || '0';\n    let x = el.getAttribute('data-swiper-parallax-x');\n    let y = el.getAttribute('data-swiper-parallax-y');\n    const scale = el.getAttribute('data-swiper-parallax-scale');\n    const opacity = el.getAttribute('data-swiper-parallax-opacity');\n    const rotate = el.getAttribute('data-swiper-parallax-rotate');\n    if (x || y) {\n      x = x || '0';\n      y = y || '0';\n    } else if (swiper.isHorizontal()) {\n      x = p;\n      y = '0';\n    } else {\n      y = p;\n      x = '0';\n    }\n    if (x.indexOf('%') >= 0) {\n      x = `${parseInt(x, 10) * progress * rtlFactor}%`;\n    } else {\n      x = `${x * progress * rtlFactor}px`;\n    }\n    if (y.indexOf('%') >= 0) {\n      y = `${parseInt(y, 10) * progress}%`;\n    } else {\n      y = `${y * progress}px`;\n    }\n    if (typeof opacity !== 'undefined' && opacity !== null) {\n      const currentOpacity = opacity - (opacity - 1) * (1 - Math.abs(progress));\n      el.style.opacity = currentOpacity;\n    }\n    let transform = `translate3d(${x}, ${y}, 0px)`;\n    if (typeof scale !== 'undefined' && scale !== null) {\n      const currentScale = scale - (scale - 1) * (1 - Math.abs(progress));\n      transform += ` scale(${currentScale})`;\n    }\n    if (rotate && typeof rotate !== 'undefined' && rotate !== null) {\n      const currentRotate = rotate * progress * -1;\n      transform += ` rotate(${currentRotate}deg)`;\n    }\n    el.style.transform = transform;\n  };\n  const setTranslate = () => {\n    const {\n      el,\n      slides,\n      progress,\n      snapGrid\n    } = swiper;\n    elementChildren(el, '[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y], [data-swiper-parallax-opacity], [data-swiper-parallax-scale]').forEach(subEl => {\n      setTransform(subEl, progress);\n    });\n    slides.forEach((slideEl, slideIndex) => {\n      let slideProgress = slideEl.progress;\n      if (swiper.params.slidesPerGroup > 1 && swiper.params.slidesPerView !== 'auto') {\n        slideProgress += Math.ceil(slideIndex / 2) - progress * (snapGrid.length - 1);\n      }\n      slideProgress = Math.min(Math.max(slideProgress, -1), 1);\n      slideEl.querySelectorAll('[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y], [data-swiper-parallax-opacity], [data-swiper-parallax-scale], [data-swiper-parallax-rotate]').forEach(subEl => {\n        setTransform(subEl, slideProgress);\n      });\n    });\n  };\n  const setTransition = (duration = swiper.params.speed) => {\n    const {\n      el\n    } = swiper;\n    el.querySelectorAll('[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y], [data-swiper-parallax-opacity], [data-swiper-parallax-scale]').forEach(parallaxEl => {\n      let parallaxDuration = parseInt(parallaxEl.getAttribute('data-swiper-parallax-duration'), 10) || duration;\n      if (duration === 0) parallaxDuration = 0;\n      parallaxEl.style.transitionDuration = `${parallaxDuration}ms`;\n    });\n  };\n  on('beforeInit', () => {\n    if (!swiper.params.parallax.enabled) return;\n    swiper.params.watchSlidesProgress = true;\n    swiper.originalParams.watchSlidesProgress = true;\n  });\n  on('init', () => {\n    if (!swiper.params.parallax.enabled) return;\n    setTranslate();\n  });\n  on('setTranslate', () => {\n    if (!swiper.params.parallax.enabled) return;\n    setTranslate();\n  });\n  on('setTransition', (_swiper, duration) => {\n    if (!swiper.params.parallax.enabled) return;\n    setTransition(duration);\n  });\n}","import { getWindow } from 'ssr-window';\nimport { elementChildren, elementOffset, elementParents, getTranslate } from '../../shared/utils.js';\nexport default function Zoom({\n  swiper,\n  extendParams,\n  on,\n  emit\n}) {\n  const window = getWindow();\n  extendParams({\n    zoom: {\n      enabled: false,\n      maxRatio: 3,\n      minRatio: 1,\n      toggle: true,\n      containerClass: 'swiper-zoom-container',\n      zoomedSlideClass: 'swiper-slide-zoomed'\n    }\n  });\n  swiper.zoom = {\n    enabled: false\n  };\n  let currentScale = 1;\n  let isScaling = false;\n  let fakeGestureTouched;\n  let fakeGestureMoved;\n  const evCache = [];\n  const gesture = {\n    originX: 0,\n    originY: 0,\n    slideEl: undefined,\n    slideWidth: undefined,\n    slideHeight: undefined,\n    imageEl: undefined,\n    imageWrapEl: undefined,\n    maxRatio: 3\n  };\n  const image = {\n    isTouched: undefined,\n    isMoved: undefined,\n    currentX: undefined,\n    currentY: undefined,\n    minX: undefined,\n    minY: undefined,\n    maxX: undefined,\n    maxY: undefined,\n    width: undefined,\n    height: undefined,\n    startX: undefined,\n    startY: undefined,\n    touchesStart: {},\n    touchesCurrent: {}\n  };\n  const velocity = {\n    x: undefined,\n    y: undefined,\n    prevPositionX: undefined,\n    prevPositionY: undefined,\n    prevTime: undefined\n  };\n  let scale = 1;\n  Object.defineProperty(swiper.zoom, 'scale', {\n    get() {\n      return scale;\n    },\n    set(value) {\n      if (scale !== value) {\n        const imageEl = gesture.imageEl;\n        const slideEl = gesture.slideEl;\n        emit('zoomChange', value, imageEl, slideEl);\n      }\n      scale = value;\n    }\n  });\n  function getDistanceBetweenTouches() {\n    if (evCache.length < 2) return 1;\n    const x1 = evCache[0].pageX;\n    const y1 = evCache[0].pageY;\n    const x2 = evCache[1].pageX;\n    const y2 = evCache[1].pageY;\n    const distance = Math.sqrt((x2 - x1) ** 2 + (y2 - y1) ** 2);\n    return distance;\n  }\n  function getScaleOrigin() {\n    if (evCache.length < 2) return {\n      x: null,\n      y: null\n    };\n    const box = gesture.imageEl.getBoundingClientRect();\n    return [(evCache[0].pageX + (evCache[1].pageX - evCache[0].pageX) / 2 - box.x) / currentScale, (evCache[0].pageY + (evCache[1].pageY - evCache[0].pageY) / 2 - box.y) / currentScale];\n  }\n  function getSlideSelector() {\n    return swiper.isElement ? `swiper-slide` : `.${swiper.params.slideClass}`;\n  }\n  function eventWithinSlide(e) {\n    const slideSelector = getSlideSelector();\n    if (e.target.matches(slideSelector)) return true;\n    if (swiper.slides.filter(slideEl => slideEl.contains(e.target)).length > 0) return true;\n    return false;\n  }\n  function eventWithinZoomContainer(e) {\n    const selector = `.${swiper.params.zoom.containerClass}`;\n    if (e.target.matches(selector)) return true;\n    if ([...swiper.el.querySelectorAll(selector)].filter(containerEl => containerEl.contains(e.target)).length > 0) return true;\n    return false;\n  }\n\n  // Events\n  function onGestureStart(e) {\n    if (e.pointerType === 'mouse') {\n      evCache.splice(0, evCache.length);\n    }\n    if (!eventWithinSlide(e)) return;\n    const params = swiper.params.zoom;\n    fakeGestureTouched = false;\n    fakeGestureMoved = false;\n    evCache.push(e);\n    if (evCache.length < 2) {\n      return;\n    }\n    fakeGestureTouched = true;\n    gesture.scaleStart = getDistanceBetweenTouches();\n    if (!gesture.slideEl) {\n      gesture.slideEl = e.target.closest(`.${swiper.params.slideClass}, swiper-slide`);\n      if (!gesture.slideEl) gesture.slideEl = swiper.slides[swiper.activeIndex];\n      let imageEl = gesture.slideEl.querySelector(`.${params.containerClass}`);\n      if (imageEl) {\n        imageEl = imageEl.querySelectorAll('picture, img, svg, canvas, .swiper-zoom-target')[0];\n      }\n      gesture.imageEl = imageEl;\n      if (imageEl) {\n        gesture.imageWrapEl = elementParents(gesture.imageEl, `.${params.containerClass}`)[0];\n      } else {\n        gesture.imageWrapEl = undefined;\n      }\n      if (!gesture.imageWrapEl) {\n        gesture.imageEl = undefined;\n        return;\n      }\n      gesture.maxRatio = gesture.imageWrapEl.getAttribute('data-swiper-zoom') || params.maxRatio;\n    }\n    if (gesture.imageEl) {\n      const [originX, originY] = getScaleOrigin();\n      gesture.originX = originX;\n      gesture.originY = originY;\n      gesture.imageEl.style.transitionDuration = '0ms';\n    }\n    isScaling = true;\n  }\n  function onGestureChange(e) {\n    if (!eventWithinSlide(e)) return;\n    const params = swiper.params.zoom;\n    const zoom = swiper.zoom;\n    const pointerIndex = evCache.findIndex(cachedEv => cachedEv.pointerId === e.pointerId);\n    if (pointerIndex >= 0) evCache[pointerIndex] = e;\n    if (evCache.length < 2) {\n      return;\n    }\n    fakeGestureMoved = true;\n    gesture.scaleMove = getDistanceBetweenTouches();\n    if (!gesture.imageEl) {\n      return;\n    }\n    zoom.scale = gesture.scaleMove / gesture.scaleStart * currentScale;\n    if (zoom.scale > gesture.maxRatio) {\n      zoom.scale = gesture.maxRatio - 1 + (zoom.scale - gesture.maxRatio + 1) ** 0.5;\n    }\n    if (zoom.scale < params.minRatio) {\n      zoom.scale = params.minRatio + 1 - (params.minRatio - zoom.scale + 1) ** 0.5;\n    }\n    gesture.imageEl.style.transform = `translate3d(0,0,0) scale(${zoom.scale})`;\n  }\n  function onGestureEnd(e) {\n    if (!eventWithinSlide(e)) return;\n    if (e.pointerType === 'mouse' && e.type === 'pointerout') return;\n    const params = swiper.params.zoom;\n    const zoom = swiper.zoom;\n    const pointerIndex = evCache.findIndex(cachedEv => cachedEv.pointerId === e.pointerId);\n    if (pointerIndex >= 0) evCache.splice(pointerIndex, 1);\n    if (!fakeGestureTouched || !fakeGestureMoved) {\n      return;\n    }\n    fakeGestureTouched = false;\n    fakeGestureMoved = false;\n    if (!gesture.imageEl) return;\n    zoom.scale = Math.max(Math.min(zoom.scale, gesture.maxRatio), params.minRatio);\n    gesture.imageEl.style.transitionDuration = `${swiper.params.speed}ms`;\n    gesture.imageEl.style.transform = `translate3d(0,0,0) scale(${zoom.scale})`;\n    currentScale = zoom.scale;\n    isScaling = false;\n    if (zoom.scale > 1 && gesture.slideEl) {\n      gesture.slideEl.classList.add(`${params.zoomedSlideClass}`);\n    } else if (zoom.scale <= 1 && gesture.slideEl) {\n      gesture.slideEl.classList.remove(`${params.zoomedSlideClass}`);\n    }\n    if (zoom.scale === 1) {\n      gesture.originX = 0;\n      gesture.originY = 0;\n      gesture.slideEl = undefined;\n    }\n  }\n  function onTouchStart(e) {\n    const device = swiper.device;\n    if (!gesture.imageEl) return;\n    if (image.isTouched) return;\n    if (device.android && e.cancelable) e.preventDefault();\n    image.isTouched = true;\n    const event = evCache.length > 0 ? evCache[0] : e;\n    image.touchesStart.x = event.pageX;\n    image.touchesStart.y = event.pageY;\n  }\n  function onTouchMove(e) {\n    if (!eventWithinSlide(e) || !eventWithinZoomContainer(e)) return;\n    const zoom = swiper.zoom;\n    if (!gesture.imageEl) return;\n    if (!image.isTouched || !gesture.slideEl) return;\n    if (!image.isMoved) {\n      image.width = gesture.imageEl.offsetWidth;\n      image.height = gesture.imageEl.offsetHeight;\n      image.startX = getTranslate(gesture.imageWrapEl, 'x') || 0;\n      image.startY = getTranslate(gesture.imageWrapEl, 'y') || 0;\n      gesture.slideWidth = gesture.slideEl.offsetWidth;\n      gesture.slideHeight = gesture.slideEl.offsetHeight;\n      gesture.imageWrapEl.style.transitionDuration = '0ms';\n    }\n    // Define if we need image drag\n    const scaledWidth = image.width * zoom.scale;\n    const scaledHeight = image.height * zoom.scale;\n    if (scaledWidth < gesture.slideWidth && scaledHeight < gesture.slideHeight) return;\n    image.minX = Math.min(gesture.slideWidth / 2 - scaledWidth / 2, 0);\n    image.maxX = -image.minX;\n    image.minY = Math.min(gesture.slideHeight / 2 - scaledHeight / 2, 0);\n    image.maxY = -image.minY;\n    image.touchesCurrent.x = evCache.length > 0 ? evCache[0].pageX : e.pageX;\n    image.touchesCurrent.y = evCache.length > 0 ? evCache[0].pageY : e.pageY;\n    const touchesDiff = Math.max(Math.abs(image.touchesCurrent.x - image.touchesStart.x), Math.abs(image.touchesCurrent.y - image.touchesStart.y));\n    if (touchesDiff > 5) {\n      swiper.allowClick = false;\n    }\n    if (!image.isMoved && !isScaling) {\n      if (swiper.isHorizontal() && (Math.floor(image.minX) === Math.floor(image.startX) && image.touchesCurrent.x < image.touchesStart.x || Math.floor(image.maxX) === Math.floor(image.startX) && image.touchesCurrent.x > image.touchesStart.x)) {\n        image.isTouched = false;\n        return;\n      }\n      if (!swiper.isHorizontal() && (Math.floor(image.minY) === Math.floor(image.startY) && image.touchesCurrent.y < image.touchesStart.y || Math.floor(image.maxY) === Math.floor(image.startY) && image.touchesCurrent.y > image.touchesStart.y)) {\n        image.isTouched = false;\n        return;\n      }\n    }\n    if (e.cancelable) {\n      e.preventDefault();\n    }\n    e.stopPropagation();\n    image.isMoved = true;\n    const scaleRatio = (zoom.scale - currentScale) / (gesture.maxRatio - swiper.params.zoom.minRatio);\n    const {\n      originX,\n      originY\n    } = gesture;\n    image.currentX = image.touchesCurrent.x - image.touchesStart.x + image.startX + scaleRatio * (image.width - originX * 2);\n    image.currentY = image.touchesCurrent.y - image.touchesStart.y + image.startY + scaleRatio * (image.height - originY * 2);\n    if (image.currentX < image.minX) {\n      image.currentX = image.minX + 1 - (image.minX - image.currentX + 1) ** 0.8;\n    }\n    if (image.currentX > image.maxX) {\n      image.currentX = image.maxX - 1 + (image.currentX - image.maxX + 1) ** 0.8;\n    }\n    if (image.currentY < image.minY) {\n      image.currentY = image.minY + 1 - (image.minY - image.currentY + 1) ** 0.8;\n    }\n    if (image.currentY > image.maxY) {\n      image.currentY = image.maxY - 1 + (image.currentY - image.maxY + 1) ** 0.8;\n    }\n\n    // Velocity\n    if (!velocity.prevPositionX) velocity.prevPositionX = image.touchesCurrent.x;\n    if (!velocity.prevPositionY) velocity.prevPositionY = image.touchesCurrent.y;\n    if (!velocity.prevTime) velocity.prevTime = Date.now();\n    velocity.x = (image.touchesCurrent.x - velocity.prevPositionX) / (Date.now() - velocity.prevTime) / 2;\n    velocity.y = (image.touchesCurrent.y - velocity.prevPositionY) / (Date.now() - velocity.prevTime) / 2;\n    if (Math.abs(image.touchesCurrent.x - velocity.prevPositionX) < 2) velocity.x = 0;\n    if (Math.abs(image.touchesCurrent.y - velocity.prevPositionY) < 2) velocity.y = 0;\n    velocity.prevPositionX = image.touchesCurrent.x;\n    velocity.prevPositionY = image.touchesCurrent.y;\n    velocity.prevTime = Date.now();\n    gesture.imageWrapEl.style.transform = `translate3d(${image.currentX}px, ${image.currentY}px,0)`;\n  }\n  function onTouchEnd() {\n    const zoom = swiper.zoom;\n    if (!gesture.imageEl) return;\n    if (!image.isTouched || !image.isMoved) {\n      image.isTouched = false;\n      image.isMoved = false;\n      return;\n    }\n    image.isTouched = false;\n    image.isMoved = false;\n    let momentumDurationX = 300;\n    let momentumDurationY = 300;\n    const momentumDistanceX = velocity.x * momentumDurationX;\n    const newPositionX = image.currentX + momentumDistanceX;\n    const momentumDistanceY = velocity.y * momentumDurationY;\n    const newPositionY = image.currentY + momentumDistanceY;\n\n    // Fix duration\n    if (velocity.x !== 0) momentumDurationX = Math.abs((newPositionX - image.currentX) / velocity.x);\n    if (velocity.y !== 0) momentumDurationY = Math.abs((newPositionY - image.currentY) / velocity.y);\n    const momentumDuration = Math.max(momentumDurationX, momentumDurationY);\n    image.currentX = newPositionX;\n    image.currentY = newPositionY;\n    // Define if we need image drag\n    const scaledWidth = image.width * zoom.scale;\n    const scaledHeight = image.height * zoom.scale;\n    image.minX = Math.min(gesture.slideWidth / 2 - scaledWidth / 2, 0);\n    image.maxX = -image.minX;\n    image.minY = Math.min(gesture.slideHeight / 2 - scaledHeight / 2, 0);\n    image.maxY = -image.minY;\n    image.currentX = Math.max(Math.min(image.currentX, image.maxX), image.minX);\n    image.currentY = Math.max(Math.min(image.currentY, image.maxY), image.minY);\n    gesture.imageWrapEl.style.transitionDuration = `${momentumDuration}ms`;\n    gesture.imageWrapEl.style.transform = `translate3d(${image.currentX}px, ${image.currentY}px,0)`;\n  }\n  function onTransitionEnd() {\n    const zoom = swiper.zoom;\n    if (gesture.slideEl && swiper.activeIndex !== swiper.slides.indexOf(gesture.slideEl)) {\n      if (gesture.imageEl) {\n        gesture.imageEl.style.transform = 'translate3d(0,0,0) scale(1)';\n      }\n      if (gesture.imageWrapEl) {\n        gesture.imageWrapEl.style.transform = 'translate3d(0,0,0)';\n      }\n      gesture.slideEl.classList.remove(`${swiper.params.zoom.zoomedSlideClass}`);\n      zoom.scale = 1;\n      currentScale = 1;\n      gesture.slideEl = undefined;\n      gesture.imageEl = undefined;\n      gesture.imageWrapEl = undefined;\n      gesture.originX = 0;\n      gesture.originY = 0;\n    }\n  }\n  function zoomIn(e) {\n    const zoom = swiper.zoom;\n    const params = swiper.params.zoom;\n    if (!gesture.slideEl) {\n      if (e && e.target) {\n        gesture.slideEl = e.target.closest(`.${swiper.params.slideClass}, swiper-slide`);\n      }\n      if (!gesture.slideEl) {\n        if (swiper.params.virtual && swiper.params.virtual.enabled && swiper.virtual) {\n          gesture.slideEl = elementChildren(swiper.slidesEl, `.${swiper.params.slideActiveClass}`)[0];\n        } else {\n          gesture.slideEl = swiper.slides[swiper.activeIndex];\n        }\n      }\n      let imageEl = gesture.slideEl.querySelector(`.${params.containerClass}`);\n      if (imageEl) {\n        imageEl = imageEl.querySelectorAll('picture, img, svg, canvas, .swiper-zoom-target')[0];\n      }\n      gesture.imageEl = imageEl;\n      if (imageEl) {\n        gesture.imageWrapEl = elementParents(gesture.imageEl, `.${params.containerClass}`)[0];\n      } else {\n        gesture.imageWrapEl = undefined;\n      }\n    }\n    if (!gesture.imageEl || !gesture.imageWrapEl) return;\n    if (swiper.params.cssMode) {\n      swiper.wrapperEl.style.overflow = 'hidden';\n      swiper.wrapperEl.style.touchAction = 'none';\n    }\n    gesture.slideEl.classList.add(`${params.zoomedSlideClass}`);\n    let touchX;\n    let touchY;\n    let offsetX;\n    let offsetY;\n    let diffX;\n    let diffY;\n    let translateX;\n    let translateY;\n    let imageWidth;\n    let imageHeight;\n    let scaledWidth;\n    let scaledHeight;\n    let translateMinX;\n    let translateMinY;\n    let translateMaxX;\n    let translateMaxY;\n    let slideWidth;\n    let slideHeight;\n    if (typeof image.touchesStart.x === 'undefined' && e) {\n      touchX = e.pageX;\n      touchY = e.pageY;\n    } else {\n      touchX = image.touchesStart.x;\n      touchY = image.touchesStart.y;\n    }\n    const forceZoomRatio = typeof e === 'number' ? e : null;\n    if (currentScale === 1 && forceZoomRatio) {\n      touchX = undefined;\n      touchY = undefined;\n    }\n    zoom.scale = forceZoomRatio || gesture.imageWrapEl.getAttribute('data-swiper-zoom') || params.maxRatio;\n    currentScale = forceZoomRatio || gesture.imageWrapEl.getAttribute('data-swiper-zoom') || params.maxRatio;\n    if (e && !(currentScale === 1 && forceZoomRatio)) {\n      slideWidth = gesture.slideEl.offsetWidth;\n      slideHeight = gesture.slideEl.offsetHeight;\n      offsetX = elementOffset(gesture.slideEl).left + window.scrollX;\n      offsetY = elementOffset(gesture.slideEl).top + window.scrollY;\n      diffX = offsetX + slideWidth / 2 - touchX;\n      diffY = offsetY + slideHeight / 2 - touchY;\n      imageWidth = gesture.imageEl.offsetWidth;\n      imageHeight = gesture.imageEl.offsetHeight;\n      scaledWidth = imageWidth * zoom.scale;\n      scaledHeight = imageHeight * zoom.scale;\n      translateMinX = Math.min(slideWidth / 2 - scaledWidth / 2, 0);\n      translateMinY = Math.min(slideHeight / 2 - scaledHeight / 2, 0);\n      translateMaxX = -translateMinX;\n      translateMaxY = -translateMinY;\n      translateX = diffX * zoom.scale;\n      translateY = diffY * zoom.scale;\n      if (translateX < translateMinX) {\n        translateX = translateMinX;\n      }\n      if (translateX > translateMaxX) {\n        translateX = translateMaxX;\n      }\n      if (translateY < translateMinY) {\n        translateY = translateMinY;\n      }\n      if (translateY > translateMaxY) {\n        translateY = translateMaxY;\n      }\n    } else {\n      translateX = 0;\n      translateY = 0;\n    }\n    if (forceZoomRatio && zoom.scale === 1) {\n      gesture.originX = 0;\n      gesture.originY = 0;\n    }\n    gesture.imageWrapEl.style.transitionDuration = '300ms';\n    gesture.imageWrapEl.style.transform = `translate3d(${translateX}px, ${translateY}px,0)`;\n    gesture.imageEl.style.transitionDuration = '300ms';\n    gesture.imageEl.style.transform = `translate3d(0,0,0) scale(${zoom.scale})`;\n  }\n  function zoomOut() {\n    const zoom = swiper.zoom;\n    const params = swiper.params.zoom;\n    if (!gesture.slideEl) {\n      if (swiper.params.virtual && swiper.params.virtual.enabled && swiper.virtual) {\n        gesture.slideEl = elementChildren(swiper.slidesEl, `.${swiper.params.slideActiveClass}`)[0];\n      } else {\n        gesture.slideEl = swiper.slides[swiper.activeIndex];\n      }\n      let imageEl = gesture.slideEl.querySelector(`.${params.containerClass}`);\n      if (imageEl) {\n        imageEl = imageEl.querySelectorAll('picture, img, svg, canvas, .swiper-zoom-target')[0];\n      }\n      gesture.imageEl = imageEl;\n      if (imageEl) {\n        gesture.imageWrapEl = elementParents(gesture.imageEl, `.${params.containerClass}`)[0];\n      } else {\n        gesture.imageWrapEl = undefined;\n      }\n    }\n    if (!gesture.imageEl || !gesture.imageWrapEl) return;\n    if (swiper.params.cssMode) {\n      swiper.wrapperEl.style.overflow = '';\n      swiper.wrapperEl.style.touchAction = '';\n    }\n    zoom.scale = 1;\n    currentScale = 1;\n    gesture.imageWrapEl.style.transitionDuration = '300ms';\n    gesture.imageWrapEl.style.transform = 'translate3d(0,0,0)';\n    gesture.imageEl.style.transitionDuration = '300ms';\n    gesture.imageEl.style.transform = 'translate3d(0,0,0) scale(1)';\n    gesture.slideEl.classList.remove(`${params.zoomedSlideClass}`);\n    gesture.slideEl = undefined;\n    gesture.originX = 0;\n    gesture.originY = 0;\n  }\n\n  // Toggle Zoom\n  function zoomToggle(e) {\n    const zoom = swiper.zoom;\n    if (zoom.scale && zoom.scale !== 1) {\n      // Zoom Out\n      zoomOut();\n    } else {\n      // Zoom In\n      zoomIn(e);\n    }\n  }\n  function getListeners() {\n    const passiveListener = swiper.params.passiveListeners ? {\n      passive: true,\n      capture: false\n    } : false;\n    const activeListenerWithCapture = swiper.params.passiveListeners ? {\n      passive: false,\n      capture: true\n    } : true;\n    return {\n      passiveListener,\n      activeListenerWithCapture\n    };\n  }\n\n  // Attach/Detach Events\n  function enable() {\n    const zoom = swiper.zoom;\n    if (zoom.enabled) return;\n    zoom.enabled = true;\n    const {\n      passiveListener,\n      activeListenerWithCapture\n    } = getListeners();\n\n    // Scale image\n    swiper.wrapperEl.addEventListener('pointerdown', onGestureStart, passiveListener);\n    swiper.wrapperEl.addEventListener('pointermove', onGestureChange, activeListenerWithCapture);\n    ['pointerup', 'pointercancel', 'pointerout'].forEach(eventName => {\n      swiper.wrapperEl.addEventListener(eventName, onGestureEnd, passiveListener);\n    });\n\n    // Move image\n    swiper.wrapperEl.addEventListener('pointermove', onTouchMove, activeListenerWithCapture);\n  }\n  function disable() {\n    const zoom = swiper.zoom;\n    if (!zoom.enabled) return;\n    zoom.enabled = false;\n    const {\n      passiveListener,\n      activeListenerWithCapture\n    } = getListeners();\n\n    // Scale image\n    swiper.wrapperEl.removeEventListener('pointerdown', onGestureStart, passiveListener);\n    swiper.wrapperEl.removeEventListener('pointermove', onGestureChange, activeListenerWithCapture);\n    ['pointerup', 'pointercancel', 'pointerout'].forEach(eventName => {\n      swiper.wrapperEl.removeEventListener(eventName, onGestureEnd, passiveListener);\n    });\n\n    // Move image\n    swiper.wrapperEl.removeEventListener('pointermove', onTouchMove, activeListenerWithCapture);\n  }\n  on('init', () => {\n    if (swiper.params.zoom.enabled) {\n      enable();\n    }\n  });\n  on('destroy', () => {\n    disable();\n  });\n  on('touchStart', (_s, e) => {\n    if (!swiper.zoom.enabled) return;\n    onTouchStart(e);\n  });\n  on('touchEnd', (_s, e) => {\n    if (!swiper.zoom.enabled) return;\n    onTouchEnd(e);\n  });\n  on('doubleTap', (_s, e) => {\n    if (!swiper.animating && swiper.params.zoom.enabled && swiper.zoom.enabled && swiper.params.zoom.toggle) {\n      zoomToggle(e);\n    }\n  });\n  on('transitionEnd', () => {\n    if (swiper.zoom.enabled && swiper.params.zoom.enabled) {\n      onTransitionEnd();\n    }\n  });\n  on('slideChange', () => {\n    if (swiper.zoom.enabled && swiper.params.zoom.enabled && swiper.params.cssMode) {\n      onTransitionEnd();\n    }\n  });\n  Object.assign(swiper.zoom, {\n    enable,\n    disable,\n    in: zoomIn,\n    out: zoomOut,\n    toggle: zoomToggle\n  });\n}","/* eslint no-bitwise: [\"error\", { \"allow\": [\">>\"] }] */\nimport { elementTransitionEnd, nextTick } from '../../shared/utils.js';\nexport default function Controller({\n  swiper,\n  extendParams,\n  on\n}) {\n  extendParams({\n    controller: {\n      control: undefined,\n      inverse: false,\n      by: 'slide' // or 'container'\n    }\n  });\n\n  swiper.controller = {\n    control: undefined\n  };\n  function LinearSpline(x, y) {\n    const binarySearch = function search() {\n      let maxIndex;\n      let minIndex;\n      let guess;\n      return (array, val) => {\n        minIndex = -1;\n        maxIndex = array.length;\n        while (maxIndex - minIndex > 1) {\n          guess = maxIndex + minIndex >> 1;\n          if (array[guess] <= val) {\n            minIndex = guess;\n          } else {\n            maxIndex = guess;\n          }\n        }\n        return maxIndex;\n      };\n    }();\n    this.x = x;\n    this.y = y;\n    this.lastIndex = x.length - 1;\n    // Given an x value (x2), return the expected y2 value:\n    // (x1,y1) is the known point before given value,\n    // (x3,y3) is the known point after given value.\n    let i1;\n    let i3;\n    this.interpolate = function interpolate(x2) {\n      if (!x2) return 0;\n\n      // Get the indexes of x1 and x3 (the array indexes before and after given x2):\n      i3 = binarySearch(this.x, x2);\n      i1 = i3 - 1;\n\n      // We have our indexes i1 & i3, so we can calculate already:\n      // y2 := ((x2−x1) × (y3−y1)) ÷ (x3−x1) + y1\n      return (x2 - this.x[i1]) * (this.y[i3] - this.y[i1]) / (this.x[i3] - this.x[i1]) + this.y[i1];\n    };\n    return this;\n  }\n  function getInterpolateFunction(c) {\n    swiper.controller.spline = swiper.params.loop ? new LinearSpline(swiper.slidesGrid, c.slidesGrid) : new LinearSpline(swiper.snapGrid, c.snapGrid);\n  }\n  function setTranslate(_t, byController) {\n    const controlled = swiper.controller.control;\n    let multiplier;\n    let controlledTranslate;\n    const Swiper = swiper.constructor;\n    function setControlledTranslate(c) {\n      if (c.destroyed) return;\n\n      // this will create an Interpolate function based on the snapGrids\n      // x is the Grid of the scrolled scroller and y will be the controlled scroller\n      // it makes sense to create this only once and recall it for the interpolation\n      // the function does a lot of value caching for performance\n      const translate = swiper.rtlTranslate ? -swiper.translate : swiper.translate;\n      if (swiper.params.controller.by === 'slide') {\n        getInterpolateFunction(c);\n        // i am not sure why the values have to be multiplicated this way, tried to invert the snapGrid\n        // but it did not work out\n        controlledTranslate = -swiper.controller.spline.interpolate(-translate);\n      }\n      if (!controlledTranslate || swiper.params.controller.by === 'container') {\n        multiplier = (c.maxTranslate() - c.minTranslate()) / (swiper.maxTranslate() - swiper.minTranslate());\n        if (Number.isNaN(multiplier) || !Number.isFinite(multiplier)) {\n          multiplier = 1;\n        }\n        controlledTranslate = (translate - swiper.minTranslate()) * multiplier + c.minTranslate();\n      }\n      if (swiper.params.controller.inverse) {\n        controlledTranslate = c.maxTranslate() - controlledTranslate;\n      }\n      c.updateProgress(controlledTranslate);\n      c.setTranslate(controlledTranslate, swiper);\n      c.updateActiveIndex();\n      c.updateSlidesClasses();\n    }\n    if (Array.isArray(controlled)) {\n      for (let i = 0; i < controlled.length; i += 1) {\n        if (controlled[i] !== byController && controlled[i] instanceof Swiper) {\n          setControlledTranslate(controlled[i]);\n        }\n      }\n    } else if (controlled instanceof Swiper && byController !== controlled) {\n      setControlledTranslate(controlled);\n    }\n  }\n  function setTransition(duration, byController) {\n    const Swiper = swiper.constructor;\n    const controlled = swiper.controller.control;\n    let i;\n    function setControlledTransition(c) {\n      if (c.destroyed) return;\n      c.setTransition(duration, swiper);\n      if (duration !== 0) {\n        c.transitionStart();\n        if (c.params.autoHeight) {\n          nextTick(() => {\n            c.updateAutoHeight();\n          });\n        }\n        elementTransitionEnd(c.wrapperEl, () => {\n          if (!controlled) return;\n          c.transitionEnd();\n        });\n      }\n    }\n    if (Array.isArray(controlled)) {\n      for (i = 0; i < controlled.length; i += 1) {\n        if (controlled[i] !== byController && controlled[i] instanceof Swiper) {\n          setControlledTransition(controlled[i]);\n        }\n      }\n    } else if (controlled instanceof Swiper && byController !== controlled) {\n      setControlledTransition(controlled);\n    }\n  }\n  function removeSpline() {\n    if (!swiper.controller.control) return;\n    if (swiper.controller.spline) {\n      swiper.controller.spline = undefined;\n      delete swiper.controller.spline;\n    }\n  }\n  on('beforeInit', () => {\n    if (typeof window !== 'undefined' && (\n    // eslint-disable-line\n    typeof swiper.params.controller.control === 'string' || swiper.params.controller.control instanceof HTMLElement)) {\n      const controlElement = document.querySelector(swiper.params.controller.control);\n      if (controlElement && controlElement.swiper) {\n        swiper.controller.control = controlElement.swiper;\n      } else if (controlElement) {\n        const onControllerSwiper = e => {\n          swiper.controller.control = e.detail[0];\n          swiper.update();\n          controlElement.removeEventListener('init', onControllerSwiper);\n        };\n        controlElement.addEventListener('init', onControllerSwiper);\n      }\n      return;\n    }\n    swiper.controller.control = swiper.params.controller.control;\n  });\n  on('update', () => {\n    removeSpline();\n  });\n  on('resize', () => {\n    removeSpline();\n  });\n  on('observerUpdate', () => {\n    removeSpline();\n  });\n  on('setTranslate', (_s, translate, byController) => {\n    if (!swiper.controller.control || swiper.controller.control.destroyed) return;\n    swiper.controller.setTranslate(translate, byController);\n  });\n  on('setTransition', (_s, duration, byController) => {\n    if (!swiper.controller.control || swiper.controller.control.destroyed) return;\n    swiper.controller.setTransition(duration, byController);\n  });\n  Object.assign(swiper.controller, {\n    setTranslate,\n    setTransition\n  });\n}","import classesToSelector from '../../shared/classes-to-selector.js';\nimport { createElement, elementIndex } from '../../shared/utils.js';\nexport default function A11y({\n  swiper,\n  extendParams,\n  on\n}) {\n  extendParams({\n    a11y: {\n      enabled: true,\n      notificationClass: 'swiper-notification',\n      prevSlideMessage: 'Previous slide',\n      nextSlideMessage: 'Next slide',\n      firstSlideMessage: 'This is the first slide',\n      lastSlideMessage: 'This is the last slide',\n      paginationBulletMessage: 'Go to slide {{index}}',\n      slideLabelMessage: '{{index}} / {{slidesLength}}',\n      containerMessage: null,\n      containerRoleDescriptionMessage: null,\n      itemRoleDescriptionMessage: null,\n      slideRole: 'group',\n      id: null\n    }\n  });\n  swiper.a11y = {\n    clicked: false\n  };\n  let liveRegion = null;\n  function notify(message) {\n    const notification = liveRegion;\n    if (notification.length === 0) return;\n    notification.innerHTML = '';\n    notification.innerHTML = message;\n  }\n  const makeElementsArray = el => {\n    if (!Array.isArray(el)) el = [el].filter(e => !!e);\n    return el;\n  };\n  function getRandomNumber(size = 16) {\n    const randomChar = () => Math.round(16 * Math.random()).toString(16);\n    return 'x'.repeat(size).replace(/x/g, randomChar);\n  }\n  function makeElFocusable(el) {\n    el = makeElementsArray(el);\n    el.forEach(subEl => {\n      subEl.setAttribute('tabIndex', '0');\n    });\n  }\n  function makeElNotFocusable(el) {\n    el = makeElementsArray(el);\n    el.forEach(subEl => {\n      subEl.setAttribute('tabIndex', '-1');\n    });\n  }\n  function addElRole(el, role) {\n    el = makeElementsArray(el);\n    el.forEach(subEl => {\n      subEl.setAttribute('role', role);\n    });\n  }\n  function addElRoleDescription(el, description) {\n    el = makeElementsArray(el);\n    el.forEach(subEl => {\n      subEl.setAttribute('aria-roledescription', description);\n    });\n  }\n  function addElControls(el, controls) {\n    el = makeElementsArray(el);\n    el.forEach(subEl => {\n      subEl.setAttribute('aria-controls', controls);\n    });\n  }\n  function addElLabel(el, label) {\n    el = makeElementsArray(el);\n    el.forEach(subEl => {\n      subEl.setAttribute('aria-label', label);\n    });\n  }\n  function addElId(el, id) {\n    el = makeElementsArray(el);\n    el.forEach(subEl => {\n      subEl.setAttribute('id', id);\n    });\n  }\n  function addElLive(el, live) {\n    el = makeElementsArray(el);\n    el.forEach(subEl => {\n      subEl.setAttribute('aria-live', live);\n    });\n  }\n  function disableEl(el) {\n    el = makeElementsArray(el);\n    el.forEach(subEl => {\n      subEl.setAttribute('aria-disabled', true);\n    });\n  }\n  function enableEl(el) {\n    el = makeElementsArray(el);\n    el.forEach(subEl => {\n      subEl.setAttribute('aria-disabled', false);\n    });\n  }\n  function onEnterOrSpaceKey(e) {\n    if (e.keyCode !== 13 && e.keyCode !== 32) return;\n    const params = swiper.params.a11y;\n    const targetEl = e.target;\n    if (swiper.pagination && swiper.pagination.el && (targetEl === swiper.pagination.el || swiper.pagination.el.contains(e.target))) {\n      if (!e.target.matches(classesToSelector(swiper.params.pagination.bulletClass))) return;\n    }\n    if (swiper.navigation && swiper.navigation.nextEl && targetEl === swiper.navigation.nextEl) {\n      if (!(swiper.isEnd && !swiper.params.loop)) {\n        swiper.slideNext();\n      }\n      if (swiper.isEnd) {\n        notify(params.lastSlideMessage);\n      } else {\n        notify(params.nextSlideMessage);\n      }\n    }\n    if (swiper.navigation && swiper.navigation.prevEl && targetEl === swiper.navigation.prevEl) {\n      if (!(swiper.isBeginning && !swiper.params.loop)) {\n        swiper.slidePrev();\n      }\n      if (swiper.isBeginning) {\n        notify(params.firstSlideMessage);\n      } else {\n        notify(params.prevSlideMessage);\n      }\n    }\n    if (swiper.pagination && targetEl.matches(classesToSelector(swiper.params.pagination.bulletClass))) {\n      targetEl.click();\n    }\n  }\n  function updateNavigation() {\n    if (swiper.params.loop || swiper.params.rewind || !swiper.navigation) return;\n    const {\n      nextEl,\n      prevEl\n    } = swiper.navigation;\n    if (prevEl) {\n      if (swiper.isBeginning) {\n        disableEl(prevEl);\n        makeElNotFocusable(prevEl);\n      } else {\n        enableEl(prevEl);\n        makeElFocusable(prevEl);\n      }\n    }\n    if (nextEl) {\n      if (swiper.isEnd) {\n        disableEl(nextEl);\n        makeElNotFocusable(nextEl);\n      } else {\n        enableEl(nextEl);\n        makeElFocusable(nextEl);\n      }\n    }\n  }\n  function hasPagination() {\n    return swiper.pagination && swiper.pagination.bullets && swiper.pagination.bullets.length;\n  }\n  function hasClickablePagination() {\n    return hasPagination() && swiper.params.pagination.clickable;\n  }\n  function updatePagination() {\n    const params = swiper.params.a11y;\n    if (!hasPagination()) return;\n    swiper.pagination.bullets.forEach(bulletEl => {\n      if (swiper.params.pagination.clickable) {\n        makeElFocusable(bulletEl);\n        if (!swiper.params.pagination.renderBullet) {\n          addElRole(bulletEl, 'button');\n          addElLabel(bulletEl, params.paginationBulletMessage.replace(/\\{\\{index\\}\\}/, elementIndex(bulletEl) + 1));\n        }\n      }\n      if (bulletEl.matches(classesToSelector(swiper.params.pagination.bulletActiveClass))) {\n        bulletEl.setAttribute('aria-current', 'true');\n      } else {\n        bulletEl.removeAttribute('aria-current');\n      }\n    });\n  }\n  const initNavEl = (el, wrapperId, message) => {\n    makeElFocusable(el);\n    if (el.tagName !== 'BUTTON') {\n      addElRole(el, 'button');\n      el.addEventListener('keydown', onEnterOrSpaceKey);\n    }\n    addElLabel(el, message);\n    addElControls(el, wrapperId);\n  };\n  const handlePointerDown = () => {\n    swiper.a11y.clicked = true;\n  };\n  const handlePointerUp = () => {\n    requestAnimationFrame(() => {\n      requestAnimationFrame(() => {\n        if (!swiper.destroyed) {\n          swiper.a11y.clicked = false;\n        }\n      });\n    });\n  };\n  const handleFocus = e => {\n    if (swiper.a11y.clicked) return;\n    const slideEl = e.target.closest(`.${swiper.params.slideClass}, swiper-slide`);\n    if (!slideEl || !swiper.slides.includes(slideEl)) return;\n    const isActive = swiper.slides.indexOf(slideEl) === swiper.activeIndex;\n    const isVisible = swiper.params.watchSlidesProgress && swiper.visibleSlides && swiper.visibleSlides.includes(slideEl);\n    if (isActive || isVisible) return;\n    if (e.sourceCapabilities && e.sourceCapabilities.firesTouchEvents) return;\n    if (swiper.isHorizontal()) {\n      swiper.el.scrollLeft = 0;\n    } else {\n      swiper.el.scrollTop = 0;\n    }\n    swiper.slideTo(swiper.slides.indexOf(slideEl), 0);\n  };\n  const initSlides = () => {\n    const params = swiper.params.a11y;\n    if (params.itemRoleDescriptionMessage) {\n      addElRoleDescription(swiper.slides, params.itemRoleDescriptionMessage);\n    }\n    if (params.slideRole) {\n      addElRole(swiper.slides, params.slideRole);\n    }\n    const slidesLength = swiper.slides.length;\n    if (params.slideLabelMessage) {\n      swiper.slides.forEach((slideEl, index) => {\n        const slideIndex = swiper.params.loop ? parseInt(slideEl.getAttribute('data-swiper-slide-index'), 10) : index;\n        const ariaLabelMessage = params.slideLabelMessage.replace(/\\{\\{index\\}\\}/, slideIndex + 1).replace(/\\{\\{slidesLength\\}\\}/, slidesLength);\n        addElLabel(slideEl, ariaLabelMessage);\n      });\n    }\n  };\n  const init = () => {\n    const params = swiper.params.a11y;\n    if (swiper.isElement) {\n      swiper.el.shadowEl.append(liveRegion);\n    } else {\n      swiper.el.append(liveRegion);\n    }\n\n    // Container\n    const containerEl = swiper.el;\n    if (params.containerRoleDescriptionMessage) {\n      addElRoleDescription(containerEl, params.containerRoleDescriptionMessage);\n    }\n    if (params.containerMessage) {\n      addElLabel(containerEl, params.containerMessage);\n    }\n\n    // Wrapper\n    const wrapperEl = swiper.wrapperEl;\n    const wrapperId = params.id || wrapperEl.getAttribute('id') || `swiper-wrapper-${getRandomNumber(16)}`;\n    const live = swiper.params.autoplay && swiper.params.autoplay.enabled ? 'off' : 'polite';\n    addElId(wrapperEl, wrapperId);\n    addElLive(wrapperEl, live);\n\n    // Slide\n    initSlides();\n\n    // Navigation\n    let {\n      nextEl,\n      prevEl\n    } = swiper.navigation ? swiper.navigation : {};\n    nextEl = makeElementsArray(nextEl);\n    prevEl = makeElementsArray(prevEl);\n    if (nextEl) {\n      nextEl.forEach(el => initNavEl(el, wrapperId, params.nextSlideMessage));\n    }\n    if (prevEl) {\n      prevEl.forEach(el => initNavEl(el, wrapperId, params.prevSlideMessage));\n    }\n\n    // Pagination\n    if (hasClickablePagination()) {\n      const paginationEl = Array.isArray(swiper.pagination.el) ? swiper.pagination.el : [swiper.pagination.el];\n      paginationEl.forEach(el => {\n        el.addEventListener('keydown', onEnterOrSpaceKey);\n      });\n    }\n\n    // Tab focus\n    swiper.el.addEventListener('focus', handleFocus, true);\n    swiper.el.addEventListener('pointerdown', handlePointerDown, true);\n    swiper.el.addEventListener('pointerup', handlePointerUp, true);\n  };\n  function destroy() {\n    if (liveRegion) liveRegion.remove();\n    let {\n      nextEl,\n      prevEl\n    } = swiper.navigation ? swiper.navigation : {};\n    nextEl = makeElementsArray(nextEl);\n    prevEl = makeElementsArray(prevEl);\n    if (nextEl) {\n      nextEl.forEach(el => el.removeEventListener('keydown', onEnterOrSpaceKey));\n    }\n    if (prevEl) {\n      prevEl.forEach(el => el.removeEventListener('keydown', onEnterOrSpaceKey));\n    }\n\n    // Pagination\n    if (hasClickablePagination()) {\n      const paginationEl = Array.isArray(swiper.pagination.el) ? swiper.pagination.el : [swiper.pagination.el];\n      paginationEl.forEach(el => {\n        el.removeEventListener('keydown', onEnterOrSpaceKey);\n      });\n    }\n\n    // Tab focus\n    swiper.el.removeEventListener('focus', handleFocus, true);\n    swiper.el.removeEventListener('pointerdown', handlePointerDown, true);\n    swiper.el.removeEventListener('pointerup', handlePointerUp, true);\n  }\n  on('beforeInit', () => {\n    liveRegion = createElement('span', swiper.params.a11y.notificationClass);\n    liveRegion.setAttribute('aria-live', 'assertive');\n    liveRegion.setAttribute('aria-atomic', 'true');\n  });\n  on('afterInit', () => {\n    if (!swiper.params.a11y.enabled) return;\n    init();\n  });\n  on('slidesLengthChange snapGridLengthChange slidesGridLengthChange', () => {\n    if (!swiper.params.a11y.enabled) return;\n    initSlides();\n  });\n  on('fromEdge toEdge afterInit lock unlock', () => {\n    if (!swiper.params.a11y.enabled) return;\n    updateNavigation();\n  });\n  on('paginationUpdate', () => {\n    if (!swiper.params.a11y.enabled) return;\n    updatePagination();\n  });\n  on('destroy', () => {\n    if (!swiper.params.a11y.enabled) return;\n    destroy();\n  });\n}","import { getWindow } from 'ssr-window';\nexport default function History({\n  swiper,\n  extendParams,\n  on\n}) {\n  extendParams({\n    history: {\n      enabled: false,\n      root: '',\n      replaceState: false,\n      key: 'slides',\n      keepQuery: false\n    }\n  });\n  let initialized = false;\n  let paths = {};\n  const slugify = text => {\n    return text.toString().replace(/\\s+/g, '-').replace(/[^\\w-]+/g, '').replace(/--+/g, '-').replace(/^-+/, '').replace(/-+$/, '');\n  };\n  const getPathValues = urlOverride => {\n    const window = getWindow();\n    let location;\n    if (urlOverride) {\n      location = new URL(urlOverride);\n    } else {\n      location = window.location;\n    }\n    const pathArray = location.pathname.slice(1).split('/').filter(part => part !== '');\n    const total = pathArray.length;\n    const key = pathArray[total - 2];\n    const value = pathArray[total - 1];\n    return {\n      key,\n      value\n    };\n  };\n  const setHistory = (key, index) => {\n    const window = getWindow();\n    if (!initialized || !swiper.params.history.enabled) return;\n    let location;\n    if (swiper.params.url) {\n      location = new URL(swiper.params.url);\n    } else {\n      location = window.location;\n    }\n    const slide = swiper.slides[index];\n    let value = slugify(slide.getAttribute('data-history'));\n    if (swiper.params.history.root.length > 0) {\n      let root = swiper.params.history.root;\n      if (root[root.length - 1] === '/') root = root.slice(0, root.length - 1);\n      value = `${root}/${key ? `${key}/` : ''}${value}`;\n    } else if (!location.pathname.includes(key)) {\n      value = `${key ? `${key}/` : ''}${value}`;\n    }\n    if (swiper.params.history.keepQuery) {\n      value += location.search;\n    }\n    const currentState = window.history.state;\n    if (currentState && currentState.value === value) {\n      return;\n    }\n    if (swiper.params.history.replaceState) {\n      window.history.replaceState({\n        value\n      }, null, value);\n    } else {\n      window.history.pushState({\n        value\n      }, null, value);\n    }\n  };\n  const scrollToSlide = (speed, value, runCallbacks) => {\n    if (value) {\n      for (let i = 0, length = swiper.slides.length; i < length; i += 1) {\n        const slide = swiper.slides[i];\n        const slideHistory = slugify(slide.getAttribute('data-history'));\n        if (slideHistory === value) {\n          const index = swiper.getSlideIndex(slide);\n          swiper.slideTo(index, speed, runCallbacks);\n        }\n      }\n    } else {\n      swiper.slideTo(0, speed, runCallbacks);\n    }\n  };\n  const setHistoryPopState = () => {\n    paths = getPathValues(swiper.params.url);\n    scrollToSlide(swiper.params.speed, paths.value, false);\n  };\n  const init = () => {\n    const window = getWindow();\n    if (!swiper.params.history) return;\n    if (!window.history || !window.history.pushState) {\n      swiper.params.history.enabled = false;\n      swiper.params.hashNavigation.enabled = true;\n      return;\n    }\n    initialized = true;\n    paths = getPathValues(swiper.params.url);\n    if (!paths.key && !paths.value) {\n      if (!swiper.params.history.replaceState) {\n        window.addEventListener('popstate', setHistoryPopState);\n      }\n      return;\n    }\n    scrollToSlide(0, paths.value, swiper.params.runCallbacksOnInit);\n    if (!swiper.params.history.replaceState) {\n      window.addEventListener('popstate', setHistoryPopState);\n    }\n  };\n  const destroy = () => {\n    const window = getWindow();\n    if (!swiper.params.history.replaceState) {\n      window.removeEventListener('popstate', setHistoryPopState);\n    }\n  };\n  on('init', () => {\n    if (swiper.params.history.enabled) {\n      init();\n    }\n  });\n  on('destroy', () => {\n    if (swiper.params.history.enabled) {\n      destroy();\n    }\n  });\n  on('transitionEnd _freeModeNoMomentumRelease', () => {\n    if (initialized) {\n      setHistory(swiper.params.history.key, swiper.activeIndex);\n    }\n  });\n  on('slideChange', () => {\n    if (initialized && swiper.params.cssMode) {\n      setHistory(swiper.params.history.key, swiper.activeIndex);\n    }\n  });\n}","import { getWindow, getDocument } from 'ssr-window';\nimport { elementChildren } from '../../shared/utils.js';\nexport default function HashNavigation({\n  swiper,\n  extendParams,\n  emit,\n  on\n}) {\n  let initialized = false;\n  const document = getDocument();\n  const window = getWindow();\n  extendParams({\n    hashNavigation: {\n      enabled: false,\n      replaceState: false,\n      watchState: false,\n      getSlideIndex(_s, hash) {\n        if (swiper.virtual && swiper.params.virtual.enabled) {\n          const slideWithHash = swiper.slides.filter(slideEl => slideEl.getAttribute('data-hash') === hash)[0];\n          if (!slideWithHash) return 0;\n          const index = parseInt(slideWithHash.getAttribute('data-swiper-slide-index'), 10);\n          return index;\n        }\n        return swiper.getSlideIndex(elementChildren(swiper.slidesEl, `.${swiper.params.slideClass}[data-hash=\"${hash}\"], swiper-slide[data-hash=\"${hash}\"]`)[0]);\n      }\n    }\n  });\n  const onHashChange = () => {\n    emit('hashChange');\n    const newHash = document.location.hash.replace('#', '');\n    const activeSlideEl = swiper.slidesEl.querySelector(`[data-swiper-slide-index=\"${swiper.activeIndex}\"]`);\n    const activeSlideHash = activeSlideEl ? activeSlideEl.getAttribute('data-hash') : '';\n    if (newHash !== activeSlideHash) {\n      const newIndex = swiper.params.hashNavigation.getSlideIndex(swiper, newHash);\n      if (typeof newIndex === 'undefined' || Number.isNaN(newIndex)) return;\n      swiper.slideTo(newIndex);\n    }\n  };\n  const setHash = () => {\n    if (!initialized || !swiper.params.hashNavigation.enabled) return;\n    const activeSlideEl = swiper.slidesEl.querySelector(`[data-swiper-slide-index=\"${swiper.activeIndex}\"]`);\n    const activeSlideHash = activeSlideEl ? activeSlideEl.getAttribute('data-hash') || activeSlideEl.getAttribute('data-history') : '';\n    if (swiper.params.hashNavigation.replaceState && window.history && window.history.replaceState) {\n      window.history.replaceState(null, null, `#${activeSlideHash}` || '');\n      emit('hashSet');\n    } else {\n      document.location.hash = activeSlideHash || '';\n      emit('hashSet');\n    }\n  };\n  const init = () => {\n    if (!swiper.params.hashNavigation.enabled || swiper.params.history && swiper.params.history.enabled) return;\n    initialized = true;\n    const hash = document.location.hash.replace('#', '');\n    if (hash) {\n      const speed = 0;\n      const index = swiper.params.hashNavigation.getSlideIndex(swiper, hash);\n      swiper.slideTo(index || 0, speed, swiper.params.runCallbacksOnInit, true);\n    }\n    if (swiper.params.hashNavigation.watchState) {\n      window.addEventListener('hashchange', onHashChange);\n    }\n  };\n  const destroy = () => {\n    if (swiper.params.hashNavigation.watchState) {\n      window.removeEventListener('hashchange', onHashChange);\n    }\n  };\n  on('init', () => {\n    if (swiper.params.hashNavigation.enabled) {\n      init();\n    }\n  });\n  on('destroy', () => {\n    if (swiper.params.hashNavigation.enabled) {\n      destroy();\n    }\n  });\n  on('transitionEnd _freeModeNoMomentumRelease', () => {\n    if (initialized) {\n      setHash();\n    }\n  });\n  on('slideChange', () => {\n    if (initialized && swiper.params.cssMode) {\n      setHash();\n    }\n  });\n}","/* eslint no-underscore-dangle: \"off\" */\n/* eslint no-use-before-define: \"off\" */\nimport { getDocument } from 'ssr-window';\nexport default function Autoplay({\n  swiper,\n  extendParams,\n  on,\n  emit,\n  params\n}) {\n  swiper.autoplay = {\n    running: false,\n    paused: false,\n    timeLeft: 0\n  };\n  extendParams({\n    autoplay: {\n      enabled: false,\n      delay: 3000,\n      waitForTransition: true,\n      disableOnInteraction: true,\n      stopOnLastSlide: false,\n      reverseDirection: false,\n      pauseOnMouseEnter: false\n    }\n  });\n  let timeout;\n  let raf;\n  let autoplayDelayTotal = params && params.autoplay ? params.autoplay.delay : 3000;\n  let autoplayDelayCurrent = params && params.autoplay ? params.autoplay.delay : 3000;\n  let autoplayTimeLeft;\n  let autoplayStartTime = new Date().getTime;\n  let wasPaused;\n  let isTouched;\n  let pausedByTouch;\n  let touchStartTimeout;\n  let slideChanged;\n  let pausedByInteraction;\n  function onTransitionEnd(e) {\n    if (!swiper || swiper.destroyed || !swiper.wrapperEl) return;\n    if (e.target !== swiper.wrapperEl) return;\n    swiper.wrapperEl.removeEventListener('transitionend', onTransitionEnd);\n    resume();\n  }\n  const calcTimeLeft = () => {\n    if (swiper.destroyed || !swiper.autoplay.running) return;\n    if (swiper.autoplay.paused) {\n      wasPaused = true;\n    } else if (wasPaused) {\n      autoplayDelayCurrent = autoplayTimeLeft;\n      wasPaused = false;\n    }\n    const timeLeft = swiper.autoplay.paused ? autoplayTimeLeft : autoplayStartTime + autoplayDelayCurrent - new Date().getTime();\n    swiper.autoplay.timeLeft = timeLeft;\n    emit('autoplayTimeLeft', timeLeft, timeLeft / autoplayDelayTotal);\n    raf = requestAnimationFrame(() => {\n      calcTimeLeft();\n    });\n  };\n  const getSlideDelay = () => {\n    let activeSlideEl;\n    if (swiper.virtual && swiper.params.virtual.enabled) {\n      activeSlideEl = swiper.slides.filter(slideEl => slideEl.classList.contains('swiper-slide-active'))[0];\n    } else {\n      activeSlideEl = swiper.slides[swiper.activeIndex];\n    }\n    if (!activeSlideEl) return undefined;\n    const currentSlideDelay = parseInt(activeSlideEl.getAttribute('data-swiper-autoplay'), 10);\n    return currentSlideDelay;\n  };\n  const run = delayForce => {\n    if (swiper.destroyed || !swiper.autoplay.running) return;\n    cancelAnimationFrame(raf);\n    calcTimeLeft();\n    let delay = typeof delayForce === 'undefined' ? swiper.params.autoplay.delay : delayForce;\n    autoplayDelayTotal = swiper.params.autoplay.delay;\n    autoplayDelayCurrent = swiper.params.autoplay.delay;\n    const currentSlideDelay = getSlideDelay();\n    if (!Number.isNaN(currentSlideDelay) && currentSlideDelay > 0 && typeof delayForce === 'undefined') {\n      delay = currentSlideDelay;\n      autoplayDelayTotal = currentSlideDelay;\n      autoplayDelayCurrent = currentSlideDelay;\n    }\n    autoplayTimeLeft = delay;\n    const speed = swiper.params.speed;\n    const proceed = () => {\n      if (!swiper || swiper.destroyed) return;\n      if (swiper.params.autoplay.reverseDirection) {\n        if (!swiper.isBeginning || swiper.params.loop || swiper.params.rewind) {\n          swiper.slidePrev(speed, true, true);\n          emit('autoplay');\n        } else if (!swiper.params.autoplay.stopOnLastSlide) {\n          swiper.slideTo(swiper.slides.length - 1, speed, true, true);\n          emit('autoplay');\n        }\n      } else {\n        if (!swiper.isEnd || swiper.params.loop || swiper.params.rewind) {\n          swiper.slideNext(speed, true, true);\n          emit('autoplay');\n        } else if (!swiper.params.autoplay.stopOnLastSlide) {\n          swiper.slideTo(0, speed, true, true);\n          emit('autoplay');\n        }\n      }\n      if (swiper.params.cssMode) {\n        autoplayStartTime = new Date().getTime();\n        requestAnimationFrame(() => {\n          run();\n        });\n      }\n    };\n    if (delay > 0) {\n      clearTimeout(timeout);\n      timeout = setTimeout(() => {\n        proceed();\n      }, delay);\n    } else {\n      requestAnimationFrame(() => {\n        proceed();\n      });\n    }\n\n    // eslint-disable-next-line\n    return delay;\n  };\n  const start = () => {\n    swiper.autoplay.running = true;\n    run();\n    emit('autoplayStart');\n  };\n  const stop = () => {\n    swiper.autoplay.running = false;\n    clearTimeout(timeout);\n    cancelAnimationFrame(raf);\n    emit('autoplayStop');\n  };\n  const pause = (internal, reset) => {\n    if (swiper.destroyed || !swiper.autoplay.running) return;\n    clearTimeout(timeout);\n    if (!internal) {\n      pausedByInteraction = true;\n    }\n    const proceed = () => {\n      emit('autoplayPause');\n      if (swiper.params.autoplay.waitForTransition) {\n        swiper.wrapperEl.addEventListener('transitionend', onTransitionEnd);\n      } else {\n        resume();\n      }\n    };\n    swiper.autoplay.paused = true;\n    if (reset) {\n      if (slideChanged) {\n        autoplayTimeLeft = swiper.params.autoplay.delay;\n      }\n      slideChanged = false;\n      proceed();\n      return;\n    }\n    const delay = autoplayTimeLeft || swiper.params.autoplay.delay;\n    autoplayTimeLeft = delay - (new Date().getTime() - autoplayStartTime);\n    if (swiper.isEnd && autoplayTimeLeft < 0 && !swiper.params.loop) return;\n    if (autoplayTimeLeft < 0) autoplayTimeLeft = 0;\n    proceed();\n  };\n  const resume = () => {\n    if (swiper.isEnd && autoplayTimeLeft < 0 && !swiper.params.loop || swiper.destroyed || !swiper.autoplay.running) return;\n    autoplayStartTime = new Date().getTime();\n    if (pausedByInteraction) {\n      pausedByInteraction = false;\n      run(autoplayTimeLeft);\n    } else {\n      run();\n    }\n    swiper.autoplay.paused = false;\n    emit('autoplayResume');\n  };\n  const onVisibilityChange = () => {\n    if (swiper.destroyed || !swiper.autoplay.running) return;\n    const document = getDocument();\n    if (document.visibilityState === 'hidden') {\n      pausedByInteraction = true;\n      pause(true);\n    }\n    if (document.visibilityState === 'visible') {\n      resume();\n    }\n  };\n  const onPointerEnter = e => {\n    if (e.pointerType !== 'mouse') return;\n    pausedByInteraction = true;\n    pause(true);\n  };\n  const onPointerLeave = e => {\n    if (e.pointerType !== 'mouse') return;\n    if (swiper.autoplay.paused) {\n      resume();\n    }\n  };\n  const attachMouseEvents = () => {\n    if (swiper.params.autoplay.pauseOnMouseEnter) {\n      swiper.el.addEventListener('pointerenter', onPointerEnter);\n      swiper.el.addEventListener('pointerleave', onPointerLeave);\n    }\n  };\n  const detachMouseEvents = () => {\n    swiper.el.removeEventListener('pointerenter', onPointerEnter);\n    swiper.el.removeEventListener('pointerleave', onPointerLeave);\n  };\n  const attachDocumentEvents = () => {\n    const document = getDocument();\n    document.addEventListener('visibilitychange', onVisibilityChange);\n  };\n  const detachDocumentEvents = () => {\n    const document = getDocument();\n    document.removeEventListener('visibilitychange', onVisibilityChange);\n  };\n  on('init', () => {\n    if (swiper.params.autoplay.enabled) {\n      attachMouseEvents();\n      attachDocumentEvents();\n      autoplayStartTime = new Date().getTime();\n      start();\n    }\n  });\n  on('destroy', () => {\n    detachMouseEvents();\n    detachDocumentEvents();\n    if (swiper.autoplay.running) {\n      stop();\n    }\n  });\n  on('beforeTransitionStart', (_s, speed, internal) => {\n    if (swiper.destroyed || !swiper.autoplay.running) return;\n    if (internal || !swiper.params.autoplay.disableOnInteraction) {\n      pause(true, true);\n    } else {\n      stop();\n    }\n  });\n  on('sliderFirstMove', () => {\n    if (swiper.destroyed || !swiper.autoplay.running) return;\n    if (swiper.params.autoplay.disableOnInteraction) {\n      stop();\n      return;\n    }\n    isTouched = true;\n    pausedByTouch = false;\n    pausedByInteraction = false;\n    touchStartTimeout = setTimeout(() => {\n      pausedByInteraction = true;\n      pausedByTouch = true;\n      pause(true);\n    }, 200);\n  });\n  on('touchEnd', () => {\n    if (swiper.destroyed || !swiper.autoplay.running || !isTouched) return;\n    clearTimeout(touchStartTimeout);\n    clearTimeout(timeout);\n    if (swiper.params.autoplay.disableOnInteraction) {\n      pausedByTouch = false;\n      isTouched = false;\n      return;\n    }\n    if (pausedByTouch && swiper.params.cssMode) resume();\n    pausedByTouch = false;\n    isTouched = false;\n  });\n  on('slideChange', () => {\n    if (swiper.destroyed || !swiper.autoplay.running) return;\n    slideChanged = true;\n  });\n  Object.assign(swiper.autoplay, {\n    start,\n    stop,\n    pause,\n    resume\n  });\n}","import { getDocument } from 'ssr-window';\nimport { elementChildren, isObject } from '../../shared/utils.js';\nexport default function Thumb({\n  swiper,\n  extendParams,\n  on\n}) {\n  extendParams({\n    thumbs: {\n      swiper: null,\n      multipleActiveThumbs: true,\n      autoScrollOffset: 0,\n      slideThumbActiveClass: 'swiper-slide-thumb-active',\n      thumbsContainerClass: 'swiper-thumbs'\n    }\n  });\n  let initialized = false;\n  let swiperCreated = false;\n  swiper.thumbs = {\n    swiper: null\n  };\n  function onThumbClick() {\n    const thumbsSwiper = swiper.thumbs.swiper;\n    if (!thumbsSwiper || thumbsSwiper.destroyed) return;\n    const clickedIndex = thumbsSwiper.clickedIndex;\n    const clickedSlide = thumbsSwiper.clickedSlide;\n    if (clickedSlide && clickedSlide.classList.contains(swiper.params.thumbs.slideThumbActiveClass)) return;\n    if (typeof clickedIndex === 'undefined' || clickedIndex === null) return;\n    let slideToIndex;\n    if (thumbsSwiper.params.loop) {\n      slideToIndex = parseInt(thumbsSwiper.clickedSlide.getAttribute('data-swiper-slide-index'), 10);\n    } else {\n      slideToIndex = clickedIndex;\n    }\n    if (swiper.params.loop) {\n      swiper.slideToLoop(slideToIndex);\n    } else {\n      swiper.slideTo(slideToIndex);\n    }\n  }\n  function init() {\n    const {\n      thumbs: thumbsParams\n    } = swiper.params;\n    if (initialized) return false;\n    initialized = true;\n    const SwiperClass = swiper.constructor;\n    if (thumbsParams.swiper instanceof SwiperClass) {\n      swiper.thumbs.swiper = thumbsParams.swiper;\n      Object.assign(swiper.thumbs.swiper.originalParams, {\n        watchSlidesProgress: true,\n        slideToClickedSlide: false\n      });\n      Object.assign(swiper.thumbs.swiper.params, {\n        watchSlidesProgress: true,\n        slideToClickedSlide: false\n      });\n      swiper.thumbs.swiper.update();\n    } else if (isObject(thumbsParams.swiper)) {\n      const thumbsSwiperParams = Object.assign({}, thumbsParams.swiper);\n      Object.assign(thumbsSwiperParams, {\n        watchSlidesProgress: true,\n        slideToClickedSlide: false\n      });\n      swiper.thumbs.swiper = new SwiperClass(thumbsSwiperParams);\n      swiperCreated = true;\n    }\n    swiper.thumbs.swiper.el.classList.add(swiper.params.thumbs.thumbsContainerClass);\n    swiper.thumbs.swiper.on('tap', onThumbClick);\n    return true;\n  }\n  function update(initial) {\n    const thumbsSwiper = swiper.thumbs.swiper;\n    if (!thumbsSwiper || thumbsSwiper.destroyed) return;\n    const slidesPerView = thumbsSwiper.params.slidesPerView === 'auto' ? thumbsSwiper.slidesPerViewDynamic() : thumbsSwiper.params.slidesPerView;\n\n    // Activate thumbs\n    let thumbsToActivate = 1;\n    const thumbActiveClass = swiper.params.thumbs.slideThumbActiveClass;\n    if (swiper.params.slidesPerView > 1 && !swiper.params.centeredSlides) {\n      thumbsToActivate = swiper.params.slidesPerView;\n    }\n    if (!swiper.params.thumbs.multipleActiveThumbs) {\n      thumbsToActivate = 1;\n    }\n    thumbsToActivate = Math.floor(thumbsToActivate);\n    thumbsSwiper.slides.forEach(slideEl => slideEl.classList.remove(thumbActiveClass));\n    if (thumbsSwiper.params.loop || thumbsSwiper.params.virtual && thumbsSwiper.params.virtual.enabled) {\n      for (let i = 0; i < thumbsToActivate; i += 1) {\n        elementChildren(thumbsSwiper.slidesEl, `[data-swiper-slide-index=\"${swiper.realIndex + i}\"]`).forEach(slideEl => {\n          slideEl.classList.add(thumbActiveClass);\n        });\n      }\n    } else {\n      for (let i = 0; i < thumbsToActivate; i += 1) {\n        if (thumbsSwiper.slides[swiper.realIndex + i]) {\n          thumbsSwiper.slides[swiper.realIndex + i].classList.add(thumbActiveClass);\n        }\n      }\n    }\n    const autoScrollOffset = swiper.params.thumbs.autoScrollOffset;\n    const useOffset = autoScrollOffset && !thumbsSwiper.params.loop;\n    if (swiper.realIndex !== thumbsSwiper.realIndex || useOffset) {\n      const currentThumbsIndex = thumbsSwiper.activeIndex;\n      let newThumbsIndex;\n      let direction;\n      if (thumbsSwiper.params.loop) {\n        const newThumbsSlide = thumbsSwiper.slides.filter(slideEl => slideEl.getAttribute('data-swiper-slide-index') === `${swiper.realIndex}`)[0];\n        newThumbsIndex = thumbsSwiper.slides.indexOf(newThumbsSlide);\n        direction = swiper.activeIndex > swiper.previousIndex ? 'next' : 'prev';\n      } else {\n        newThumbsIndex = swiper.realIndex;\n        direction = newThumbsIndex > swiper.previousIndex ? 'next' : 'prev';\n      }\n      if (useOffset) {\n        newThumbsIndex += direction === 'next' ? autoScrollOffset : -1 * autoScrollOffset;\n      }\n      if (thumbsSwiper.visibleSlidesIndexes && thumbsSwiper.visibleSlidesIndexes.indexOf(newThumbsIndex) < 0) {\n        if (thumbsSwiper.params.centeredSlides) {\n          if (newThumbsIndex > currentThumbsIndex) {\n            newThumbsIndex = newThumbsIndex - Math.floor(slidesPerView / 2) + 1;\n          } else {\n            newThumbsIndex = newThumbsIndex + Math.floor(slidesPerView / 2) - 1;\n          }\n        } else if (newThumbsIndex > currentThumbsIndex && thumbsSwiper.params.slidesPerGroup === 1) {\n          // newThumbsIndex = newThumbsIndex - slidesPerView + 1;\n        }\n        thumbsSwiper.slideTo(newThumbsIndex, initial ? 0 : undefined);\n      }\n    }\n  }\n  on('beforeInit', () => {\n    const {\n      thumbs\n    } = swiper.params;\n    if (!thumbs || !thumbs.swiper) return;\n    if (typeof thumbs.swiper === 'string' || thumbs.swiper instanceof HTMLElement) {\n      const document = getDocument();\n      const getThumbsElementAndInit = () => {\n        const thumbsElement = typeof thumbs.swiper === 'string' ? document.querySelector(thumbs.swiper) : thumbs.swiper;\n        if (thumbsElement && thumbsElement.swiper) {\n          thumbs.swiper = thumbsElement.swiper;\n          init();\n          update(true);\n        } else if (thumbsElement) {\n          const onThumbsSwiper = e => {\n            thumbs.swiper = e.detail[0];\n            thumbsElement.removeEventListener('init', onThumbsSwiper);\n            init();\n            update(true);\n            thumbs.swiper.update();\n            swiper.update();\n          };\n          thumbsElement.addEventListener('init', onThumbsSwiper);\n        }\n        return thumbsElement;\n      };\n      const watchForThumbsToAppear = () => {\n        if (swiper.destroyed) return;\n        const thumbsElement = getThumbsElementAndInit();\n        if (!thumbsElement) {\n          requestAnimationFrame(watchForThumbsToAppear);\n        }\n      };\n      requestAnimationFrame(watchForThumbsToAppear);\n    } else {\n      init();\n      update(true);\n    }\n  });\n  on('slideChange update resize observerUpdate', () => {\n    update();\n  });\n  on('setTransition', (_s, duration) => {\n    const thumbsSwiper = swiper.thumbs.swiper;\n    if (!thumbsSwiper || thumbsSwiper.destroyed) return;\n    thumbsSwiper.setTransition(duration);\n  });\n  on('beforeDestroy', () => {\n    const thumbsSwiper = swiper.thumbs.swiper;\n    if (!thumbsSwiper || thumbsSwiper.destroyed) return;\n    if (swiperCreated) {\n      thumbsSwiper.destroy();\n    }\n  });\n  Object.assign(swiper.thumbs, {\n    init,\n    update\n  });\n}","import { elementTransitionEnd, now } from '../../shared/utils.js';\nexport default function freeMode({\n  swiper,\n  extendParams,\n  emit,\n  once\n}) {\n  extendParams({\n    freeMode: {\n      enabled: false,\n      momentum: true,\n      momentumRatio: 1,\n      momentumBounce: true,\n      momentumBounceRatio: 1,\n      momentumVelocityRatio: 1,\n      sticky: false,\n      minimumVelocity: 0.02\n    }\n  });\n  function onTouchStart() {\n    const translate = swiper.getTranslate();\n    swiper.setTranslate(translate);\n    swiper.setTransition(0);\n    swiper.touchEventsData.velocities.length = 0;\n    swiper.freeMode.onTouchEnd({\n      currentPos: swiper.rtl ? swiper.translate : -swiper.translate\n    });\n  }\n  function onTouchMove() {\n    const {\n      touchEventsData: data,\n      touches\n    } = swiper;\n    // Velocity\n    if (data.velocities.length === 0) {\n      data.velocities.push({\n        position: touches[swiper.isHorizontal() ? 'startX' : 'startY'],\n        time: data.touchStartTime\n      });\n    }\n    data.velocities.push({\n      position: touches[swiper.isHorizontal() ? 'currentX' : 'currentY'],\n      time: now()\n    });\n  }\n  function onTouchEnd({\n    currentPos\n  }) {\n    const {\n      params,\n      wrapperEl,\n      rtlTranslate: rtl,\n      snapGrid,\n      touchEventsData: data\n    } = swiper;\n    // Time diff\n    const touchEndTime = now();\n    const timeDiff = touchEndTime - data.touchStartTime;\n    if (currentPos < -swiper.minTranslate()) {\n      swiper.slideTo(swiper.activeIndex);\n      return;\n    }\n    if (currentPos > -swiper.maxTranslate()) {\n      if (swiper.slides.length < snapGrid.length) {\n        swiper.slideTo(snapGrid.length - 1);\n      } else {\n        swiper.slideTo(swiper.slides.length - 1);\n      }\n      return;\n    }\n    if (params.freeMode.momentum) {\n      if (data.velocities.length > 1) {\n        const lastMoveEvent = data.velocities.pop();\n        const velocityEvent = data.velocities.pop();\n        const distance = lastMoveEvent.position - velocityEvent.position;\n        const time = lastMoveEvent.time - velocityEvent.time;\n        swiper.velocity = distance / time;\n        swiper.velocity /= 2;\n        if (Math.abs(swiper.velocity) < params.freeMode.minimumVelocity) {\n          swiper.velocity = 0;\n        }\n        // this implies that the user stopped moving a finger then released.\n        // There would be no events with distance zero, so the last event is stale.\n        if (time > 150 || now() - lastMoveEvent.time > 300) {\n          swiper.velocity = 0;\n        }\n      } else {\n        swiper.velocity = 0;\n      }\n      swiper.velocity *= params.freeMode.momentumVelocityRatio;\n      data.velocities.length = 0;\n      let momentumDuration = 1000 * params.freeMode.momentumRatio;\n      const momentumDistance = swiper.velocity * momentumDuration;\n      let newPosition = swiper.translate + momentumDistance;\n      if (rtl) newPosition = -newPosition;\n      let doBounce = false;\n      let afterBouncePosition;\n      const bounceAmount = Math.abs(swiper.velocity) * 20 * params.freeMode.momentumBounceRatio;\n      let needsLoopFix;\n      if (newPosition < swiper.maxTranslate()) {\n        if (params.freeMode.momentumBounce) {\n          if (newPosition + swiper.maxTranslate() < -bounceAmount) {\n            newPosition = swiper.maxTranslate() - bounceAmount;\n          }\n          afterBouncePosition = swiper.maxTranslate();\n          doBounce = true;\n          data.allowMomentumBounce = true;\n        } else {\n          newPosition = swiper.maxTranslate();\n        }\n        if (params.loop && params.centeredSlides) needsLoopFix = true;\n      } else if (newPosition > swiper.minTranslate()) {\n        if (params.freeMode.momentumBounce) {\n          if (newPosition - swiper.minTranslate() > bounceAmount) {\n            newPosition = swiper.minTranslate() + bounceAmount;\n          }\n          afterBouncePosition = swiper.minTranslate();\n          doBounce = true;\n          data.allowMomentumBounce = true;\n        } else {\n          newPosition = swiper.minTranslate();\n        }\n        if (params.loop && params.centeredSlides) needsLoopFix = true;\n      } else if (params.freeMode.sticky) {\n        let nextSlide;\n        for (let j = 0; j < snapGrid.length; j += 1) {\n          if (snapGrid[j] > -newPosition) {\n            nextSlide = j;\n            break;\n          }\n        }\n        if (Math.abs(snapGrid[nextSlide] - newPosition) < Math.abs(snapGrid[nextSlide - 1] - newPosition) || swiper.swipeDirection === 'next') {\n          newPosition = snapGrid[nextSlide];\n        } else {\n          newPosition = snapGrid[nextSlide - 1];\n        }\n        newPosition = -newPosition;\n      }\n      if (needsLoopFix) {\n        once('transitionEnd', () => {\n          swiper.loopFix();\n        });\n      }\n      // Fix duration\n      if (swiper.velocity !== 0) {\n        if (rtl) {\n          momentumDuration = Math.abs((-newPosition - swiper.translate) / swiper.velocity);\n        } else {\n          momentumDuration = Math.abs((newPosition - swiper.translate) / swiper.velocity);\n        }\n        if (params.freeMode.sticky) {\n          // If freeMode.sticky is active and the user ends a swipe with a slow-velocity\n          // event, then durations can be 20+ seconds to slide one (or zero!) slides.\n          // It's easy to see this when simulating touch with mouse events. To fix this,\n          // limit single-slide swipes to the default slide duration. This also has the\n          // nice side effect of matching slide speed if the user stopped moving before\n          // lifting finger or mouse vs. moving slowly before lifting the finger/mouse.\n          // For faster swipes, also apply limits (albeit higher ones).\n          const moveDistance = Math.abs((rtl ? -newPosition : newPosition) - swiper.translate);\n          const currentSlideSize = swiper.slidesSizesGrid[swiper.activeIndex];\n          if (moveDistance < currentSlideSize) {\n            momentumDuration = params.speed;\n          } else if (moveDistance < 2 * currentSlideSize) {\n            momentumDuration = params.speed * 1.5;\n          } else {\n            momentumDuration = params.speed * 2.5;\n          }\n        }\n      } else if (params.freeMode.sticky) {\n        swiper.slideToClosest();\n        return;\n      }\n      if (params.freeMode.momentumBounce && doBounce) {\n        swiper.updateProgress(afterBouncePosition);\n        swiper.setTransition(momentumDuration);\n        swiper.setTranslate(newPosition);\n        swiper.transitionStart(true, swiper.swipeDirection);\n        swiper.animating = true;\n        elementTransitionEnd(wrapperEl, () => {\n          if (!swiper || swiper.destroyed || !data.allowMomentumBounce) return;\n          emit('momentumBounce');\n          swiper.setTransition(params.speed);\n          setTimeout(() => {\n            swiper.setTranslate(afterBouncePosition);\n            elementTransitionEnd(wrapperEl, () => {\n              if (!swiper || swiper.destroyed) return;\n              swiper.transitionEnd();\n            });\n          }, 0);\n        });\n      } else if (swiper.velocity) {\n        emit('_freeModeNoMomentumRelease');\n        swiper.updateProgress(newPosition);\n        swiper.setTransition(momentumDuration);\n        swiper.setTranslate(newPosition);\n        swiper.transitionStart(true, swiper.swipeDirection);\n        if (!swiper.animating) {\n          swiper.animating = true;\n          elementTransitionEnd(wrapperEl, () => {\n            if (!swiper || swiper.destroyed) return;\n            swiper.transitionEnd();\n          });\n        }\n      } else {\n        swiper.updateProgress(newPosition);\n      }\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n    } else if (params.freeMode.sticky) {\n      swiper.slideToClosest();\n      return;\n    } else if (params.freeMode) {\n      emit('_freeModeNoMomentumRelease');\n    }\n    if (!params.freeMode.momentum || timeDiff >= params.longSwipesMs) {\n      swiper.updateProgress();\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n    }\n  }\n  Object.assign(swiper, {\n    freeMode: {\n      onTouchStart,\n      onTouchMove,\n      onTouchEnd\n    }\n  });\n}","import appendSlide from './methods/appendSlide.js';\nimport prependSlide from './methods/prependSlide.js';\nimport addSlide from './methods/addSlide.js';\nimport removeSlide from './methods/removeSlide.js';\nimport removeAllSlides from './methods/removeAllSlides.js';\nexport default function Manipulation({\n  swiper\n}) {\n  Object.assign(swiper, {\n    appendSlide: appendSlide.bind(swiper),\n    prependSlide: prependSlide.bind(swiper),\n    addSlide: addSlide.bind(swiper),\n    removeSlide: removeSlide.bind(swiper),\n    removeAllSlides: removeAllSlides.bind(swiper)\n  });\n}","export default function appendSlide(slides) {\n  const swiper = this;\n  const {\n    params,\n    slidesEl\n  } = swiper;\n  if (params.loop) {\n    swiper.loopDestroy();\n  }\n  const appendElement = slideEl => {\n    if (typeof slideEl === 'string') {\n      const tempDOM = document.createElement('div');\n      tempDOM.innerHTML = slideEl;\n      slidesEl.append(tempDOM.children[0]);\n      tempDOM.innerHTML = '';\n    } else {\n      slidesEl.append(slideEl);\n    }\n  };\n  if (typeof slides === 'object' && 'length' in slides) {\n    for (let i = 0; i < slides.length; i += 1) {\n      if (slides[i]) appendElement(slides[i]);\n    }\n  } else {\n    appendElement(slides);\n  }\n  swiper.recalcSlides();\n  if (params.loop) {\n    swiper.loopCreate();\n  }\n  if (!params.observer || swiper.isElement) {\n    swiper.update();\n  }\n}","export default function prependSlide(slides) {\n  const swiper = this;\n  const {\n    params,\n    activeIndex,\n    slidesEl\n  } = swiper;\n  if (params.loop) {\n    swiper.loopDestroy();\n  }\n  let newActiveIndex = activeIndex + 1;\n  const prependElement = slideEl => {\n    if (typeof slideEl === 'string') {\n      const tempDOM = document.createElement('div');\n      tempDOM.innerHTML = slideEl;\n      slidesEl.prepend(tempDOM.children[0]);\n      tempDOM.innerHTML = '';\n    } else {\n      slidesEl.prepend(slideEl);\n    }\n  };\n  if (typeof slides === 'object' && 'length' in slides) {\n    for (let i = 0; i < slides.length; i += 1) {\n      if (slides[i]) prependElement(slides[i]);\n    }\n    newActiveIndex = activeIndex + slides.length;\n  } else {\n    prependElement(slides);\n  }\n  swiper.recalcSlides();\n  if (params.loop) {\n    swiper.loopCreate();\n  }\n  if (!params.observer || swiper.isElement) {\n    swiper.update();\n  }\n  swiper.slideTo(newActiveIndex, 0, false);\n}","export default function addSlide(index, slides) {\n  const swiper = this;\n  const {\n    params,\n    activeIndex,\n    slidesEl\n  } = swiper;\n  let activeIndexBuffer = activeIndex;\n  if (params.loop) {\n    activeIndexBuffer -= swiper.loopedSlides;\n    swiper.loopDestroy();\n    swiper.recalcSlides();\n  }\n  const baseLength = swiper.slides.length;\n  if (index <= 0) {\n    swiper.prependSlide(slides);\n    return;\n  }\n  if (index >= baseLength) {\n    swiper.appendSlide(slides);\n    return;\n  }\n  let newActiveIndex = activeIndexBuffer > index ? activeIndexBuffer + 1 : activeIndexBuffer;\n  const slidesBuffer = [];\n  for (let i = baseLength - 1; i >= index; i -= 1) {\n    const currentSlide = swiper.slides[i];\n    currentSlide.remove();\n    slidesBuffer.unshift(currentSlide);\n  }\n  if (typeof slides === 'object' && 'length' in slides) {\n    for (let i = 0; i < slides.length; i += 1) {\n      if (slides[i]) slidesEl.append(slides[i]);\n    }\n    newActiveIndex = activeIndexBuffer > index ? activeIndexBuffer + slides.length : activeIndexBuffer;\n  } else {\n    slidesEl.append(slides);\n  }\n  for (let i = 0; i < slidesBuffer.length; i += 1) {\n    slidesEl.append(slidesBuffer[i]);\n  }\n  swiper.recalcSlides();\n  if (params.loop) {\n    swiper.loopCreate();\n  }\n  if (!params.observer || swiper.isElement) {\n    swiper.update();\n  }\n  if (params.loop) {\n    swiper.slideTo(newActiveIndex + swiper.loopedSlides, 0, false);\n  } else {\n    swiper.slideTo(newActiveIndex, 0, false);\n  }\n}","export default function removeSlide(slidesIndexes) {\n  const swiper = this;\n  const {\n    params,\n    activeIndex\n  } = swiper;\n  let activeIndexBuffer = activeIndex;\n  if (params.loop) {\n    activeIndexBuffer -= swiper.loopedSlides;\n    swiper.loopDestroy();\n  }\n  let newActiveIndex = activeIndexBuffer;\n  let indexToRemove;\n  if (typeof slidesIndexes === 'object' && 'length' in slidesIndexes) {\n    for (let i = 0; i < slidesIndexes.length; i += 1) {\n      indexToRemove = slidesIndexes[i];\n      if (swiper.slides[indexToRemove]) swiper.slides[indexToRemove].remove();\n      if (indexToRemove < newActiveIndex) newActiveIndex -= 1;\n    }\n    newActiveIndex = Math.max(newActiveIndex, 0);\n  } else {\n    indexToRemove = slidesIndexes;\n    if (swiper.slides[indexToRemove]) swiper.slides[indexToRemove].remove();\n    if (indexToRemove < newActiveIndex) newActiveIndex -= 1;\n    newActiveIndex = Math.max(newActiveIndex, 0);\n  }\n  swiper.recalcSlides();\n  if (params.loop) {\n    swiper.loopCreate();\n  }\n  if (!params.observer || swiper.isElement) {\n    swiper.update();\n  }\n  if (params.loop) {\n    swiper.slideTo(newActiveIndex + swiper.loopedSlides, 0, false);\n  } else {\n    swiper.slideTo(newActiveIndex, 0, false);\n  }\n}","export default function removeAllSlides() {\n  const swiper = this;\n  const slidesIndexes = [];\n  for (let i = 0; i < swiper.slides.length; i += 1) {\n    slidesIndexes.push(i);\n  }\n  swiper.removeSlide(slidesIndexes);\n}","import effectInit from '../../shared/effect-init.js';\nimport effectTarget from '../../shared/effect-target.js';\nimport effectVirtualTransitionEnd from '../../shared/effect-virtual-transition-end.js';\nimport { getSlideTransformEl } from '../../shared/utils.js';\nexport default function EffectFade({\n  swiper,\n  extendParams,\n  on\n}) {\n  extendParams({\n    fadeEffect: {\n      crossFade: false\n    }\n  });\n  const setTranslate = () => {\n    const {\n      slides\n    } = swiper;\n    const params = swiper.params.fadeEffect;\n    for (let i = 0; i < slides.length; i += 1) {\n      const slideEl = swiper.slides[i];\n      const offset = slideEl.swiperSlideOffset;\n      let tx = -offset;\n      if (!swiper.params.virtualTranslate) tx -= swiper.translate;\n      let ty = 0;\n      if (!swiper.isHorizontal()) {\n        ty = tx;\n        tx = 0;\n      }\n      const slideOpacity = swiper.params.fadeEffect.crossFade ? Math.max(1 - Math.abs(slideEl.progress), 0) : 1 + Math.min(Math.max(slideEl.progress, -1), 0);\n      const targetEl = effectTarget(params, slideEl);\n      targetEl.style.opacity = slideOpacity;\n      targetEl.style.transform = `translate3d(${tx}px, ${ty}px, 0px)`;\n    }\n  };\n  const setTransition = duration => {\n    const transformElements = swiper.slides.map(slideEl => getSlideTransformEl(slideEl));\n    transformElements.forEach(el => {\n      el.style.transitionDuration = `${duration}ms`;\n    });\n    effectVirtualTransitionEnd({\n      swiper,\n      duration,\n      transformElements,\n      allSlides: true\n    });\n  };\n  effectInit({\n    effect: 'fade',\n    swiper,\n    on,\n    setTranslate,\n    setTransition,\n    overwriteParams: () => ({\n      slidesPerView: 1,\n      slidesPerGroup: 1,\n      watchSlidesProgress: true,\n      spaceBetween: 0,\n      virtualTranslate: !swiper.params.cssMode\n    })\n  });\n}","export default function effectInit(params) {\n  const {\n    effect,\n    swiper,\n    on,\n    setTranslate,\n    setTransition,\n    overwriteParams,\n    perspective,\n    recreateShadows,\n    getEffectParams\n  } = params;\n  on('beforeInit', () => {\n    if (swiper.params.effect !== effect) return;\n    swiper.classNames.push(`${swiper.params.containerModifierClass}${effect}`);\n    if (perspective && perspective()) {\n      swiper.classNames.push(`${swiper.params.containerModifierClass}3d`);\n    }\n    const overwriteParamsResult = overwriteParams ? overwriteParams() : {};\n    Object.assign(swiper.params, overwriteParamsResult);\n    Object.assign(swiper.originalParams, overwriteParamsResult);\n  });\n  on('setTranslate', () => {\n    if (swiper.params.effect !== effect) return;\n    setTranslate();\n  });\n  on('setTransition', (_s, duration) => {\n    if (swiper.params.effect !== effect) return;\n    setTransition(duration);\n  });\n  on('transitionEnd', () => {\n    if (swiper.params.effect !== effect) return;\n    if (recreateShadows) {\n      if (!getEffectParams || !getEffectParams().slideShadows) return;\n      // remove shadows\n      swiper.slides.forEach(slideEl => {\n        slideEl.querySelectorAll('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left').forEach(shadowEl => shadowEl.remove());\n      });\n      // create new one\n      recreateShadows();\n    }\n  });\n  let requireUpdateOnVirtual;\n  on('virtualUpdate', () => {\n    if (swiper.params.effect !== effect) return;\n    if (!swiper.slides.length) {\n      requireUpdateOnVirtual = true;\n    }\n    requestAnimationFrame(() => {\n      if (requireUpdateOnVirtual && swiper.slides && swiper.slides.length) {\n        setTranslate();\n        requireUpdateOnVirtual = false;\n      }\n    });\n  });\n}","import { getSlideTransformEl } from './utils.js';\nexport default function effectTarget(effectParams, slideEl) {\n  const transformEl = getSlideTransformEl(slideEl);\n  if (transformEl !== slideEl) {\n    transformEl.style.backfaceVisibility = 'hidden';\n    transformEl.style['-webkit-backface-visibility'] = 'hidden';\n  }\n  return transformEl;\n}","import { elementTransitionEnd } from './utils.js';\nexport default function effectVirtualTransitionEnd({\n  swiper,\n  duration,\n  transformElements,\n  allSlides\n}) {\n  const {\n    activeIndex\n  } = swiper;\n  const getSlide = el => {\n    if (!el.parentElement) {\n      // assume shadow root\n      const slide = swiper.slides.filter(slideEl => slideEl.shadowEl && slideEl.shadowEl === el.parentNode)[0];\n      return slide;\n    }\n    return el.parentElement;\n  };\n  if (swiper.params.virtualTranslate && duration !== 0) {\n    let eventTriggered = false;\n    let transitionEndTarget;\n    if (allSlides) {\n      transitionEndTarget = transformElements;\n    } else {\n      transitionEndTarget = transformElements.filter(transformEl => {\n        const el = transformEl.classList.contains('swiper-slide-transform') ? getSlide(transformEl) : transformEl;\n        return swiper.getSlideIndex(el) === activeIndex;\n      });\n    }\n    transitionEndTarget.forEach(el => {\n      elementTransitionEnd(el, () => {\n        if (eventTriggered) return;\n        if (!swiper || swiper.destroyed) return;\n        eventTriggered = true;\n        swiper.animating = false;\n        const evt = new window.CustomEvent('transitionend', {\n          bubbles: true,\n          cancelable: true\n        });\n        swiper.wrapperEl.dispatchEvent(evt);\n      });\n    });\n  }\n}","import effectInit from '../../shared/effect-init.js';\nimport { createElement } from '../../shared/utils.js';\nexport default function EffectCube({\n  swiper,\n  extendParams,\n  on\n}) {\n  extendParams({\n    cubeEffect: {\n      slideShadows: true,\n      shadow: true,\n      shadowOffset: 20,\n      shadowScale: 0.94\n    }\n  });\n  const createSlideShadows = (slideEl, progress, isHorizontal) => {\n    let shadowBefore = isHorizontal ? slideEl.querySelector('.swiper-slide-shadow-left') : slideEl.querySelector('.swiper-slide-shadow-top');\n    let shadowAfter = isHorizontal ? slideEl.querySelector('.swiper-slide-shadow-right') : slideEl.querySelector('.swiper-slide-shadow-bottom');\n    if (!shadowBefore) {\n      shadowBefore = createElement('div', `swiper-slide-shadow-${isHorizontal ? 'left' : 'top'}`);\n      slideEl.append(shadowBefore);\n    }\n    if (!shadowAfter) {\n      shadowAfter = createElement('div', `swiper-slide-shadow-${isHorizontal ? 'right' : 'bottom'}`);\n      slideEl.append(shadowAfter);\n    }\n    if (shadowBefore) shadowBefore.style.opacity = Math.max(-progress, 0);\n    if (shadowAfter) shadowAfter.style.opacity = Math.max(progress, 0);\n  };\n  const recreateShadows = () => {\n    // create new ones\n    const isHorizontal = swiper.isHorizontal();\n    swiper.slides.forEach(slideEl => {\n      const progress = Math.max(Math.min(slideEl.progress, 1), -1);\n      createSlideShadows(slideEl, progress, isHorizontal);\n    });\n  };\n  const setTranslate = () => {\n    const {\n      el,\n      wrapperEl,\n      slides,\n      width: swiperWidth,\n      height: swiperHeight,\n      rtlTranslate: rtl,\n      size: swiperSize,\n      browser\n    } = swiper;\n    const params = swiper.params.cubeEffect;\n    const isHorizontal = swiper.isHorizontal();\n    const isVirtual = swiper.virtual && swiper.params.virtual.enabled;\n    let wrapperRotate = 0;\n    let cubeShadowEl;\n    if (params.shadow) {\n      if (isHorizontal) {\n        cubeShadowEl = swiper.slidesEl.querySelector('.swiper-cube-shadow');\n        if (!cubeShadowEl) {\n          cubeShadowEl = createElement('div', 'swiper-cube-shadow');\n          swiper.slidesEl.append(cubeShadowEl);\n        }\n        cubeShadowEl.style.height = `${swiperWidth}px`;\n      } else {\n        cubeShadowEl = el.querySelector('.swiper-cube-shadow');\n        if (!cubeShadowEl) {\n          cubeShadowEl = createElement('div', 'swiper-cube-shadow');\n          el.append(cubeShadowEl);\n        }\n      }\n    }\n    for (let i = 0; i < slides.length; i += 1) {\n      const slideEl = slides[i];\n      let slideIndex = i;\n      if (isVirtual) {\n        slideIndex = parseInt(slideEl.getAttribute('data-swiper-slide-index'), 10);\n      }\n      let slideAngle = slideIndex * 90;\n      let round = Math.floor(slideAngle / 360);\n      if (rtl) {\n        slideAngle = -slideAngle;\n        round = Math.floor(-slideAngle / 360);\n      }\n      const progress = Math.max(Math.min(slideEl.progress, 1), -1);\n      let tx = 0;\n      let ty = 0;\n      let tz = 0;\n      if (slideIndex % 4 === 0) {\n        tx = -round * 4 * swiperSize;\n        tz = 0;\n      } else if ((slideIndex - 1) % 4 === 0) {\n        tx = 0;\n        tz = -round * 4 * swiperSize;\n      } else if ((slideIndex - 2) % 4 === 0) {\n        tx = swiperSize + round * 4 * swiperSize;\n        tz = swiperSize;\n      } else if ((slideIndex - 3) % 4 === 0) {\n        tx = -swiperSize;\n        tz = 3 * swiperSize + swiperSize * 4 * round;\n      }\n      if (rtl) {\n        tx = -tx;\n      }\n      if (!isHorizontal) {\n        ty = tx;\n        tx = 0;\n      }\n      const transform = `rotateX(${isHorizontal ? 0 : -slideAngle}deg) rotateY(${isHorizontal ? slideAngle : 0}deg) translate3d(${tx}px, ${ty}px, ${tz}px)`;\n      if (progress <= 1 && progress > -1) {\n        wrapperRotate = slideIndex * 90 + progress * 90;\n        if (rtl) wrapperRotate = -slideIndex * 90 - progress * 90;\n      }\n      slideEl.style.transform = transform;\n      if (params.slideShadows) {\n        createSlideShadows(slideEl, progress, isHorizontal);\n      }\n    }\n    wrapperEl.style.transformOrigin = `50% 50% -${swiperSize / 2}px`;\n    wrapperEl.style['-webkit-transform-origin'] = `50% 50% -${swiperSize / 2}px`;\n    if (params.shadow) {\n      if (isHorizontal) {\n        cubeShadowEl.style.transform = `translate3d(0px, ${swiperWidth / 2 + params.shadowOffset}px, ${-swiperWidth / 2}px) rotateX(90deg) rotateZ(0deg) scale(${params.shadowScale})`;\n      } else {\n        const shadowAngle = Math.abs(wrapperRotate) - Math.floor(Math.abs(wrapperRotate) / 90) * 90;\n        const multiplier = 1.5 - (Math.sin(shadowAngle * 2 * Math.PI / 360) / 2 + Math.cos(shadowAngle * 2 * Math.PI / 360) / 2);\n        const scale1 = params.shadowScale;\n        const scale2 = params.shadowScale / multiplier;\n        const offset = params.shadowOffset;\n        cubeShadowEl.style.transform = `scale3d(${scale1}, 1, ${scale2}) translate3d(0px, ${swiperHeight / 2 + offset}px, ${-swiperHeight / 2 / scale2}px) rotateX(-90deg)`;\n      }\n    }\n    const zFactor = (browser.isSafari || browser.isWebView) && browser.needPerspectiveFix ? -swiperSize / 2 : 0;\n    wrapperEl.style.transform = `translate3d(0px,0,${zFactor}px) rotateX(${swiper.isHorizontal() ? 0 : wrapperRotate}deg) rotateY(${swiper.isHorizontal() ? -wrapperRotate : 0}deg)`;\n    wrapperEl.style.setProperty('--swiper-cube-translate-z', `${zFactor}px`);\n  };\n  const setTransition = duration => {\n    const {\n      el,\n      slides\n    } = swiper;\n    slides.forEach(slideEl => {\n      slideEl.style.transitionDuration = `${duration}ms`;\n      slideEl.querySelectorAll('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left').forEach(subEl => {\n        subEl.style.transitionDuration = `${duration}ms`;\n      });\n    });\n    if (swiper.params.cubeEffect.shadow && !swiper.isHorizontal()) {\n      const shadowEl = el.querySelector('.swiper-cube-shadow');\n      if (shadowEl) shadowEl.style.transitionDuration = `${duration}ms`;\n    }\n  };\n  effectInit({\n    effect: 'cube',\n    swiper,\n    on,\n    setTranslate,\n    setTransition,\n    recreateShadows,\n    getEffectParams: () => swiper.params.cubeEffect,\n    perspective: () => true,\n    overwriteParams: () => ({\n      slidesPerView: 1,\n      slidesPerGroup: 1,\n      watchSlidesProgress: true,\n      resistanceRatio: 0,\n      spaceBetween: 0,\n      centeredSlides: false,\n      virtualTranslate: true\n    })\n  });\n}","import createShadow from '../../shared/create-shadow.js';\nimport effectInit from '../../shared/effect-init.js';\nimport effectTarget from '../../shared/effect-target.js';\nimport effectVirtualTransitionEnd from '../../shared/effect-virtual-transition-end.js';\nimport { getSlideTransformEl } from '../../shared/utils.js';\nexport default function EffectFlip({\n  swiper,\n  extendParams,\n  on\n}) {\n  extendParams({\n    flipEffect: {\n      slideShadows: true,\n      limitRotation: true\n    }\n  });\n  const createSlideShadows = (slideEl, progress, params) => {\n    let shadowBefore = swiper.isHorizontal() ? slideEl.querySelector('.swiper-slide-shadow-left') : slideEl.querySelector('.swiper-slide-shadow-top');\n    let shadowAfter = swiper.isHorizontal() ? slideEl.querySelector('.swiper-slide-shadow-right') : slideEl.querySelector('.swiper-slide-shadow-bottom');\n    if (!shadowBefore) {\n      shadowBefore = createShadow(params, slideEl, swiper.isHorizontal() ? 'left' : 'top');\n    }\n    if (!shadowAfter) {\n      shadowAfter = createShadow(params, slideEl, swiper.isHorizontal() ? 'right' : 'bottom');\n    }\n    if (shadowBefore) shadowBefore.style.opacity = Math.max(-progress, 0);\n    if (shadowAfter) shadowAfter.style.opacity = Math.max(progress, 0);\n  };\n  const recreateShadows = () => {\n    // Set shadows\n    const params = swiper.params.flipEffect;\n    swiper.slides.forEach(slideEl => {\n      let progress = slideEl.progress;\n      if (swiper.params.flipEffect.limitRotation) {\n        progress = Math.max(Math.min(slideEl.progress, 1), -1);\n      }\n      createSlideShadows(slideEl, progress, params);\n    });\n  };\n  const setTranslate = () => {\n    const {\n      slides,\n      rtlTranslate: rtl\n    } = swiper;\n    const params = swiper.params.flipEffect;\n    for (let i = 0; i < slides.length; i += 1) {\n      const slideEl = slides[i];\n      let progress = slideEl.progress;\n      if (swiper.params.flipEffect.limitRotation) {\n        progress = Math.max(Math.min(slideEl.progress, 1), -1);\n      }\n      const offset = slideEl.swiperSlideOffset;\n      const rotate = -180 * progress;\n      let rotateY = rotate;\n      let rotateX = 0;\n      let tx = swiper.params.cssMode ? -offset - swiper.translate : -offset;\n      let ty = 0;\n      if (!swiper.isHorizontal()) {\n        ty = tx;\n        tx = 0;\n        rotateX = -rotateY;\n        rotateY = 0;\n      } else if (rtl) {\n        rotateY = -rotateY;\n      }\n      slideEl.style.zIndex = -Math.abs(Math.round(progress)) + slides.length;\n      if (params.slideShadows) {\n        createSlideShadows(slideEl, progress, params);\n      }\n      const transform = `translate3d(${tx}px, ${ty}px, 0px) rotateX(${rotateX}deg) rotateY(${rotateY}deg)`;\n      const targetEl = effectTarget(params, slideEl);\n      targetEl.style.transform = transform;\n    }\n  };\n  const setTransition = duration => {\n    const transformElements = swiper.slides.map(slideEl => getSlideTransformEl(slideEl));\n    transformElements.forEach(el => {\n      el.style.transitionDuration = `${duration}ms`;\n      el.querySelectorAll('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left').forEach(shadowEl => {\n        shadowEl.style.transitionDuration = `${duration}ms`;\n      });\n    });\n    effectVirtualTransitionEnd({\n      swiper,\n      duration,\n      transformElements\n    });\n  };\n  effectInit({\n    effect: 'flip',\n    swiper,\n    on,\n    setTranslate,\n    setTransition,\n    recreateShadows,\n    getEffectParams: () => swiper.params.flipEffect,\n    perspective: () => true,\n    overwriteParams: () => ({\n      slidesPerView: 1,\n      slidesPerGroup: 1,\n      watchSlidesProgress: true,\n      spaceBetween: 0,\n      virtualTranslate: !swiper.params.cssMode\n    })\n  });\n}","import { createElement, getSlideTransformEl } from './utils.js';\nexport default function createShadow(params, slideEl, side) {\n  const shadowClass = `swiper-slide-shadow${side ? `-${side}` : ''}`;\n  const shadowContainer = getSlideTransformEl(slideEl);\n  let shadowEl = shadowContainer.querySelector(`.${shadowClass}`);\n  if (!shadowEl) {\n    shadowEl = createElement('div', `swiper-slide-shadow${side ? `-${side}` : ''}`);\n    shadowContainer.append(shadowEl);\n  }\n  return shadowEl;\n}","import createShadow from '../../shared/create-shadow.js';\nimport effectInit from '../../shared/effect-init.js';\nimport effectTarget from '../../shared/effect-target.js';\nimport { getSlideTransformEl } from '../../shared/utils.js';\nexport default function EffectCoverflow({\n  swiper,\n  extendParams,\n  on\n}) {\n  extendParams({\n    coverflowEffect: {\n      rotate: 50,\n      stretch: 0,\n      depth: 100,\n      scale: 1,\n      modifier: 1,\n      slideShadows: true\n    }\n  });\n  const setTranslate = () => {\n    const {\n      width: swiperWidth,\n      height: swiperHeight,\n      slides,\n      slidesSizesGrid\n    } = swiper;\n    const params = swiper.params.coverflowEffect;\n    const isHorizontal = swiper.isHorizontal();\n    const transform = swiper.translate;\n    const center = isHorizontal ? -transform + swiperWidth / 2 : -transform + swiperHeight / 2;\n    const rotate = isHorizontal ? params.rotate : -params.rotate;\n    const translate = params.depth;\n    // Each slide offset from center\n    for (let i = 0, length = slides.length; i < length; i += 1) {\n      const slideEl = slides[i];\n      const slideSize = slidesSizesGrid[i];\n      const slideOffset = slideEl.swiperSlideOffset;\n      const centerOffset = (center - slideOffset - slideSize / 2) / slideSize;\n      const offsetMultiplier = typeof params.modifier === 'function' ? params.modifier(centerOffset) : centerOffset * params.modifier;\n      let rotateY = isHorizontal ? rotate * offsetMultiplier : 0;\n      let rotateX = isHorizontal ? 0 : rotate * offsetMultiplier;\n      // var rotateZ = 0\n      let translateZ = -translate * Math.abs(offsetMultiplier);\n      let stretch = params.stretch;\n      // Allow percentage to make a relative stretch for responsive sliders\n      if (typeof stretch === 'string' && stretch.indexOf('%') !== -1) {\n        stretch = parseFloat(params.stretch) / 100 * slideSize;\n      }\n      let translateY = isHorizontal ? 0 : stretch * offsetMultiplier;\n      let translateX = isHorizontal ? stretch * offsetMultiplier : 0;\n      let scale = 1 - (1 - params.scale) * Math.abs(offsetMultiplier);\n\n      // Fix for ultra small values\n      if (Math.abs(translateX) < 0.001) translateX = 0;\n      if (Math.abs(translateY) < 0.001) translateY = 0;\n      if (Math.abs(translateZ) < 0.001) translateZ = 0;\n      if (Math.abs(rotateY) < 0.001) rotateY = 0;\n      if (Math.abs(rotateX) < 0.001) rotateX = 0;\n      if (Math.abs(scale) < 0.001) scale = 0;\n      const slideTransform = `translate3d(${translateX}px,${translateY}px,${translateZ}px)  rotateX(${rotateX}deg) rotateY(${rotateY}deg) scale(${scale})`;\n      const targetEl = effectTarget(params, slideEl);\n      targetEl.style.transform = slideTransform;\n      slideEl.style.zIndex = -Math.abs(Math.round(offsetMultiplier)) + 1;\n      if (params.slideShadows) {\n        // Set shadows\n        let shadowBeforeEl = isHorizontal ? slideEl.querySelector('.swiper-slide-shadow-left') : slideEl.querySelector('.swiper-slide-shadow-top');\n        let shadowAfterEl = isHorizontal ? slideEl.querySelector('.swiper-slide-shadow-right') : slideEl.querySelector('.swiper-slide-shadow-bottom');\n        if (!shadowBeforeEl) {\n          shadowBeforeEl = createShadow(params, slideEl, isHorizontal ? 'left' : 'top');\n        }\n        if (!shadowAfterEl) {\n          shadowAfterEl = createShadow(params, slideEl, isHorizontal ? 'right' : 'bottom');\n        }\n        if (shadowBeforeEl) shadowBeforeEl.style.opacity = offsetMultiplier > 0 ? offsetMultiplier : 0;\n        if (shadowAfterEl) shadowAfterEl.style.opacity = -offsetMultiplier > 0 ? -offsetMultiplier : 0;\n      }\n    }\n  };\n  const setTransition = duration => {\n    const transformElements = swiper.slides.map(slideEl => getSlideTransformEl(slideEl));\n    transformElements.forEach(el => {\n      el.style.transitionDuration = `${duration}ms`;\n      el.querySelectorAll('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left').forEach(shadowEl => {\n        shadowEl.style.transitionDuration = `${duration}ms`;\n      });\n    });\n  };\n  effectInit({\n    effect: 'coverflow',\n    swiper,\n    on,\n    setTranslate,\n    setTransition,\n    perspective: () => true,\n    overwriteParams: () => ({\n      watchSlidesProgress: true\n    })\n  });\n}","import createShadow from '../../shared/create-shadow.js';\nimport effectInit from '../../shared/effect-init.js';\nimport effectTarget from '../../shared/effect-target.js';\nimport effectVirtualTransitionEnd from '../../shared/effect-virtual-transition-end.js';\nimport { getSlideTransformEl } from '../../shared/utils.js';\nexport default function EffectCreative({\n  swiper,\n  extendParams,\n  on\n}) {\n  extendParams({\n    creativeEffect: {\n      limitProgress: 1,\n      shadowPerProgress: false,\n      progressMultiplier: 1,\n      perspective: true,\n      prev: {\n        translate: [0, 0, 0],\n        rotate: [0, 0, 0],\n        opacity: 1,\n        scale: 1\n      },\n      next: {\n        translate: [0, 0, 0],\n        rotate: [0, 0, 0],\n        opacity: 1,\n        scale: 1\n      }\n    }\n  });\n  const getTranslateValue = value => {\n    if (typeof value === 'string') return value;\n    return `${value}px`;\n  };\n  const setTranslate = () => {\n    const {\n      slides,\n      wrapperEl,\n      slidesSizesGrid\n    } = swiper;\n    const params = swiper.params.creativeEffect;\n    const {\n      progressMultiplier: multiplier\n    } = params;\n    const isCenteredSlides = swiper.params.centeredSlides;\n    if (isCenteredSlides) {\n      const margin = slidesSizesGrid[0] / 2 - swiper.params.slidesOffsetBefore || 0;\n      wrapperEl.style.transform = `translateX(calc(50% - ${margin}px))`;\n    }\n    for (let i = 0; i < slides.length; i += 1) {\n      const slideEl = slides[i];\n      const slideProgress = slideEl.progress;\n      const progress = Math.min(Math.max(slideEl.progress, -params.limitProgress), params.limitProgress);\n      let originalProgress = progress;\n      if (!isCenteredSlides) {\n        originalProgress = Math.min(Math.max(slideEl.originalProgress, -params.limitProgress), params.limitProgress);\n      }\n      const offset = slideEl.swiperSlideOffset;\n      const t = [swiper.params.cssMode ? -offset - swiper.translate : -offset, 0, 0];\n      const r = [0, 0, 0];\n      let custom = false;\n      if (!swiper.isHorizontal()) {\n        t[1] = t[0];\n        t[0] = 0;\n      }\n      let data = {\n        translate: [0, 0, 0],\n        rotate: [0, 0, 0],\n        scale: 1,\n        opacity: 1\n      };\n      if (progress < 0) {\n        data = params.next;\n        custom = true;\n      } else if (progress > 0) {\n        data = params.prev;\n        custom = true;\n      }\n      // set translate\n      t.forEach((value, index) => {\n        t[index] = `calc(${value}px + (${getTranslateValue(data.translate[index])} * ${Math.abs(progress * multiplier)}))`;\n      });\n      // set rotates\n      r.forEach((value, index) => {\n        r[index] = data.rotate[index] * Math.abs(progress * multiplier);\n      });\n      slideEl.style.zIndex = -Math.abs(Math.round(slideProgress)) + slides.length;\n      const translateString = t.join(', ');\n      const rotateString = `rotateX(${r[0]}deg) rotateY(${r[1]}deg) rotateZ(${r[2]}deg)`;\n      const scaleString = originalProgress < 0 ? `scale(${1 + (1 - data.scale) * originalProgress * multiplier})` : `scale(${1 - (1 - data.scale) * originalProgress * multiplier})`;\n      const opacityString = originalProgress < 0 ? 1 + (1 - data.opacity) * originalProgress * multiplier : 1 - (1 - data.opacity) * originalProgress * multiplier;\n      const transform = `translate3d(${translateString}) ${rotateString} ${scaleString}`;\n\n      // Set shadows\n      if (custom && data.shadow || !custom) {\n        let shadowEl = slideEl.querySelector('.swiper-slide-shadow');\n        if (!shadowEl && data.shadow) {\n          shadowEl = createShadow(params, slideEl);\n        }\n        if (shadowEl) {\n          const shadowOpacity = params.shadowPerProgress ? progress * (1 / params.limitProgress) : progress;\n          shadowEl.style.opacity = Math.min(Math.max(Math.abs(shadowOpacity), 0), 1);\n        }\n      }\n      const targetEl = effectTarget(params, slideEl);\n      targetEl.style.transform = transform;\n      targetEl.style.opacity = opacityString;\n      if (data.origin) {\n        targetEl.style.transformOrigin = data.origin;\n      }\n    }\n  };\n  const setTransition = duration => {\n    const transformElements = swiper.slides.map(slideEl => getSlideTransformEl(slideEl));\n    transformElements.forEach(el => {\n      el.style.transitionDuration = `${duration}ms`;\n      el.querySelectorAll('.swiper-slide-shadow').forEach(shadowEl => {\n        shadowEl.style.transitionDuration = `${duration}ms`;\n      });\n    });\n    effectVirtualTransitionEnd({\n      swiper,\n      duration,\n      transformElements,\n      allSlides: true\n    });\n  };\n  effectInit({\n    effect: 'creative',\n    swiper,\n    on,\n    setTranslate,\n    setTransition,\n    perspective: () => swiper.params.creativeEffect.perspective,\n    overwriteParams: () => ({\n      watchSlidesProgress: true,\n      virtualTranslate: !swiper.params.cssMode\n    })\n  });\n}","import createShadow from '../../shared/create-shadow.js';\nimport effectInit from '../../shared/effect-init.js';\nimport effectTarget from '../../shared/effect-target.js';\nimport effectVirtualTransitionEnd from '../../shared/effect-virtual-transition-end.js';\nimport { getSlideTransformEl } from '../../shared/utils.js';\nexport default function EffectCards({\n  swiper,\n  extendParams,\n  on\n}) {\n  extendParams({\n    cardsEffect: {\n      slideShadows: true,\n      rotate: true,\n      perSlideRotate: 2,\n      perSlideOffset: 8\n    }\n  });\n  const setTranslate = () => {\n    const {\n      slides,\n      activeIndex\n    } = swiper;\n    const params = swiper.params.cardsEffect;\n    const {\n      startTranslate,\n      isTouched\n    } = swiper.touchEventsData;\n    const currentTranslate = swiper.translate;\n    for (let i = 0; i < slides.length; i += 1) {\n      const slideEl = slides[i];\n      const slideProgress = slideEl.progress;\n      const progress = Math.min(Math.max(slideProgress, -4), 4);\n      let offset = slideEl.swiperSlideOffset;\n      if (swiper.params.centeredSlides && !swiper.params.cssMode) {\n        swiper.wrapperEl.style.transform = `translateX(${swiper.minTranslate()}px)`;\n      }\n      if (swiper.params.centeredSlides && swiper.params.cssMode) {\n        offset -= slides[0].swiperSlideOffset;\n      }\n      let tX = swiper.params.cssMode ? -offset - swiper.translate : -offset;\n      let tY = 0;\n      const tZ = -100 * Math.abs(progress);\n      let scale = 1;\n      let rotate = -params.perSlideRotate * progress;\n      let tXAdd = params.perSlideOffset - Math.abs(progress) * 0.75;\n      const slideIndex = swiper.virtual && swiper.params.virtual.enabled ? swiper.virtual.from + i : i;\n      const isSwipeToNext = (slideIndex === activeIndex || slideIndex === activeIndex - 1) && progress > 0 && progress < 1 && (isTouched || swiper.params.cssMode) && currentTranslate < startTranslate;\n      const isSwipeToPrev = (slideIndex === activeIndex || slideIndex === activeIndex + 1) && progress < 0 && progress > -1 && (isTouched || swiper.params.cssMode) && currentTranslate > startTranslate;\n      if (isSwipeToNext || isSwipeToPrev) {\n        const subProgress = (1 - Math.abs((Math.abs(progress) - 0.5) / 0.5)) ** 0.5;\n        rotate += -28 * progress * subProgress;\n        scale += -0.5 * subProgress;\n        tXAdd += 96 * subProgress;\n        tY = `${-25 * subProgress * Math.abs(progress)}%`;\n      }\n      if (progress < 0) {\n        // next\n        tX = `calc(${tX}px + (${tXAdd * Math.abs(progress)}%))`;\n      } else if (progress > 0) {\n        // prev\n        tX = `calc(${tX}px + (-${tXAdd * Math.abs(progress)}%))`;\n      } else {\n        tX = `${tX}px`;\n      }\n      if (!swiper.isHorizontal()) {\n        const prevY = tY;\n        tY = tX;\n        tX = prevY;\n      }\n      const scaleString = progress < 0 ? `${1 + (1 - scale) * progress}` : `${1 - (1 - scale) * progress}`;\n      const transform = `\n        translate3d(${tX}, ${tY}, ${tZ}px)\n        rotateZ(${params.rotate ? rotate : 0}deg)\n        scale(${scaleString})\n      `;\n      if (params.slideShadows) {\n        // Set shadows\n        let shadowEl = slideEl.querySelector('.swiper-slide-shadow');\n        if (!shadowEl) {\n          shadowEl = createShadow(params, slideEl);\n        }\n        if (shadowEl) shadowEl.style.opacity = Math.min(Math.max((Math.abs(progress) - 0.5) / 0.5, 0), 1);\n      }\n      slideEl.style.zIndex = -Math.abs(Math.round(slideProgress)) + slides.length;\n      const targetEl = effectTarget(params, slideEl);\n      targetEl.style.transform = transform;\n    }\n  };\n  const setTransition = duration => {\n    const transformElements = swiper.slides.map(slideEl => getSlideTransformEl(slideEl));\n    transformElements.forEach(el => {\n      el.style.transitionDuration = `${duration}ms`;\n      el.querySelectorAll('.swiper-slide-shadow').forEach(shadowEl => {\n        shadowEl.style.transitionDuration = `${duration}ms`;\n      });\n    });\n    effectVirtualTransitionEnd({\n      swiper,\n      duration,\n      transformElements\n    });\n  };\n  effectInit({\n    effect: 'cards',\n    swiper,\n    on,\n    setTranslate,\n    setTransition,\n    perspective: () => true,\n    overwriteParams: () => ({\n      watchSlidesProgress: true,\n      virtualTranslate: !swiper.params.cssMode\n    })\n  });\n}"],"names":["$9WMMt","parcelRequire","$2pSj8","default","use","loop","navigation","nextEl","prevEl","breakpoints","slidesPerView","slidesPerGroup","$58sFY","$1c280aeb2839a22d$var$prototypes","$3lgo1","$42aG2","$lUFJw","$59lEw","$itDrZ","$aSak5","$61axM","$lrPYL","$lWyhG","$h5TWE","$9Vwwo","$1c280aeb2839a22d$var$extendedDefaults","$1c280aeb2839a22d$var$Swiper","getSlideIndex","slideEl","slidesEl","params","this","slides","$1EjTE","elementChildren","slideClass","firstSlideIndex","elementIndex","getSlideIndexByData","index","filter","getAttribute","recalcSlides","enable","swiper","enabled","grabCursor","setGrabCursor","emit","disable","unsetGrabCursor","setProgress","progress","speed","Math","min","max","minTranslate","current","maxTranslate","translateTo","updateActiveIndex","updateSlidesClasses","emitContainerClasses","_emitClasses","el","cls","className","split","indexOf","containerModifierClass","join","getSlideClasses","destroyed","emitSlidesClasses","updates","forEach","classNames","push","slidesPerViewDynamic","view","exact","slidesGrid","slidesSizesGrid","size","swiperSize","activeIndex","spv","centeredSlides","breakLoop","slideSize","swiperSlideSize","i","length","i1","i2","update","snapGrid","setTranslate","translateValue","rtlTranslate","translate","newTranslate","translated","setBreakpoint","querySelectorAll","imageEl","complete","$7eaCI","processLazyPreloader","updateSize","updateSlides","updateProgress","freeMode","autoHeight","updateAutoHeight","isEnd","virtual","slideTo","watchOverflow","checkOverflow","changeDirection","newDirection","needUpdate","currentDirection","direction","classList","remove","add","style","width","height","changeLanguageDirection","rtl","dir","mount","element","mounted","document","querySelector","shadowEl","isElement","getWrapperSelector","wrapperClass","trim","wrapperEl","shadowRoot","getWrapper","createElements","createElement","append","Object","assign","toLowerCase","elementStyle","wrongRTL","init","initialized","addClasses","initialSlide","slidesBefore","runCallbacksOnInit","loopCreate","attachEvents","addEventListener","e","target","preload","destroy","deleteInstance","cleanStyles","detachEvents","loopDestroy","removeClasses","removeAttribute","slideVisibleClass","slideActiveClass","slideNextClass","slidePrevClass","keys","eventsListeners","eventName","off","deleteProps","static","newDefaults","extend","extendedDefaults","defaults","$959nv","mod","prototype","__modules__","modules","module","Array","isArray","m","installModule","constructor","args","toString","call","slice","getDocument","swipers","containerEl","newParams","__swiper__","support","$ledMJ","getSupport","device","$4rC3V","getDevice","userAgent","browser","$lhE85","getBrowser","eventsAnyListeners","allModulesParams","extendParams","$6gDqh","on","bind","once","swiperParams","originalParams","passedParams","onAny","isHorizontal","isVertical","realIndex","isBeginning","previousTranslate","velocity","animating","cssOverflowAdjustment","trunc","allowSlideNext","allowSlidePrev","touchEventsData","isTouched","undefined","isMoved","allowTouchCallbacks","touchStartTime","isScrolling","currentTranslate","startTranslate","allowThresholdMove","focusableElements","lastClickTime","clickTimeout","velocities","allowMomentumBounce","startMoving","evCache","allowClick","allowTouchMove","touches","startX","startY","currentX","currentY","diff","imagesToLoad","imagesLoaded","prototypeGroup","protoMethod","$hoK65","$5NIfu","$1c280aeb2839a22d$export$2e2bcd8739ae039","$3bd3f193ccd5630c$var$isObject","obj","$3bd3f193ccd5630c$export$8b58be045bf06082","src","key","$3bd3f193ccd5630c$export$3fdcb9b4d81368d8","body","removeEventListener","activeElement","blur","nodeName","getElementById","createEvent","initEvent","children","childNodes","setAttribute","getElementsByTagName","createElementNS","importNode","location","hash","host","hostname","href","origin","pathname","protocol","search","$3bd3f193ccd5630c$export$f65ca476c09acec0","doc","$3bd3f193ccd5630c$export$8582633f185c62bb","navigator","history","replaceState","pushState","go","back","CustomEvent","getComputedStyle","getPropertyValue","Image","Date","screen","setTimeout","clearTimeout","matchMedia","requestAnimationFrame","callback","cancelAnimationFrame","id","$3bd3f193ccd5630c$export$38b2d434cce3ea22","win","window","$1338f5f0d60fe216$export$8694e5c03a4df8e6","object","e1","$1338f5f0d60fe216$export$bdd553fddd433dcb","delay","$1338f5f0d60fe216$export$461939dd4422153","now","$1338f5f0d60fe216$export$5ec402b7fcf74398","axis","getWindow","matrix","curTransform","transformMatrix","curStyle","currentStyle","$1338f5f0d60fe216$export$3735103072e4a80","WebKitCSSMatrix","transform","webkitTransform","map","a","replace","MozTransform","OTransform","MsTransform","msTransform","m41","parseFloat","m42","$1338f5f0d60fe216$export$a6cdc56e425d0d0a","o","$1338f5f0d60fe216$export$8b58be045bf06082","to","noExtend","nextSource","node","HTMLElement","nodeType","keysArray","nextIndex","len","nextKey","desc","getOwnPropertyDescriptor","enumerable","$1338f5f0d60fe216$export$a607267f322101fd","varName","varValue","setProperty","$1338f5f0d60fe216$export$a5dd2b4b1a116d6d","targetPosition","side","startPosition","time","startTime","duration","scrollSnapType","cssModeFrameID","isOutOfBound","animate","getTime","easeProgress","cos","PI","currentPosition","scrollTo","overflow","$1338f5f0d60fe216$export$616841b86f802685","$1338f5f0d60fe216$export$eb846d859f2895e6","selector","matches","$1338f5f0d60fe216$export$c8a8987d4410bf2d","tag","classes","$1338f5f0d60fe216$export$d7820ec56f35bbaa","box","getBoundingClientRect","clientTop","clientLeft","scrollTop","scrollY","scrollLeft","scrollX","top","left","$1338f5f0d60fe216$export$392b9fa9626e91e0","prevEls","previousElementSibling","prev","$1338f5f0d60fe216$export$b245807c30cf5df8","nextEls","nextElementSibling","next","$1338f5f0d60fe216$export$4184470d4bd0f986","prop","$1338f5f0d60fe216$export$371885c503a01623","child","previousSibling","$1338f5f0d60fe216$export$aedc7b608ca8e855","parents","parent","parentElement","$1338f5f0d60fe216$export$6b974c5889da0bb5","fireCallBack","$1338f5f0d60fe216$export$863f37913038cf77","includeMargins","offsetWidth","$f745992e8d1b1180$var$support","$f745992e8d1b1180$export$d61c7b85ff180578","smoothScroll","documentElement","touch","DocumentTouch","$f745992e8d1b1180$var$calcSupport","$33c7356d035118c5$var$deviceCached","$33c7356d035118c5$export$30c823bc834d6ab4","overrides","platform","ua","ios","android","screenWidth","screenHeight","match","ipad","ipod","iphone","windows","macos","os","$33c7356d035118c5$var$calcDevice","$f7ea505fdac53fb2$var$browser","$f7ea505fdac53fb2$export$89e15fc796a4a429","needPerspectiveFix","isSafari","String","includes","major","minor","num","Number","isWebView","test","$f7ea505fdac53fb2$var$calcBrowser","$caa86f81f75e9730$export$2e2bcd8739ae039","observer","animationFrame","resizeHandler","orientationChangeHandler","resizeObserver","ResizeObserver","entries","newWidth","newHeight","contentBoxSize","contentRect","inlineSize","blockSize","observe","unobserve","$4393da3adccaa7db$export$2e2bcd8739ae039","observers","attach","options","MutationObserver","WebkitMutationObserver","mutations","__preventObserver__","observerUpdate","attributes","childList","characterData","observeParents","observeSlideChildren","containerParents","elementParents","disconnect","splice","$26f00b4681ced12e$export$2e2bcd8739ae039","events","handler","priority","self","method","event","onceHandler","__emitterProxy","apply","offAny","eventHandler","data","context","unshift","$gXfEI","$2effa18fdcd4ebca$export$2e2bcd8739ae039","$fdMLQ","$56ZNO","$hIP6N","$dW6z4","$5P2Nk","$1kvfj","$KG4bf","$9VeMF","$c57e4cf0a3cc0e9b$export$2e2bcd8739ae039","clientWidth","clientHeight","parseInt","isNaN","$b14de6c650ce395b$export$2e2bcd8739ae039","getDirectionLabel","property","marginRight","getDirectionPropertyValue","label","isVirtual","previousSlidesLength","slidesLength","offsetBefore","slidesOffsetBefore","offsetAfter","slidesOffsetAfter","previousSnapGridLength","previousSlidesGridLength","spaceBetween","slidePosition","prevSlideSize","virtualSize","marginLeft","marginBottom","marginTop","cssMode","setCSSProperty","gridEnabled","grid","rows","initSlides","shouldResetSlideSize","slide","updateSlide","slideStyles","currentTransform","currentWebKitTransform","roundLengths","elementOuterSize","paddingLeft","paddingRight","boxSizing","floor","abs","slidesPerGroupSkip","effect","setWrapperSize","updateWrapperSize","newSlidesGrid","slidesGridItem","groups","ceil","slidesAfter","groupSize","_","slideIndex","centeredSlidesBounds","allSlidesSize","slideSizeValue","maxSnap","snap","centerInsufficientSlides","allSlidesOffset","snapIndex","addToSnapGrid","addToSlidesGrid","v","watchSlidesProgress","updateSlidesOffset","backFaceHiddenClass","hasClassBackfaceClassAdded","contains","maxBackfaceHiddenSlides","$3b8d73f2acfa0ea0$export$2e2bcd8739ae039","activeSlides","setTransition","getSlideByIndex","visibleSlides","offsetHeight","$ce6e30db971b8f6a$export$2e2bcd8739ae039","minusOffset","offsetLeft","offsetTop","swiperSlideOffset","$a255c8b825922753$export$2e2bcd8739ae039","offsetCenter","visibleSlidesIndexes","slideOffset","slideProgress","originalSlideProgress","slideBefore","slideAfter","originalProgress","$43d3e22542fd4c38$export$2e2bcd8739ae039","multiplier","translatesDiff","progressLoop","wasBeginning","wasEnd","isBeginningRounded","isEndRounded","lastSlideIndex","firstSlideTranslate","lastSlideTranslate","translateMax","translateAbs","updateSlidesProgress","$0f7fe5860e74601f$export$2e2bcd8739ae039","getFilteredSlide","activeSlide","nextSlide","elementNextAll","prevSlide","elementPrevAll","$08c4ed821325a44e$export$2e2bcd8739ae039","newActiveIndex","previousIndex","previousRealIndex","previousSnapIndex","getVirtualRealIndex","aIndex","normalizeSlideIndex","$08c4ed821325a44e$export$81ecffcda7ad6ebb","skip","realIndex1","$543214d309191af3$export$54749c0631f34ffc","closest","lazyEl","lazyPreloaderClass","$543214d309191af3$var$unlazy","$543214d309191af3$export$513ccb98c53b8039","amount","lazyPreloadPrevNext","slideIndexLastInView","rewind","$7394e7bbbcd710e0$export$2e2bcd8739ae039","slideFound","clickedSlide","clickedIndex","slideToClickedSlide","$1vNo4","$ff3f3346f9416381$export$2e2bcd8739ae039","$kCYKF","$7THKu","$dzDR0","$dVcfr","$119efefc5c17e954$export$2e2bcd8739ae039","virtualTranslate","getTranslate","$f0467b48c9fa9010$export$2e2bcd8739ae039","byController","x","y","newProgress","$5bff9b105f3a15ca$export$2e2bcd8739ae039","$9e1d7562301634ad$export$2e2bcd8739ae039","$a22a1974ce4a087e$export$2e2bcd8739ae039","runCallbacks","translateBounds","internal","preventInteractionOnTransition","isH","animateCSSModeScroll","behavior","onTranslateToWrapperTransitionEnd","$kR0Vg","$3bfe96c57afe6ca0$export$2e2bcd8739ae039","$488q8","$99Zle","$f2e9791e5099a2fd$export$2e2bcd8739ae039","transitionDuration","$4aOW6","$301e70f0ee5514cd$export$2e2bcd8739ae039","step","$309f9b76d4fd47ea$export$2e2bcd8739ae039","$6ab48978240ea54a$export$2e2bcd8739ae039","$OZIeq","$d7398976190fd90b$export$2e2bcd8739ae039","$cGTS6","$7Y909","$3B7dt","$dhKLJ","$fn7l8","$hk5na","$09948a6d2dc2571f$export$2e2bcd8739ae039","initial","normalizedTranslate","normalizedGrid","normalizedGridNext","transitionStart","transitionEnd","t","_immediateVirtual","_cssModeVirtualInitialSet","onSlideToWrapperTransitionEnd","$93d4bf3a931cd83e$export$2e2bcd8739ae039","newIndex","$5cd51e7a21111153$export$2e2bcd8739ae039","perGroup","slidesPerGroupAuto","increment","loopPreventsSliding","loopFix","_clientLeft","$29ea6cd54fa440bc$export$2e2bcd8739ae039","normalize","val","normalizedSnapGrid","prevSnap","prevSnapIndex","prevIndex","lastIndex","$9ac1243abd623ac0$export$2e2bcd8739ae039","$b30eb28584e91039$export$2e2bcd8739ae039","threshold","currentSnap","$c9c878d368de6346$export$2e2bcd8739ae039","slideToIndex","slideSelector","loopedSlides","nextTick","$3Gh7G","$7ea6f47a36945eb6$export$2e2bcd8739ae039","$7AnfI","$5gsL1","$2ae2939469a141d4$export$2e2bcd8739ae039","slideRealIndex","$585deea5b955cef7$export$2e2bcd8739ae039","activeSlideIndex","byMousewheel","prependSlidesIndexes","appendSlidesIndexes","isNext","isPrev","slidesPrepended","slidesAppended","swiperLoopMoveDOM","prepend","currentSlideTranslate","slideToLoop","controller","control","loopParams","c","$3d54c101ba970f47$export$2e2bcd8739ae039","newSlidesOrder","swiperSlideIndex","$3mSh2","$012177cdd3ce0659$export$2e2bcd8739ae039","$aozqy","$273d86d6596c268d$export$2e2bcd8739ae039","moving","simulateTouch","isLocked","touchEventsTarget","cursor","$7917a06587c5c882$export$2e2bcd8739ae039","$f9d4708c1dfbfc0b$var$dummyEventAttached","$f9d4708c1dfbfc0b$var$dummyEventListener","$f9d4708c1dfbfc0b$var$events","capture","nested","domMethod","swiperMethod","onTouchStart","passive","onTouchMove","onTouchEnd","preventClicks","preventClicksPropagation","onClick","onScroll","updateOnWindowResize","$kXZZT","onLoad","$f9d4708c1dfbfc0b$export$2e2bcd8739ae039","$97DRT","$ex2Z8","$1OTa3","$19FtL","$35dR0","$1jcRQ","$6a43b17d59f348c6$export$2e2bcd8739ae039","pointerType","originalEvent","targetEl","which","button","swipingClassHasValue","noSwipingClass","eventPath","composedPath","path","noSwipingSelector","isTargetShadow","noSwiping","base","__closestFrom","assignedSlot","found","getRootNode","$6a43b17d59f348c6$var$closestElement","swipeHandler","pageX","pageY","edgeSwipeDetection","iOSEdgeSwipeDetection","edgeSwipeThreshold","iOSEdgeSwipeThreshold","innerWidth","preventDefault","swipeDirection","shouldPreventDefault","touchStartPreventDefault","touchStartForcePreventDefault","isContentEditable","$02baf1653270db8e$export$2e2bcd8739ae039","pointerIndex","findIndex","cachedEv","pointerId","targetTouch","preventedByNestedSwiper","prevX","prevY","touchReleaseOnEdges","targetTouches","diffX","diffY","sqrt","touchAngle","atan2","zoom","cancelable","touchMoveStopPropagation","stopPropagation","touchesDiff","previousX","previousY","oneWayMovement","touchRatio","prevTouchesDirection","touchesDirection","isLoop","evt","bubbles","dispatchEvent","loopFixed","disableParentSwiper","resistanceRatio","resistance","followFinger","$15353fd53fa0afb1$export$2e2bcd8739ae039","type","touchEndTime","timeDiff","pathTree","updateClickedSlide","currentPos","stopIndex","rewindFirstIndex","rewindLastIndex","ratio","longSwipesMs","longSwipes","longSwipesRatio","shortSwipes","$f43968ae768025a8$export$2e2bcd8739ae039","isVirtualLoop","autoplay","running","paused","resizeTimeout","resume","$23ec95d99b99a94a$export$2e2bcd8739ae039","stopImmediatePropagation","$0d76ce9bb77be3f2$export$2e2bcd8739ae039","$0f418bff419545b4$export$2e2bcd8739ae039","$bGu4B","$ff999bdc5ea561ff$export$2e2bcd8739ae039","$7ogML","$881af1db6e44c2b5$var$isGridEnabled","$881af1db6e44c2b5$export$2e2bcd8739ae039","breakpoint","getBreakpoint","breakpointsBase","currentBreakpoint","breakpointParams","wasMultiRow","isMultiRow","wasEnabled","fill","wasModuleEnabled","isModuleEnabled","directionChanged","needsReLoop","isEnabled","$5617cb898a0f8fe0$export$2e2bcd8739ae039","currentHeight","innerHeight","points","point","minRatio","substr","value","sort","b","$g0Bml","$73a2aa00ea89ae97$export$2e2bcd8739ae039","$8Ubu7","$ba79a0353521e453$export$2e2bcd8739ae039","suffixes","prefix","resultClasses","item","$ba79a0353521e453$var$prepareClasses","autoheight","centered","$67bc7655f50fd7fe$export$2e2bcd8739ae039","$c71e4cd26750bb38$export$2e2bcd8739ae039","wasLocked","lastSlideRightEdge","$69cbdaf801d551aa$export$2e2bcd8739ae039","url","uniqueNavElements","passiveListeners","$4902d140bb7ee8d5$export$2e2bcd8739ae039","moduleParamName","moduleParams","auto","$kYZkc","$73df5eb817a37a3a$export$2e2bcd8739ae039","hideOnClick","disabledClass","hiddenClass","lockClass","navigationDisabledClass","makeElementsArray","getEl","res","toggleEl","disabled","subEl","tagName","onPrevClick","slidePrev","onNextClick","slideNext","initButton","destroyButton","_s","pagination","clickable","isHidden","toggle","$f468fb17181f9684$export$2e2bcd8739ae039","checkProps","$73166865f7b54cd7$export$2e2bcd8739ae039","$f4c91b3b7f316ab7$export$2e2bcd8739ae039","appendElement","tempDOM","innerHTML","$2813cfd83c41305e$export$2e2bcd8739ae039","prependElement","$18636735d4558718$export$2e2bcd8739ae039","activeIndexBuffer","baseLength","prependSlide","appendSlide","slidesBuffer","currentSlide","$716dd64e8af94877$export$2e2bcd8739ae039","slidesIndexes","indexToRemove","$09cd9ab98ba19d8c$export$2e2bcd8739ae039","removeSlide","$972bb72b4792baa3$export$2e2bcd8739ae039","overwriteParams","perspective","recreateShadows","getEffectParams","requireUpdateOnVirtual","overwriteParamsResult","slideShadows","$a3fe64242580cf29$export$2e2bcd8739ae039","effectParams","transformEl","getSlideTransformEl","backfaceVisibility","$32bf8419d687a016$export$2e2bcd8739ae039","transformElements","allSlides","transitionEndTarget","eventTriggered","parentNode","getSlide","elementTransitionEnd","$aa588c71d5569b8d$export$2e2bcd8739ae039","shadowClass","shadowContainer"],"version":3,"file":"cart.02b2a6f7.js.map"}